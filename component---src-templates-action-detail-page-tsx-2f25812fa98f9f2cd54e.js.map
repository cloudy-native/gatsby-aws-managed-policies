{"version":3,"file":"component---src-templates-action-detail-page-tsx-2f25812fa98f9f2cd54e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@chakra-ui/icons/dist/chunk-G6T6CBSV.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/icons/dist/chunk-XEKRR764.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/button/dist/chunk-DA7QIPTJ.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/layout/dist/chunk-NEK3OOAM.mjs","webpack://gatsby-starter-default/./src/hooks/usePagination.ts","webpack://gatsby-starter-default/./node_modules/@chakra-ui/card/dist/chunk-HAZMUPV3.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/card/dist/chunk-YQO7BFFX.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/card/dist/chunk-2EW3JUUD.mjs","webpack://gatsby-starter-default/./node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","webpack://gatsby-starter-default/./src/components/policy-link.tsx","webpack://gatsby-starter-default/./src/components/policy-card.tsx","webpack://gatsby-starter-default/./src/components/policy-card-grid.tsx","webpack://gatsby-starter-default/./src/components/service.tsx","webpack://gatsby-starter-default/./src/components/services-list.tsx","webpack://gatsby-starter-default/./src/templates/action-detail-page.tsx","webpack://gatsby-starter-default/./node_modules/@chakra-ui/layout/dist/chunk-NTCQBYKE.mjs"],"sourcesContent":["'use client'\n\n// src/ArrowBack.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ArrowBackIcon = createIcon({\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\",\n  displayName: \"ArrowBackIcon\"\n});\n\nexport {\n  ArrowBackIcon\n};\n//# sourceMappingURL=chunk-G6T6CBSV.mjs.map","'use client'\n\n// src/ArrowForward.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ArrowForwardIcon = createIcon({\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\",\n  displayName: \"ArrowForwardIcon\"\n});\n\nexport {\n  ArrowForwardIcon\n};\n//# sourceMappingURL=chunk-XEKRR764.mjs.map","'use client'\nimport {\n  ButtonGroupProvider\n} from \"./chunk-T6ZDZOLO.mjs\";\n\n// src/button-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef(\n  function ButtonGroup2(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props;\n    const _className = cx(\"chakra-button__group\", className);\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled]\n    );\n    let groupStyles = {\n      display: \"inline-flex\",\n      ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n    };\n    const isVertical = orientation === \"vertical\";\n    return /* @__PURE__ */ jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        className: _className,\n        \"data-attached\": isAttached ? \"\" : void 0,\n        \"data-orientation\": orientation,\n        flexDir: isVertical ? \"column\" : void 0,\n        ...rest\n      }\n    ) });\n  }\n);\nButtonGroup.displayName = \"ButtonGroup\";\n\nexport {\n  ButtonGroup\n};\n//# sourceMappingURL=chunk-DA7QIPTJ.mjs.map","'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-NEK3OOAM.mjs.map","import { useState } from \"react\";\n\nfunction usePagination<T>(items: T[], pageLimit: number) {\n    const [pageNumber, setPageNumber] = useState(0);\n    const pageCount = Math.ceil(items.length / pageLimit);\n\n    const changePage = (pN: number) => {\n        setPageNumber(pN);\n    };\n\n    const pageData = () => {\n        const s = pageNumber * pageLimit;\n        const e = s + pageLimit;\n        \n        return items.slice(s, e);\n    };\n\n    const nextPage = () => {\n        setPageNumber(Math.min(pageNumber + 1, pageCount - 1));\n    };\n\n    const previousPage = () => {\n        setPageNumber(Math.max(pageNumber - 1, 0));\n    };\n\n    return {\n        pageNumber,\n        pageCount,\n        changePage,\n        pageData,\n        nextPage,\n        previousPage,\n    };\n}\n\nexport default usePagination;\n","'use client'\n\n// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n//# sourceMappingURL=chunk-HAZMUPV3.mjs.map","'use client'\nimport {\n  CardStylesProvider\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n//# sourceMappingURL=chunk-YQO7BFFX.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n//# sourceMappingURL=chunk-2EW3JUUD.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","import { Button } from '@chakra-ui/react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport React from 'react';\nimport { PolicyNode } from '../model';\n\nfunction PolicyLink({ policyNode }: { policyNode: PolicyNode }) {\n  const {\n    policy: { PolicyName }\n  } = policyNode;\n\n  return (\n    <Button as={GatsbyLink} size={'sm'} to={`/${PolicyName}`}>\n      {PolicyName}\n    </Button>\n  );\n}\n\nexport default PolicyLink;\n","import {\n  Card,\n  CardBody,\n  CardHeader,\n  Text,\n  VStack\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { PolicyNode } from '../model';\nimport PolicyLink from './policy-link';\nimport ServicesList from './services-list';\n\nfunction PolicyCard({policyNode}) {\n  const {policy} = policyNode\n\n  return (\n    <Card>\n      <CardHeader>\n        <VStack alignItems=\"flex-start\">\n          <PolicyLink policyNode={policyNode} />\n          <Text fontSize=\"sm\">{policy.PolicyName}</Text>\n        </VStack>\n      </CardHeader>\n      <CardBody>\n        <ServicesList services={policyNode.services} />\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default PolicyCard;\n","import { ArrowBackIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  ButtonGroup,\n  Flex,\n  HStack,\n  SimpleGrid,\n  Spacer,\n  Text,\n  VStack\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport usePagination from '../hooks/usePagination';\nimport { PolicyNode } from '../model';\nimport PolicyCard from './policy-card';\n\nfunction Pagination({\n  items,\n  pageLimit,\n  setPageItems\n}: {\n  items: PolicyNode[];\n  pageLimit: number;\n  setPageItems;\n}) {\n  const { pageNumber, changePage, pageData, nextPage, previousPage } =\n    usePagination(items, pageLimit);\n\n  useEffect(() => {\n    setPageItems(pageData);\n  }, [pageNumber]);\n\n  const data = pageData();\n  const firstPolicy = data[0].policy.PolicyName;\n  const lastPolicy = data[data.length - 1].policy.PolicyName;\n\n  return (\n    <>\n      <VStack alignItems=\"flex-start\">\n        <ButtonGroup size={'xs'}>\n          <Button leftIcon={<ArrowBackIcon />} onClick={previousPage}>\n            Prev Page\n          </Button>\n          <Text>{pageNumber + 1}</Text>\n          <Button rightIcon={<ArrowForwardIcon />} onClick={nextPage}>\n            Next Page\n          </Button>\n        </ButtonGroup>\n        <HStack>\n          <Text as=\"b\">{firstPolicy}</Text>\n          <Text>…</Text>\n          <Text as=\"b\">{lastPolicy}</Text>\n        </HStack>\n      </VStack>\n    </>\n  );\n}\n\nfunction PolicyCardGrid({ policyNodes }: { policyNodes: PolicyNode[] }) {\n  const [pageItems, setPageItems] = useState<PolicyNode[]>([]);\n\n  return (\n    <VStack spacing={4} align=\"stretch\">\n      <Pagination\n        items={policyNodes}\n        pageLimit={48}\n        setPageItems={setPageItems}\n      />\n      <SimpleGrid columns={{ sm: 1, md: 2 }} spacing={2}>\n        {pageItems.map((policyNode) => (\n          <PolicyCard\n            key={policyNode.policy.PolicyName}\n            policyNode={policyNode}\n          />\n        ))}\n      </SimpleGrid>\n    </VStack>\n  );\n}\n\nexport default PolicyCardGrid;\n","import { Button } from '@chakra-ui/react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport React from 'react';\n\nfunction Service({ service }) {\n  return (\n    <>\n      {\n        service === '*'\n          ? <Button disabled size=\"xs\" mr={1} mb={1}>\n            {service}\n          </Button>\n          : <Button as={GatsbyLink} to={`/service/${service}`} size=\"xs\" mr={1} mb={1}>\n            {service}\n          </Button>\n      }\n    </>\n  );\n}\n\nexport default Service;\n\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport Service from './service';\n\nfunction ServicesList({ services }: { services: string[] }) {\n  return (\n    <Box>\n      {services.map((service) => (\n        <Service key={service} service={service} />\n      ))}\n    </Box>\n  );\n}\n\nexport default ServicesList;\n","import { Heading, VStack } from '@chakra-ui/react';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport PolicyCardGrid from '../components/policy-card-grid';\nimport { PolicyNode } from '../model';\n\nfunction ActionDetailPage({ data, classes, pageContext }) {\n  const policyNodes: PolicyNode[] = data.allPolicyMetadata.nodes;\n\n  return (\n    <VStack align=\"stretch\" spacing={5}>\n      <Heading size=\"2xl\">\n        Managed Policies for Action: {pageContext.Action}\n      </Heading>\n\n      <PolicyCardGrid policyNodes={policyNodes} />\n    </VStack>\n  );\n}\n\nexport default ActionDetailPage;\n\nexport const pageQuery = graphql`\n  query ($Action: String) {\n    allPolicyMetadata(\n      filter: {actions: {in: [$Action]}}\n      sort: {policy: {PolicyName: ASC}}\n    ) {\n      nodes {\n        services\n        actions\n        policy {\n          PolicyName\n          PolicyId\n          Arn\n          Path\n          DefaultVersionId\n          AttachmentCount\n          PermissionsBoundaryUsageCount\n          IsAttachable\n          Description\n          CreateDate\n          UpdateDate\n        }\n      }\n    }\n  }\n`;\n","'use client'\nimport {\n  Stack\n} from \"./chunk-ZHMYA64R.mjs\";\n\n// src/stack/v-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport {\n  VStack\n};\n//# sourceMappingURL=chunk-NTCQBYKE.mjs.map"],"names":["ArrowBackIcon","d","displayName","ArrowForwardIcon","attachedStyles","horizontal","borderEndRadius","borderRadius","borderStartRadius","vertical","borderBottomRadius","borderTopRadius","gapStyles","spacing","marginStart","marginTop","ButtonGroup","props","ref","size","colorScheme","variant","className","isAttached","isDisabled","orientation","rest","_className","cx","context","useMemo","groupStyles","display","isVertical","jsx","value","children","div","role","__css","flexDir","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","styles","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","SimpleGrid","columns","spacingX","spacingY","minChildWidth","theme","width","_value","n","widthToColumns","count","items","pageLimit","pageNumber","setPageNumber","useState","pageCount","Math","ceil","length","changePage","pN","pageData","s","e","slice","nextPage","min","previousPage","max","CardStylesProvider","useCardStyles","Card","direction","justify","align","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","CardHeader","header","CardBody","body","_ref","policyNode","policy","PolicyName","React","Button","as","GatsbyLink","to","VStack","PolicyLink","Text","fontSize","ServicesList","services","Pagination","setPageItems","usePagination","useEffect","data","firstPolicy","lastPolicy","leftIcon","onClick","rightIcon","HStack","_ref2","policyNodes","pageItems","sm","md","map","PolicyCard","key","service","disabled","mr","mb","Box","Service","classes","pageContext","allPolicyMetadata","nodes","Heading","Action","PolicyCardGrid"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-404-tsx-48498e76bc93a04635ae.js","mappings":"6JAKA,SAASA,EAAGC,GAAsC,IAADC,EAAA,IAApC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAOL,EAC7C,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAcRL,GAAeI,EAAKE,aAAaN,YACnB,QAApBD,EAAGK,EAAKE,oBAAY,IAAAP,GAAjBA,EAAmBI,MAExC,OACEI,EAAAA,cAAAA,EAAAA,SAAA,KA8CJ,CAEAV,EAAIW,aAAe,CACjBP,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,yECxEA,UATqBS,IACnBF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACV,EAAAA,EAAG,CAACM,MAAM,mBACXI,EAAAA,cAACG,EAAAA,EAAO,KAAC,kBACTH,EAAAA,cAACI,EAAAA,EAAI,CAACC,SAAS,KAAKC,GAAI,GAAG,2D","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/404.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <></>\n    // <Helmet >\n    //   <title>{title}</title>\n    //   <meta name=\"description\" content={metaDescription} />\n    // </Helmet>\n      // htmlAttributes={{\n      //   lang\n      // }}\n      // title={title}\n      // titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      // meta={[\n      //   {\n      //     name: `description`,\n      //     content: metaDescription\n      //   },\n      //   {\n      //     property: `og:title`,\n      //     content: title\n      //   },\n      //   {\n      //     property: `og:description`,\n      //     content: metaDescription\n      //   },\n      //   {\n      //     property: `og:type`,\n      //     content: `website`\n      //   },\n      //   {\n      //     name: `twitter:card`,\n      //     content: `summary`\n      //   },\n      //   {\n      //     name: `twitter:creator`,\n      //     content: site.siteMetadata?.author || ``\n      //   },\n      //   {\n      //     name: `twitter:title`,\n      //     content: title\n      //   },\n      //   {\n      //     name: `twitter:description`,\n      //     content: metaDescription\n      //   }\n      // ].concat(meta)}\n    // />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import { Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <Heading>404: Not Found</Heading>\n    <Text fontSize=\"xl\" my={5}>\n      You just hit a route that doesn&#39;t exist... the sadness.\n    </Text>\n  </>\n);\nexport default NotFoundPage;\n"],"names":["SEO","_ref","_site$siteMetadata","description","lang","meta","title","site","useStaticQuery","siteMetadata","React","defaultProps","NotFoundPage","Heading","Text","fontSize","my"],"sourceRoot":""}
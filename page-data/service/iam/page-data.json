{"componentChunkName":"component---src-templates-service-detail-page-tsx","path":"/service/iam/","result":{"pageContext":{"service":"iam","policyData":[{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMarketplaceFullAccess","PolicyName":"AWSMarketplaceFullAccess","PolicyId":"ANPAI2DV5ULJSO2FYVPYG","Path":"/","Description":"Provides the ability to subscribe and unsubscribe to AWS Marketplace software, allows users to manage Marketplace software instances from the Marketplace 'Your Software' page, and provides administrative access to EC2.","DefaultVersionId":"v3"},"document":[{"Action":["aws-marketplace:*","cloudformation:CreateStack","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:List*","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DeleteSecurityGroup","ec2:DescribeAccountAttributes","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVpcs","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CopyImage","ec2:DeregisterImage","ec2:DescribeSnapshots","ec2:DeleteSnapshot","ec2:CreateImage","ec2:DescribeInstanceStatus","ssm:GetAutomationExecution","ssm:UpdateDocumentDefaultVersion","ssm:CreateDocument","ssm:StartAutomationExecution","ssm:ListDocuments","ssm:UpdateDocument","ssm:DescribeDocument","sns:ListTopics","sns:GetTopicAttributes","sns:CreateTopic","iam:GetRole","iam:GetInstanceProfile","iam:ListRoles","iam:ListInstanceProfiles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListBucket","s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*image-build*"]},{"Action":["sns:Publish","sns:setTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:*image-build*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["aws-marketplace","cloudformation","ec2","ssm","sns","iam","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceRolePolicy","PolicyName":"ClientVPNServiceRolePolicy","PolicyId":"ANPAI2SV25KUCYQYS5N74","Path":"/aws-service-role/","Description":"Policy to enable AWS Client VPN to manage your Client VPN endpoints.","DefaultVersionId":"v5"},"document":[{"Action":["ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:DescribeSecurityGroups","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeInternetGateways","ec2:ModifyNetworkInterfaceAttribute","ec2:DeleteNetworkInterface","ec2:DescribeAccountAttributes","ds:AuthorizeApplication","ds:DescribeDirectories","ds:GetDirectoryLimits","ds:UnauthorizeApplication","logs:DescribeLogStreams","logs:CreateLogStream","logs:PutLogEvents","logs:DescribeLogGroups","acm:GetCertificate","acm:DescribeCertificate","iam:GetSAMLProvider","lambda:GetFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","ds","logs","acm","iam","lambda"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSQuickSightListIAM","PolicyName":"AWSQuickSightListIAM","PolicyId":"ANPAI3CH5UUWZN4EKGILO","Path":"/service-role/","Description":"Allow QuickSight to list IAM entities","DefaultVersionId":"v1"},"document":[{"Action":["iam:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSHealthFullAccess","PolicyName":"AWSHealthFullAccess","PolicyId":"ANPAI3CUMPCPEUPCSXC4Y","Path":"/","Description":"Allows full access to the AWS Health Apis and Notifications and the Personal Health Dashboard","DefaultVersionId":"v3"},"document":[{"Action":["organizations:EnableAWSServiceAccess","organizations:DisableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["health:*","organizations:ListAccounts","organizations:ListParents","organizations:DescribeAccount","organizations:ListDelegatedAdministrators"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations","health","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticTranscoder_ReadOnlyAccess","PolicyName":"AmazonElasticTranscoder_ReadOnlyAccess","PolicyId":"ANPAI3R3CR6KVEWD4DPFY","Path":"/","Description":"Grants users read-only access to Elastic Transcoder and list access to related services.","DefaultVersionId":"v2"},"document":[{"Action":["elastictranscoder:Read*","elastictranscoder:List*","s3:ListAllMyBuckets","s3:ListBucket","iam:ListRoles","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["elastictranscoder","s3","iam","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonRDSFullAccess","PolicyName":"AmazonRDSFullAccess","PolicyId":"ANPAI3R4QMOG6Q5A4VWVG","Path":"/","Description":"Provides full access to Amazon RDS via the AWS Management Console.","DefaultVersionId":"v8"},"document":[{"Action":["rds:*","application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","cloudwatch:DescribeAlarms","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeCoipPools","ec2:DescribeInternetGateways","ec2:DescribeLocalGatewayRouteTables","ec2:DescribeLocalGatewayRouteTableVpcAssociations","ec2:DescribeLocalGateways","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","ec2:GetCoipPoolUsage","sns:ListSubscriptions","sns:ListTopics","sns:Publish","logs:DescribeLogStreams","logs:GetLogEvents","outposts:GetOutpostInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["pi:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:pi:*:*:metrics/rds/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["rds","application-autoscaling","cloudwatch","ec2","sns","logs","outposts","pi","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/SupportUser","PolicyName":"SupportUser","PolicyId":"ANPAI3V4GSSN5SJY3P2RO","Path":"/job-function/","Description":"This policy grants permissions to troubleshoot and resolve issues in an AWS account. This policy also enables the user to contact AWS support to create and manage cases.","DefaultVersionId":"v5"},"document":[{"Action":["support:*","acm:DescribeCertificate","acm:GetCertificate","acm:List*","acm-pca:DescribeCertificateAuthority","acm-pca:ListCertificateAuthorities","apigateway:GET","autoscaling:Describe*","aws-marketplace:ViewSubscriptions","cloudformation:Describe*","cloudformation:Get*","cloudformation:List*","cloudformation:EstimateTemplateCost","cloudfront:Get*","cloudfront:List*","cloudsearch:Describe*","cloudsearch:List*","cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:LookupEvents","cloudtrail:ListTags","cloudtrail:ListPublicKeys","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","codecommit:BatchGetRepositories","codecommit:Get*","codecommit:List*","codedeploy:Batch*","codedeploy:Get*","codedeploy:List*","codepipeline:AcknowledgeJob","codepipeline:AcknowledgeThirdPartyJob","codepipeline:ListActionTypes","codepipeline:ListPipelines","codepipeline:PollForJobs","codepipeline:PollForThirdPartyJobs","codepipeline:GetPipelineState","codepipeline:GetPipeline","cognito-identity:List*","cognito-identity:LookupDeveloperIdentity","cognito-identity:Describe*","cognito-idp:Describe*","cognito-idp:List*","cognito-sync:Describe*","cognito-sync:GetBulkPublishDetails","cognito-sync:GetCognitoEvents","cognito-sync:GetIdentityPoolConfiguration","cognito-sync:List*","config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus","config:DescribeConfigRuleEvaluationStatus","config:DescribeConfigRules","config:DescribeDeliveryChannels","config:DescribeDeliveryChannelStatus","config:GetResourceConfigHistory","config:ListDiscoveredResources","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","datapipeline:ReportTaskProgress","datapipeline:ReportTaskRunnerHeartbeat","devicefarm:List*","devicefarm:Get*","directconnect:Describe*","discovery:Describe*","discovery:ListConfigurations","dms:Describe*","dms:List*","ds:DescribeDirectories","ds:DescribeSnapshots","ds:GetDirectoryLimits","ds:GetSnapshotLimits","ds:ListAuthorizedApplications","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","ec2:Describe*","ec2:DescribeHosts","ec2:describeIdentityIdFormat","ec2:DescribeIdFormat","ec2:DescribeInstanceAttribute","ec2:DescribeNatGateways","ec2:DescribeReservedInstancesModifications","ec2:DescribeTags","ecr:GetRepositoryPolicy","ecr:BatchCheckLayerAvailability","ecr:DescribeRepositories","ecr:ListImages","ecs:Describe*","ecs:List*","elasticache:Describe*","elasticache:List*","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:RequestEnvironmentInfo","elasticbeanstalk:RetrieveEnvironmentInfo","elasticbeanstalk:ValidateConfigurationSettings","elasticfilesystem:Describe*","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:List*","elastictranscoder:List*","elastictranscoder:ReadJob","elasticfilesystem:DescribeFileSystems","es:Describe*","es:List*","es:ESHttpGet","es:ESHttpHead","events:DescribeRule","events:List*","events:TestEventPattern","firehose:Describe*","firehose:List*","gamelift:List*","gamelift:Describe*","glacier:ListVaults","glacier:DescribeVault","glacier:DescribeJob","glacier:Get*","glacier:List*","iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","importexport:GetStatus","importexport:ListJobs","inspector:Describe*","inspector:List*","iot:Describe*","iot:Get*","iot:List*","kinesisanalytics:DescribeApplication","kinesisanalytics:DiscoverInputSchema","kinesisanalytics:GetApplicationState","kinesisanalytics:ListApplications","kinesis:Describe*","kinesis:Get*","kinesis:List*","kms:Describe*","kms:Get*","kms:List*","lambda:List*","lambda:Get*","logs:Describe*","logs:TestMetricFilter","machinelearning:Describe*","machinelearning:Get*","mobilehub:GetProject","mobilehub:List*","mobilehub:ValidateProject","mobilehub:VerifyServiceRole","opsworks:Describe*","rds:Describe*","rds:ListTagsForResource","redshift:Describe*","route53:Get*","route53:List*","route53domains:CheckDomainAvailability","route53domains:GetDomainDetail","route53domains:GetOperationDetail","route53domains:List*","s3:List*","sdb:GetAttributes","sdb:List*","sdb:Select*","servicecatalog:SearchProducts","servicecatalog:DescribeProduct","servicecatalog:DescribeProductView","servicecatalog:ListLaunchPaths","servicecatalog:DescribeProvisioningParameters","servicecatalog:ListRecordHistory","servicecatalog:DescribeRecord","servicecatalog:ScanProvisionedProducts","ses:Get*","ses:List*","sns:Get*","sns:List*","sqs:GetQueueAttributes","sqs:GetQueueUrl","sqs:ListQueues","sqs:ReceiveMessage","ssm:List*","ssm:Describe*","storagegateway:Describe*","storagegateway:List*","swf:Count*","swf:Describe*","swf:Get*","swf:List*","waf:Get*","waf:List*","workspaces:Describe*","workdocs:Describe*","workmail:Describe*","workmail:Get*","workspaces:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["support","acm","acm-pca","apigateway","autoscaling","aws-marketplace","cloudformation","cloudfront","cloudsearch","cloudtrail","cloudwatch","codecommit","codedeploy","codepipeline","cognito-identity","cognito-idp","cognito-sync","config","datapipeline","devicefarm","directconnect","discovery","dms","ds","dynamodb","ec2","ecr","ecs","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","es","events","firehose","gamelift","glacier","iam","importexport","inspector","iot","kinesisanalytics","kinesis","kms","lambda","logs","machinelearning","mobilehub","opsworks","rds","redshift","route53","route53domains","s3","sdb","servicecatalog","ses","sns","sqs","ssm","storagegateway","swf","waf","workspaces","workdocs","workmail"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEC2FullAccess","PolicyName":"AmazonEC2FullAccess","PolicyId":"ANPAI3VAJF5ZCRZ7MCQE6","Path":"/","Description":"Provides full access to Amazon EC2 via the AWS Management Console.","DefaultVersionId":"v5"},"document":[{"Action":["ec2:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","elasticloadbalancing","cloudwatch","autoscaling","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMQApiFullAccess","PolicyName":"AmazonMQApiFullAccess","PolicyId":"ANPAI4CMO533EBV3L2GW4","Path":"/","Description":"Provides full access to AmazonMQ via our API/SDK.","DefaultVersionId":"v2"},"document":[{"Action":["mq:*","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DetachNetworkInterface","ec2:DescribeInternetGateways","ec2:DescribeNetworkInterfaces","ec2:DescribeNetworkInterfacePermissions","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/amazonmq/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["mq","ec2","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMarketplaceImageBuildFullAccess","PolicyName":"AWSMarketplaceImageBuildFullAccess","PolicyId":"ANPAI4QBMJWC3BNHBHN6I","Path":"/","Description":"Provides full access to AWS Marketplace Private Image Build Feature. In addition to create private images, it also provides permissions to add tags to images, launch and terminate ec2 instances.","DefaultVersionId":"v2"},"document":[{"Action":["aws-marketplace:ListBuilds","aws-marketplace:StartBuild","aws-marketplace:DescribeBuilds"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*Automation*","arn:aws:iam::*:role/*Instance*"]},{"Action":["ssm:GetAutomationExecution","ssm:CreateDocument","ssm:StartAutomationExecution","ssm:ListDocuments","ssm:UpdateDocument","ssm:UpdateDocumentDefaultVersion","ssm:DescribeDocument","ec2:DeregisterImage","ec2:CopyImage","ec2:DescribeSnapshots","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DeleteSnapshot","ec2:CreateImage","ec2:RunInstances","ec2:DescribeInstanceStatus","sns:GetTopicAttributes","iam:GetRole","iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*image-build*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*:*:instance/*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:*image-build*"]}],"services":["aws-marketplace","ec2","iam","ssm","sns","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodeCommitPowerUser","PolicyName":"AWSCodeCommitPowerUser","PolicyId":"ANPAI4UIINUVGB5SEC57G","Path":"/","Description":"Provides full access to AWS CodeCommit repositories, but does not allow repository deletion.","DefaultVersionId":"v14"},"document":[{"Action":["codecommit:AssociateApprovalRuleTemplateWithRepository","codecommit:BatchAssociateApprovalRuleTemplateWithRepositories","codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories","codecommit:BatchGet*","codecommit:BatchDescribe*","codecommit:Create*","codecommit:DeleteBranch","codecommit:DeleteFile","codecommit:Describe*","codecommit:DisassociateApprovalRuleTemplateFromRepository","codecommit:EvaluatePullRequestApprovalRules","codecommit:Get*","codecommit:List*","codecommit:Merge*","codecommit:OverridePullRequestApprovalRules","codecommit:Put*","codecommit:Post*","codecommit:TagResource","codecommit:Test*","codecommit:UntagResource","codecommit:Update*","codecommit:GitPull","codecommit:GitPush"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:DisableRule","events:EnableRule","events:PutRule","events:PutTargets","events:RemoveTargets","events:ListTargetsByRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/codecommit*"]},{"Action":["sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:codecommit*"]},{"Action":["sns:ListTopics","sns:ListSubscriptionsByTopic","sns:GetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListAccessKeys","iam:ListSSHPublicKeys","iam:ListServiceSpecificCredentials"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["iam:DeleteSSHPublicKey","iam:GetSSHPublicKey","iam:ListSSHPublicKeys","iam:UpdateSSHPublicKey","iam:UploadSSHPublicKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["iam:CreateServiceSpecificCredential","iam:UpdateServiceSpecificCredential","iam:DeleteServiceSpecificCredential","iam:ResetServiceSpecificCredential"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["codestar-notifications:CreateNotificationRule","codestar-notifications:DescribeNotificationRule","codestar-notifications:UpdateNotificationRule","codestar-notifications:Subscribe","codestar-notifications:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-notifications:ListNotificationRules","codestar-notifications:ListTargets","codestar-notifications:ListTagsforResource","codestar-notifications:ListEventTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codeguru-reviewer:AssociateRepository","codeguru-reviewer:DescribeRepositoryAssociation","codeguru-reviewer:ListRepositoryAssociations","codeguru-reviewer:DisassociateRepository","codeguru-reviewer:DescribeCodeReview","codeguru-reviewer:ListCodeReviews"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer"]},{"Action":["events:PutRule","events:PutTargets","events:DeleteRule","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["chatbot:DescribeSlackChannelConfigurations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:ListConnections","codestar-connections:GetConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codestar-connections:*:*:connection/*"]}],"services":["codecommit","events","sns","lambda","iam","codestar-notifications","codeguru-reviewer","chatbot","codestar-connections"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodeCommitFullAccess","PolicyName":"AWSCodeCommitFullAccess","PolicyId":"ANPAI4VCZ3XPIZLQ5NZV2","Path":"/","Description":"Provides full access to AWS CodeCommit via the AWS Management Console.","DefaultVersionId":"v9"},"document":[{"Action":["codecommit:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:DisableRule","events:EnableRule","events:PutRule","events:PutTargets","events:RemoveTargets","events:ListTargetsByRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/codecommit*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:Subscribe","sns:Unsubscribe","sns:SetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:codecommit*"]},{"Action":["sns:ListTopics","sns:ListSubscriptionsByTopic","sns:GetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListAccessKeys","iam:ListSSHPublicKeys","iam:ListServiceSpecificCredentials"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["iam:DeleteSSHPublicKey","iam:GetSSHPublicKey","iam:ListSSHPublicKeys","iam:UpdateSSHPublicKey","iam:UploadSSHPublicKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["iam:CreateServiceSpecificCredential","iam:UpdateServiceSpecificCredential","iam:DeleteServiceSpecificCredential","iam:ResetServiceSpecificCredential"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["codestar-notifications:CreateNotificationRule","codestar-notifications:DescribeNotificationRule","codestar-notifications:UpdateNotificationRule","codestar-notifications:DeleteNotificationRule","codestar-notifications:Subscribe","codestar-notifications:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-notifications:ListNotificationRules","codestar-notifications:ListTargets","codestar-notifications:ListTagsforResource","codestar-notifications:ListEventTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:SetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:codestar-notifications*"]},{"Action":["codeguru-reviewer:AssociateRepository","codeguru-reviewer:DescribeRepositoryAssociation","codeguru-reviewer:ListRepositoryAssociations","codeguru-reviewer:DisassociateRepository","codeguru-reviewer:DescribeCodeReview","codeguru-reviewer:ListCodeReviews"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer"]},{"Action":["events:PutRule","events:PutTargets","events:DeleteRule","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["chatbot:DescribeSlackChannelConfigurations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:ListConnections","codestar-connections:GetConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codestar-connections:*:*:connection/*"]}],"services":["codecommit","events","sns","lambda","iam","codestar-notifications","codeguru-reviewer","chatbot","codestar-connections"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMSelfManageServiceSpecificCredentials","PolicyName":"IAMSelfManageServiceSpecificCredentials","PolicyId":"ANPAI4VT74EMXK2PMQJM2","Path":"/","Description":"Allows an IAM user to manage their own Service Specific Credentials.","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateServiceSpecificCredential","iam:ListServiceSpecificCredentials","iam:UpdateServiceSpecificCredential","iam:DeleteServiceSpecificCredential","iam:ResetServiceSpecificCredential"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCloud9EnvironmentMember","PolicyName":"AWSCloud9EnvironmentMember","PolicyId":"ANPAI54ULAIPVT5HFTYGK","Path":"/","Description":"Provides the ability to be invited into AWS Cloud9 shared development environments.","DefaultVersionId":"v2"},"document":[{"Action":["cloud9:GetUserSettings","cloud9:UpdateUserSettings","iam:GetUser","iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloud9:DescribeEnvironmentMemberships"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:StartSession"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:StartSession"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/*"]}],"services":["cloud9","iam","ssm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/FMSServiceRolePolicy","PolicyName":"FMSServiceRolePolicy","PolicyId":"ANPAI62NTGYJB446ACUEA","Path":"/aws-service-role/","Description":"Access policy to allow FM service linked role to perform FM-related actions on FM-managed resources within a customer AWS Organization account.","DefaultVersionId":"v18"},"document":[{"Action":["waf:UpdateWebACL","waf:DeleteWebACL","waf:GetWebACL","waf:GetRuleGroup","waf:ListSubscribedRuleGroups","waf-regional:UpdateWebACL","waf-regional:DeleteWebACL","waf-regional:GetWebACL","waf-regional:GetRuleGroup","waf-regional:ListSubscribedRuleGroups","waf-regional:ListResourcesForWebACL","waf-regional:AssociateWebACL","waf-regional:DisassociateWebACL","elasticloadbalancing:SetWebACL","apigateway:SetWebACL","elasticloadbalancing:SetSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:waf:*:*:webacl/*","arn:aws:waf-regional:*:*:webacl/*","arn:aws:waf:*:*:rulegroup/*","arn:aws:waf-regional:*:*:rulegroup/*","arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*","arn:aws:apigateway:*::/restapis/*/stages/*"]},{"Action":["wafv2:PutLoggingConfiguration","wafv2:GetLoggingConfiguration","wafv2:ListLoggingConfigurations","wafv2:DeleteLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:regional/webacl/*","arn:aws:wafv2:*:*:global/webacl/*"]},{"Action":["waf:CreateWebACL","waf-regional:CreateWebACL","waf:GetChangeToken","waf-regional:GetChangeToken"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:waf:*","arn:aws:waf-regional:*"]},{"Action":["elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["waf:PutPermissionPolicy","waf:GetPermissionPolicy","waf:DeletePermissionPolicy","waf-regional:PutPermissionPolicy","waf-regional:GetPermissionPolicy","waf-regional:DeletePermissionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:waf:*:*:webacl/*","arn:aws:waf:*:*:rulegroup/*","arn:aws:waf-regional:*:*:webacl/*","arn:aws:waf-regional:*:*:rulegroup/*"]},{"Action":["cloudfront:GetDistribution","cloudfront:UpdateDistribution","cloudfront:ListDistributionsByWebACLId","cloudfront:ListDistributions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DeleteConfigRule","config:DescribeComplianceByConfigRule","config:DescribeConfigRuleEvaluationStatus","config:DescribeConfigRules","config:GetComplianceDetailsByConfigRule","config:PutConfigRule","config:StartConfigRulesEvaluation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/fms.amazonaws.com/*"]},{"Action":["config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus","config:PutConfigurationRecorder","config:StartConfigurationRecorder","config:PutDeliveryChannel","config:DescribeDeliveryChannels","config:DescribeDeliveryChannelStatus","config:GetComplianceSummaryByConfigRule","config:GetDiscoveredResourceCounts","config:PutEvaluations","config:SelectResourceConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/fms.amazonaws.com/AWSServiceRoleForFMS"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAccounts","organizations:DescribeOrganizationalUnit","organizations:ListChildren","organizations:ListRoots","organizations:ListParents","organizations:ListOrganizationalUnitsForParent","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["shield:CreateProtection","shield:DeleteProtection","shield:DescribeProtection","shield:ListProtections","shield:ListAttacks","shield:CreateSubscription","shield:DescribeSubscription","shield:GetSubscriptionState","shield:DescribeDRTAccess","shield:DescribeEmergencyContactSettings","shield:UpdateEmergencyContactSettings","elasticloadbalancing:DescribeLoadBalancers","ec2:DescribeAddresses"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:DeleteSecurityGroup","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:UpdateSecurityGroupRuleDescriptionsEgress","ec2:UpdateSecurityGroupRuleDescriptionsIngress","ec2:DescribeNetworkInterfaceAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateSecurityGroup","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeStaleSecurityGroups","ec2:DescribeNetworkInterfaces","ec2:ModifyNetworkInterfaceAttribute","ec2:DescribeVpcs","ec2:DescribeVpcPeeringConnections"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["wafv2:TagResource","wafv2:ListResourcesForWebACL","wafv2:AssociateWebACL","wafv2:ListTagsForResource","wafv2:UntagResource","wafv2:GetWebACL","wafv2:DisassociateFirewallManager","wafv2:DeleteWebACL","wafv2:DisassociateWebACL"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:global/webacl/*","arn:aws:wafv2:*:*:regional/webacl/*"]},{"Action":["wafv2:UpdateWebACL","wafv2:CreateWebACL","wafv2:DeleteFirewallManagerRuleGroups","wafv2:PutFirewallManagerRuleGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:global/webacl/*","arn:aws:wafv2:*:*:regional/webacl/*","arn:aws:wafv2:*:*:global/rulegroup/*","arn:aws:wafv2:*:*:regional/rulegroup/*","arn:aws:wafv2:*:*:global/managedruleset/*","arn:aws:wafv2:*:*:regional/managedruleset/*","arn:aws:wafv2:*:*:global/ipset/*","arn:aws:wafv2:*:*:regional/ipset/*","arn:aws:wafv2:*:*:global/regexpatternset/*","arn:aws:wafv2:*:*:regional/regexpatternset/*"]},{"Action":["wafv2:PutPermissionPolicy","wafv2:GetPermissionPolicy","wafv2:DeletePermissionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:global/rulegroup/*","arn:aws:wafv2:*:*:regional/rulegroup/*"]},{"Action":["cloudfront:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["wafv2:GetWebACLForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:regional/webacl/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:route-table/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*"]},{"Action":["ec2:DeleteRouteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:route-table/*"]},{"Action":["ec2:AssociateRouteTable","ec2:CreateSubnet","ec2:CreateRouteTable","ec2:DeleteSubnet","ec2:DisassociateRouteTable","ec2:ReplaceRouteTableAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInternetGateways","ec2:DescribeRouteTables","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVpcEndpoints"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ram:*:*:resource-share/*"]},{"Action":["ram:AssociateResourceShare","ram:UpdateResourceShare","ram:DeleteResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ram:*:*:resource-share/*"]},{"Action":["ram:CreateResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:GetResourceShareAssociations","ram:GetResourceShares"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["network-firewall:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["network-firewall:AssociateSubnets","network-firewall:CreateFirewall","network-firewall:CreateFirewallPolicy","network-firewall:DisassociateSubnets","network-firewall:UpdateFirewallDeleteProtection","network-firewall:UpdateFirewallPolicy","network-firewall:UpdateFirewallPolicyChangeProtection","network-firewall:UpdateSubnetChangeProtection","network-firewall:AssociateFirewallPolicy","network-firewall:DescribeFirewall","network-firewall:DescribeFirewallPolicy","network-firewall:DescribeRuleGroup","network-firewall:ListFirewallPolicies","network-firewall:ListFirewalls","network-firewall:ListRuleGroups","network-firewall:PutResourcePolicy","network-firewall:DescribeResourcePolicy","network-firewall:DeleteResourcePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["network-firewall:DeleteFirewallPolicy","network-firewall:DeleteFirewall"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:ListLogDeliveries"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53resolver:ListFirewallRuleGroupAssociations","route53resolver:ListTagsForResource","route53resolver:ListFirewallRuleGroups","route53resolver:GetFirewallRuleGroupAssociation","route53resolver:GetFirewallRuleGroup","route53resolver:GetFirewallRuleGroupPolicy","route53resolver:PutFirewallRuleGroupPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53resolver:UpdateFirewallRuleGroupAssociation","route53resolver:DisassociateFirewallRuleGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:route53resolver:*:*:firewall-rule-group-association/*"]},{"Action":["route53resolver:AssociateFirewallRuleGroup","route53resolver:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:route53resolver:*:*:firewall-rule-group-association/*"]}],"services":["waf","waf-regional","elasticloadbalancing","apigateway","wafv2","cloudfront","config","iam","organizations","shield","ec2","ram","network-firewall","logs","route53resolver"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambdaFullAccess","PolicyName":"AWSLambdaFullAccess","PolicyId":"ANPAI6E2CYYMI4XI7AA5K","Path":"/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html. Provides full access to Lambda, S3, DynamoDB, CloudWatch Metrics and Logs.","DefaultVersionId":"v8"},"document":[{"Action":["cloudformation:DescribeChangeSet","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:GetTemplate","cloudformation:ListStackResources","cloudwatch:*","cognito-identity:ListIdentityPools","cognito-sync:GetCognitoEvents","cognito-sync:SetCognitoEvents","dynamodb:*","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","events:*","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","iam:PassRole","iot:AttachPrincipalPolicy","iot:AttachThingPrincipal","iot:CreateKeysAndCertificate","iot:CreatePolicy","iot:CreateThing","iot:CreateTopicRule","iot:DescribeEndpoint","iot:GetTopicRule","iot:ListPolicies","iot:ListThings","iot:ListTopicRules","iot:ReplaceTopicRule","kinesis:DescribeStream","kinesis:ListStreams","kinesis:PutRecord","kms:ListAliases","lambda:*","logs:*","s3:*","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Publish","sns:Subscribe","sns:Unsubscribe","sqs:ListQueues","sqs:SendMessage","tag:GetResources","xray:PutTelemetryRecords","xray:PutTraceSegments"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","cloudwatch","cognito-identity","cognito-sync","dynamodb","ec2","events","iam","iot","kinesis","kms","lambda","logs","s3","sns","sqs","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMFullAccess","PolicyName":"IAMFullAccess","PolicyId":"ANPAI7XKCFMBPM3QQRRVQ","Path":"/","Description":"Provides full access to IAM via the AWS Management Console.","DefaultVersionId":"v2"},"document":[{"Action":["iam:*","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribePolicy","organizations:ListChildren","organizations:ListParents","organizations:ListPoliciesForTarget","organizations:ListRoots","organizations:ListPolicies","organizations:ListTargetsForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonInspectorFullAccess","PolicyName":"AmazonInspectorFullAccess","PolicyId":"ANPAI7Y6NTA27NWNA5U5E","Path":"/","Description":"Provides full access to Amazon Inspector.","DefaultVersionId":"v5"},"document":[{"Action":["inspector:*","ec2:DescribeInstances","ec2:DescribeTags","sns:ListTopics","events:DescribeRule","events:ListRuleNamesByTarget"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/inspector.amazonaws.com/AWSServiceRoleForAmazonInspector"]}],"services":["inspector","ec2","sns","events","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess","PolicyName":"AmazonElastiCacheFullAccess","PolicyId":"ANPAIA2V44CPHAUAAECKG","Path":"/","Description":"Provides full access to Amazon ElastiCache via the AWS Management Console.","DefaultVersionId":"v2"},"document":[{"Action":["elasticache:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/elasticache.amazonaws.com/AWSServiceRoleForElastiCache"]}],"services":["elasticache","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAgentlessDiscoveryService","PolicyName":"AWSAgentlessDiscoveryService","PolicyId":"ANPAIA3DIL7BYQ35ISM4K","Path":"/","Description":"Provides access for the Discovery Agentless Connector to register with AWS Application Discovery Service.","DefaultVersionId":"v2"},"document":[{"Action":["awsconnector:RegisterConnector","awsconnector:GetConnectorHealth"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::connector-platform-upgrade-info/*","arn:aws:s3:::connector-platform-upgrade-info","arn:aws:s3:::connector-platform-upgrade-bundles/*","arn:aws:s3:::connector-platform-upgrade-bundles","arn:aws:s3:::connector-platform-release-notes/*","arn:aws:s3:::connector-platform-release-notes","arn:aws:s3:::prod.agentless.discovery.connector.upgrade/*","arn:aws:s3:::prod.agentless.discovery.connector.upgrade"]},{"Action":["s3:PutObject","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::import-to-ec2-connector-debug-logs/*"]},{"Action":["SNS:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:metrics-sns-topic-for-*"]},{"Action":["Discovery:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["arsenal:RegisterOnPremisesAgent"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["mgh:GetHomeRegion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["awsconnector","iam","s3","SNS","Discovery","arsenal","mgh"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonForecastFullAccess","PolicyName":"AmazonForecastFullAccess","PolicyId":"ANPAIAKOTFNTUECQVU7C4","Path":"/","Description":"Gives access to all actions for Amazon Forecast","DefaultVersionId":"v1"},"document":[{"Action":["forecast:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["forecast","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/TranslateFullAccess","PolicyName":"TranslateFullAccess","PolicyId":"ANPAIAPOAEI2VFQYUK5RY","Path":"/","Description":"Provides full access to Amazon Translate.","DefaultVersionId":"v2"},"document":[{"Action":["translate:*","comprehend:DetectDominantLanguage","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation","iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["translate","comprehend","cloudwatch","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AutoScalingFullAccess","PolicyName":"AutoScalingFullAccess","PolicyId":"ANPAIAWRCSJDDXDXGPCFU","Path":"/","Description":"Provides full access to Auto Scaling.","DefaultVersionId":"v2"},"document":[{"Action":["autoscaling:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeLaunchTemplateVersions","ec2:DescribePlacementGroups","ec2:DescribeSecurityGroups","ec2:DescribeSpotInstanceRequests","ec2:DescribeSubnets","ec2:DescribeVpcClassicLink"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudwatch","ec2","elasticloadbalancing","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy","PolicyName":"AmazonEKSClusterPolicy","PolicyId":"ANPAIBTLDQMIC6UOIGFWA","Path":"/","Description":"This policy provides Kubernetes the permissions it requires to manage resources on your behalf. Kubernetes requires Ec2:CreateTags permissions to place identifying information on EC2 resources including but not limited to Instances, Security Groups, and Elastic Network Interfaces. ","DefaultVersionId":"v4"},"document":[{"Action":["autoscaling:DescribeAutoScalingGroups","autoscaling:UpdateAutoScalingGroup","ec2:AttachVolume","ec2:AuthorizeSecurityGroupIngress","ec2:CreateRoute","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:CreateVolume","ec2:DeleteRoute","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DescribeInstances","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVolumes","ec2:DescribeVolumesModifications","ec2:DescribeVpcs","ec2:DescribeDhcpOptions","ec2:DescribeNetworkInterfaces","ec2:DetachVolume","ec2:ModifyInstanceAttribute","ec2:ModifyVolume","ec2:RevokeSecurityGroupIngress","elasticloadbalancing:AddTags","elasticloadbalancing:ApplySecurityGroupsToLoadBalancer","elasticloadbalancing:AttachLoadBalancerToSubnets","elasticloadbalancing:ConfigureHealthCheck","elasticloadbalancing:CreateListener","elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:CreateLoadBalancerListeners","elasticloadbalancing:CreateLoadBalancerPolicy","elasticloadbalancing:CreateTargetGroup","elasticloadbalancing:DeleteListener","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DeleteLoadBalancerListeners","elasticloadbalancing:DeleteTargetGroup","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DeregisterTargets","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroupAttributes","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeTargetHealth","elasticloadbalancing:DetachLoadBalancerFromSubnets","elasticloadbalancing:ModifyListener","elasticloadbalancing:ModifyLoadBalancerAttributes","elasticloadbalancing:ModifyTargetGroup","elasticloadbalancing:ModifyTargetGroupAttributes","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:RegisterTargets","elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer","elasticloadbalancing:SetLoadBalancerPoliciesOfListener","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","ec2","elasticloadbalancing","kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMobileHub_ReadOnly","PolicyName":"AWSMobileHub_ReadOnly","PolicyId":"ANPAIBXVYVL3PWQFBZFGW","Path":"/","Description":"This policy may be attached to any User, Role, or Group, in order to grant users permission to list and view projects in AWS Mobile Hub. This also includes permissions to generate and download sample mobile app source code for each Mobile Hub project. It does not allow the user to modify any configuration for any Mobile Hub project.","DefaultVersionId":"v10"},"document":[{"Action":["dynamodb:DescribeTable","iam:ListSAMLProviders","lambda:ListFunctions","sns:ListTopics","lex:GetIntent","lex:GetIntents","lex:GetSlotType","lex:GetSlotTypes","lex:GetBot","lex:GetBots","lex:GetBotAlias","lex:GetBotAliases","mobilehub:ExportProject","mobilehub:GenerateProjectParameters","mobilehub:GetProject","mobilehub:SynchronizeProject","mobilehub:GetProjectSnapshot","mobilehub:ListProjectSnapshots","mobilehub:ListAvailableConnectors","mobilehub:ListAvailableFeatures","mobilehub:ListAvailableRegions","mobilehub:ListProjects","mobilehub:ValidateProject","mobilehub:VerifyServiceRole","mobilehub:DescribeBundle","mobilehub:ExportBundle","mobilehub:ListBundles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*/aws-my-sample-app*.zip"]}],"services":["dynamodb","iam","lambda","sns","lex","mobilehub","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AutoScalingServiceRolePolicy","PolicyName":"AutoScalingServiceRolePolicy","PolicyId":"ANPAIC5D2V7MRWBMHGD7G","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by Auto Scaling","DefaultVersionId":"v5"},"document":[{"Action":["ec2:AttachClassicLinkVpc","ec2:CancelSpotInstanceRequests","ec2:CreateFleet","ec2:CreateTags","ec2:DeleteTags","ec2:Describe*","ec2:DetachClassicLinkVpc","ec2:ModifyInstanceAttribute","ec2:RequestSpotInstances","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:Register*","elasticloadbalancing:Deregister*","elasticloadbalancing:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule","events:PutTargets","events:RemoveTargets","events:DeleteRule","events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","elasticloadbalancing","cloudwatch","sns","events"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticTranscoder_FullAccess","PolicyName":"AmazonElasticTranscoder_FullAccess","PolicyId":"ANPAICFT6XVF3RSR4E7JG","Path":"/","Description":"Grants users full access to Elastic Transcoder and the access to associated services that is required for full Elastic Transcoder functionality.","DefaultVersionId":"v2"},"document":[{"Action":["elastictranscoder:*","s3:ListAllMyBuckets","s3:ListBucket","iam:ListRoles","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["elastictranscoder","s3","iam","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/ViewOnlyAccess","PolicyName":"ViewOnlyAccess","PolicyId":"ANPAID22R6XPJATWOFDK6","Path":"/job-function/","Description":"This policy grants permissions to view resources and basic metadata across all AWS services. ","DefaultVersionId":"v11"},"document":[{"Action":["acm:ListCertificates","athena:List*","aws-marketplace:ViewSubscriptions","autoscaling:Describe*","batch:ListJobs","clouddirectory:ListAppliedSchemaArns","clouddirectory:ListDevelopmentSchemaArns","clouddirectory:ListDirectories","clouddirectory:ListPublishedSchemaArns","cloudformation:List*","cloudformation:DescribeStacks","cloudfront:List*","cloudhsm:ListAvailableZones","cloudhsm:ListLunaClients","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudsearch:List*","cloudsearch:DescribeDomains","cloudtrail:DescribeTrails","cloudtrail:LookupEvents","cloudwatch:List*","cloudwatch:Get*","codebuild:ListBuilds*","codebuild:ListProjects","codecommit:List*","codedeploy:List*","codedeploy:Get*","codepipeline:ListPipelines","codestar:List*","cognito-idp:List*","cognito-identity:ListIdentities","cognito-identity:ListIdentityPools","cognito-sync:ListDatasets","connect:List*","config:List*","config:Describe*","datapipeline:ListPipelines","datapipeline:DescribePipelines","datapipeline:GetAccountLimits","dax:DescribeClusters","dax:DescribeDefaultParameters","dax:DescribeEvents","dax:DescribeParameterGroups","dax:DescribeParameters","dax:DescribeSubnetGroups","dax:ListTags","devicefarm:List*","directconnect:Describe*","discovery:List*","dms:List*","ds:DescribeDirectories","dynamodb:DescribeBackup","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeGlobalTableSettings","dynamodb:DescribeLimits","dynamodb:DescribeReservedCapacity","dynamodb:DescribeReservedCapacityOfferings","dynamodb:DescribeStream","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeBundleTasks","ec2:DescribeClassicLinkInstances","ec2:DescribeConversionTasks","ec2:DescribeCustomerGateways","ec2:DescribeDhcpOptions","ec2:DescribeExportTasks","ec2:DescribeFlowLogs","ec2:DescribeHost*","ec2:DescribeIdentityIdFormat","ec2:DescribeIdFormat","ec2:DescribeImage*","ec2:DescribeImport*","ec2:DescribeInstance*","ec2:DescribeInternetGateways","ec2:DescribeKeyPairs","ec2:DescribeMovingAddresses","ec2:DescribeNatGateways","ec2:DescribeNetwork*","ec2:DescribePlacementGroups","ec2:DescribePrefixLists","ec2:DescribeRegions","ec2:DescribeReserved*","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSnapshot*","ec2:DescribeSpot*","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVolume*","ec2:DescribeVpc*","ec2:DescribeVpnGateways","ecr:DescribeRepositories","ecr:ListImages","ecs:List*","ecs:Describe*","elasticache:Describe*","elasticbeanstalk:DescribeApplicationVersions","elasticbeanstalk:DescribeApplications","elasticbeanstalk:DescribeEnvironments","elasticbeanstalk:ListAvailableSolutionStacks","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroups","elasticfilesystem:DescribeFileSystems","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeTargetHealth","elasticmapreduce:List*","elastictranscoder:List*","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","events:ListRuleNamesByTarget","events:ListRules","events:ListTargetsByRule","firehose:List*","firehose:DescribeDeliveryStream","fsx:DescribeFileSystems","gamelift:List*","glacier:List*","greengrass:List*","iam:List*","iam:GetAccountSummary","iam:GetLoginProfile","importexport:ListJobs","inspector:List*","iot:List*","kinesis:ListStreams","kinesisanalytics:ListApplications","kms:ListKeys","lambda:List*","lex:GetBotAliases","lex:GetBotChannelAssociations","lex:GetBots","lex:GetBotVersions","lex:GetIntents","lex:GetIntentVersions","lex:GetSlotTypes","lex:GetSlotTypeVersions","lex:GetUtterancesView","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetInstances","lightsail:GetInstanceSnapshots","lightsail:GetKeyPair","lightsail:GetRegions","lightsail:GetStaticIps","lightsail:IsVpcPeered","logs:Describe*","machinelearning:Describe*","mobilehub:ListAvailableFeatures","mobilehub:ListAvailableRegions","mobilehub:ListProjects","opsworks:Describe*","opsworks-cm:Describe*","organizations:List*","outposts:GetOutpost","outposts:GetOutpostInstanceTypes","outposts:ListOutposts","outposts:ListSites","outposts:ListTagsForResource","mobiletargeting:GetApplicationSettings","mobiletargeting:GetCampaigns","mobiletargeting:GetImportJobs","mobiletargeting:GetSegments","polly:Describe*","polly:List*","rds:Describe*","redshift:DescribeClusters","redshift:DescribeEvents","redshift:ViewQueriesInConsole","route53:List*","route53:Get*","route53domains:List*","route53resolver:Get*","route53resolver:List*","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:Describe*","sagemaker:List*","sdb:List*","servicecatalog:List*","ses:List*","shield:List*","states:ListActivities","states:ListStateMachines","sns:List*","sqs:ListQueues","ssm:ListAssociations","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListLocalDisks","storagegateway:ListVolumeRecoveryPoints","storagegateway:ListVolumes","swf:List*","trustedadvisor:Describe*","waf:List*","waf-regional:List*","wafv2:List*","workdocs:DescribeAvailableDirectories","workdocs:DescribeInstances","workmail:Describe*","workspaces:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["acm","athena","aws-marketplace","autoscaling","batch","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-idp","cognito-identity","cognito-sync","connect","config","datapipeline","dax","devicefarm","directconnect","discovery","dms","ds","dynamodb","ec2","ecr","ecs","elasticache","elasticbeanstalk","elasticloadbalancing","elasticfilesystem","elasticmapreduce","elastictranscoder","es","events","firehose","fsx","gamelift","glacier","greengrass","iam","importexport","inspector","iot","kinesis","kinesisanalytics","kms","lambda","lex","lightsail","logs","machinelearning","mobilehub","opsworks","opsworks-cm","organizations","outposts","mobiletargeting","polly","rds","redshift","route53","route53domains","route53resolver","s3","sagemaker","sdb","servicecatalog","ses","shield","states","sns","sqs","ssm","storagegateway","swf","trustedadvisor","waf","waf-regional","wafv2","workdocs","workmail","workspaces"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole","PolicyName":"AmazonElasticMapReduceRole","PolicyId":"ANPAIDI2BQT2LKXZG36TW","Path":"/service-role/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-managed-iam-policies.html.  Default policy for the Amazon Elastic MapReduce service role.","DefaultVersionId":"v10"},"document":[{"Action":["ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CancelSpotInstanceRequests","ec2:CreateFleet","ec2:CreateLaunchTemplate","ec2:CreateNetworkInterface","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:DeleteLaunchTemplate","ec2:DeleteNetworkInterface","ec2:DeleteSecurityGroup","ec2:DeleteTags","ec2:DescribeAvailabilityZones","ec2:DescribeAccountAttributes","ec2:DescribeDhcpOptions","ec2:DescribeImages","ec2:DescribeInstanceStatus","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeLaunchTemplates","ec2:DescribeNetworkAcls","ec2:DescribeNetworkInterfaces","ec2:DescribePrefixLists","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSpotInstanceRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpoints","ec2:DescribeVpcEndpointServices","ec2:DescribeVpcs","ec2:DetachNetworkInterface","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:RequestSpotInstances","ec2:RevokeSecurityGroupEgress","ec2:RunInstances","ec2:TerminateInstances","ec2:DeleteVolume","ec2:DescribeVolumeStatus","ec2:DescribeVolumes","ec2:DetachVolume","iam:GetRole","iam:GetRolePolicy","iam:ListInstanceProfiles","iam:ListRolePolicies","iam:PassRole","s3:CreateBucket","s3:Get*","s3:List*","sdb:BatchPutAttributes","sdb:Select","sqs:CreateQueue","sqs:Delete*","sqs:GetQueue*","sqs:PurgeQueue","sqs:ReceiveMessage","cloudwatch:PutMetricAlarm","cloudwatch:DescribeAlarms","cloudwatch:DeleteAlarms","application-autoscaling:RegisterScalableTarget","application-autoscaling:DeregisterScalableTarget","application-autoscaling:PutScalingPolicy","application-autoscaling:DeleteScalingPolicy","application-autoscaling:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot*"]}],"services":["ec2","iam","s3","sdb","sqs","cloudwatch","application-autoscaling"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess","PolicyName":"ElasticLoadBalancingFullAccess","PolicyId":"ANPAIDPMLA3IUIOQCISJ4","Path":"/","Description":"Provides full access to Amazon ElasticLoadBalancing, and limited access to other services necessary to provide ElasticLoadBalancing features.","DefaultVersionId":"v5"},"document":[{"Action":["elasticloadbalancing:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeInternetGateways","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcClassicLink","ec2:DescribeInstances","ec2:DescribeNetworkInterfaces","ec2:DescribeClassicLinkInstances","ec2:DescribeRouteTables","ec2:DescribeCoipPools","ec2:GetCoipPoolUsage","cognito-idp:DescribeUserPoolClient"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["elasticloadbalancing","ec2","cognito-idp","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess","PolicyName":"AmazonEC2ContainerRegistryFullAccess","PolicyId":"ANPAIESRL7KD7IIVF6V4W","Path":"/","Description":"Provides administrative access to Amazon ECR resources","DefaultVersionId":"v3"},"document":[{"Action":["ecr:*","cloudtrail:LookupEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ecr","cloudtrail","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonFSxFullAccess","PolicyName":"AmazonFSxFullAccess","PolicyId":"ANPAIEUV6Z2X4VNZRVB5I","Path":"/","Description":"Provides full access to Amazon FSx and access to related AWS services.","DefaultVersionId":"v2"},"document":[{"Action":["ds:DescribeDirectories","fsx:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/fsx/*:log-group:*"]},{"Action":["firehose:PutRecord"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:firehose:*:*:deliverystream/aws-fsx-*"]}],"services":["ds","fsx","iam","logs","firehose"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/DatabaseAdministrator","PolicyName":"DatabaseAdministrator","PolicyId":"ANPAIGBMAW4VUQKOQNVT6","Path":"/job-function/","Description":"Grants full access permissions to AWS services and actions required to set up and configure AWS database services.","DefaultVersionId":"v2"},"document":[{"Action":["cloudwatch:DeleteAlarms","cloudwatch:Describe*","cloudwatch:DisableAlarmActions","cloudwatch:EnableAlarmActions","cloudwatch:Get*","cloudwatch:List*","cloudwatch:PutMetricAlarm","datapipeline:ActivatePipeline","datapipeline:CreatePipeline","datapipeline:DeletePipeline","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:PutPipelineDefinition","datapipeline:QueryObjects","dynamodb:*","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","elasticache:*","iam:ListRoles","iam:GetRole","kms:ListKeys","lambda:CreateEventSourceMapping","lambda:CreateFunction","lambda:DeleteEventSourceMapping","lambda:DeleteFunction","lambda:GetFunctionConfiguration","lambda:ListEventSourceMappings","lambda:ListFunctions","logs:DescribeLogGroups","logs:DescribeLogStreams","logs:FilterLogEvents","logs:GetLogEvents","logs:Create*","logs:PutLogEvents","logs:PutMetricFilter","rds:*","redshift:*","s3:CreateBucket","sns:CreateTopic","sns:DeleteTopic","sns:Get*","sns:List*","sns:SetTopicAttributes","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:AbortMultipartUpload","s3:DeleteObject*","s3:Get*","s3:List*","s3:PutAccelerateConfiguration","s3:PutBucketTagging","s3:PutBucketVersioning","s3:PutBucketWebsite","s3:PutLifecycleConfiguration","s3:PutReplicationConfiguration","s3:PutObject*","s3:Replicate*","s3:RestoreObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/rds-monitoring-role","arn:aws:iam::*:role/rdbms-lambda-access","arn:aws:iam::*:role/lambda_exec_role","arn:aws:iam::*:role/lambda-dynamodb-*","arn:aws:iam::*:role/lambda-vpc-execution-role","arn:aws:iam::*:role/DataPipelineDefaultRole","arn:aws:iam::*:role/DataPipelineDefaultResourceRole"]}],"services":["cloudwatch","datapipeline","dynamodb","ec2","elasticache","iam","kms","lambda","logs","rds","redshift","s3","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSSOMasterAccountAdministrator","PolicyName":"AWSSSOMasterAccountAdministrator","PolicyId":"ANPAIHXAQZIS3GOYIETUC","Path":"/","Description":"Provides access within AWS SSO to manage AWS Organizations master and member accounts and cloud application","DefaultVersionId":"v3"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"]},{"Action":["ds:DescribeTrusts","ds:UnauthorizeApplication","ds:DescribeDirectories","ds:AuthorizeApplication","iam:ListPolicies","organizations:EnableAWSServiceAccess","organizations:ListRoots","organizations:ListAccounts","organizations:ListOrganizationalUnitsForParent","organizations:ListAccountsForParent","organizations:DescribeOrganization","organizations:ListChildren","organizations:DescribeAccount","organizations:ListParents","sso:*","sso-directory:DescribeDirectory","ds:CreateAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ds","organizations","sso","sso-directory"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/ServerMigrationServiceLaunchRole","PolicyName":"ServerMigrationServiceLaunchRole","PolicyId":"ANPAIIIAAMVUCBR2OLXZO","Path":"/service-role/","Description":"Permissions to allow the AWS Server Migration Service to create and update relevant AWS resources into the customer's AWS account for launching migrated servers and applications.","DefaultVersionId":"v4"},"document":[{"Action":["ec2:ModifyInstanceAttribute","ec2:StopInstances","ec2:StartInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:DisassociateIamInstanceProfile","ec2:AssociateIamInstanceProfile","ec2:ReplaceIamInstanceProfileAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances","ec2:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["applicationinsights:Describe*","applicationinsights:List*","cloudformation:ListStackResources","cloudformation:DescribeStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["applicationinsights:CreateApplication","applicationinsights:CreateComponent","applicationinsights:UpdateApplication","applicationinsights:DeleteApplication","applicationinsights:UpdateComponentConfiguration","applicationinsights:DeleteComponent"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:applicationinsights:*:*:application/resource-group/sms-app-*"]},{"Action":["resource-groups:CreateGroup","resource-groups:GetGroup","resource-groups:UpdateGroup","resource-groups:DeleteGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:resource-groups:*:*:group/sms-app-*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/application-insights.amazonaws.com/AWSServiceRoleForApplicationInsights"]}],"services":["ec2","iam","applicationinsights","cloudformation","resource-groups"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS","PolicyName":"AWSCodeDeployRoleForECS","PolicyId":"ANPAIIL3KXEKRGEN2HFIO","Path":"/","Description":"Provides CodeDeploy service wide access to perform an ECS blue/green deployment on your behalf. Grants full access to support services, such as  full access to read all S3 objects, invoke all Lambda functions, publish to all SNS topics within the account and update all ECS services.","DefaultVersionId":"v3"},"document":[{"Action":["ecs:DescribeServices","ecs:CreateTaskSet","ecs:UpdateServicePrimaryTaskSet","ecs:DeleteTaskSet","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:ModifyListener","elasticloadbalancing:DescribeRules","elasticloadbalancing:ModifyRule","lambda:InvokeFunction","cloudwatch:DescribeAlarms","sns:Publish","s3:GetObject","s3:GetObjectVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ecs","elasticloadbalancing","lambda","cloudwatch","sns","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSLambdaReplicator","PolicyName":"AWSLambdaReplicator","PolicyId":"ANPAIIQFXZNNLL3E2HKTG","Path":"/aws-service-role/","Description":"Grants Lambda Replicator necessary permissions to replicate functions across regions","DefaultVersionId":"v3"},"document":[{"Action":["lambda:CreateFunction","lambda:DeleteFunction","lambda:DisableReplication"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudfront:ListDistributionsByLambdaFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["lambda","iam","cloudfront"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy","PolicyName":"AWSSSOServiceRolePolicy","PolicyId":"ANPAIJ52KSWOD4GI54XP2","Path":"/aws-service-role/","Description":"Grants AWS SSO permissions to manage AWS resources, including IAM roles, policies and SAML IdP on your behalf.","DefaultVersionId":"v13"},"document":[{"Action":["iam:AttachRolePolicy","iam:CreateRole","iam:PutRolePolicy","iam:UpdateRole","iam:UpdateRoleDescription","iam:UpdateAssumeRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"]},{"Action":["iam:GetRole","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteRole","iam:DeleteRolePolicy","iam:DetachRolePolicy","iam:ListRolePolicies","iam:ListAttachedRolePolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus","iam:DeleteRole","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"]},{"Action":["iam:CreateSAMLProvider","iam:UpdateSAMLProvider"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:saml-provider/AWSSSO_*"]},{"Action":["iam:DeleteSAMLProvider","iam:GetSAMLProvider"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:saml-provider/AWSSSO_*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAccounts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ds:UnauthorizeApplication"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ds:DescribeDirectories","ds:DescribeTrusts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["identitystore:DescribeUser","identitystore:DescribeGroup","identitystore:ListGroups","identitystore:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations","ds","identitystore"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerMasterAccountRolePolicy","PolicyName":"AWSLicenseManagerMasterAccountRolePolicy","PolicyId":"ANPAIJE2NOZW2BDEHYUH2","Path":"/aws-service-role/","Description":"AWS License Manager service master account role policy","DefaultVersionId":"v3"},"document":[{"Action":["s3:GetBucketLocation","s3:ListBucket","s3:GetLifecycleConfiguration","s3:PutLifecycleConfiguration","s3:GetBucketPolicy","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["s3:AbortMultipartUpload","s3:PutObject","s3:GetObject","s3:ListBucketMultipartUploads","s3:ListMultipartUploadParts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["s3:DeleteObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*/resource_sync/*"]},{"Action":["athena:GetQueryExecution","athena:GetQueryResults","athena:StartQueryExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:GetTable","glue:GetPartition","glue:GetPartitions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeOrganization","organizations:ListAccounts","organizations:DescribeAccount","organizations:ListChildren","organizations:ListParents","organizations:ListAccountsForParent","organizations:ListRoots","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:GetResourceShares","ram:GetResourceShareAssociations","ram:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:CreateResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:AssociateResourceShare","ram:DisassociateResourceShare","ram:UpdateResourceShare","ram:DeleteResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/LicenseManagerServiceResourceDataSyncRole*"]},{"Action":["cloudformation:UpdateStack","cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LicenseManagerCrossAccountCloudDiscoveryStack/*"]},{"Action":["glue:CreateTable","glue:UpdateTable","glue:DeleteTable","glue:UpdateJob","glue:UpdateCrawler"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:crawler/LicenseManagerResourceSynDataCrawler","arn:aws:glue:*:*:job/LicenseManagerResourceSynDataProcessJob","arn:aws:glue:*:*:table/license_manager_resource_inventory_db/*","arn:aws:glue:*:*:table/license_manager_resource_sync/*","arn:aws:glue:*:*:database/license_manager_resource_inventory_db","arn:aws:glue:*:*:database/license_manager_resource_sync"]}],"services":["s3","athena","glue","organizations","ram","iam","cloudformation"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKinesisAnalyticsReadOnly","PolicyName":"AmazonKinesisAnalyticsReadOnly","PolicyId":"ANPAIJIEXZAFUK43U7ARK","Path":"/","Description":"Provides read-only access to Amazon Kinesis Analytics via the AWS Management Console.","DefaultVersionId":"v1"},"document":[{"Action":["kinesisanalytics:Describe*","kinesisanalytics:Get*","kinesisanalytics:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kinesis:DescribeStream","kinesis:ListStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["firehose:DescribeDeliveryStream","firehose:ListDeliveryStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListPolicyVersions","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["kinesisanalytics","kinesis","firehose","cloudwatch","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMobileHub_FullAccess","PolicyName":"AWSMobileHub_FullAccess","PolicyId":"ANPAIJLU43R6AGRBK76DM","Path":"/","Description":"This policy may be attached to any User, Role, or Group, in order to grant users permission to create, delete, and modify projects (and their associated AWS resources) in AWS Mobile Hub. This also includes permissions to generate and download sample mobile app source code for each Mobile Hub project.","DefaultVersionId":"v14"},"document":[{"Action":["apigateway:GET","apigateway:POST","cloudfront:GetDistribution","devicefarm:CreateProject","devicefarm:ListJobs","devicefarm:ListRuns","devicefarm:GetProject","devicefarm:GetRun","devicefarm:ListArtifacts","devicefarm:ListProjects","devicefarm:ScheduleRun","dynamodb:DescribeTable","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","iam:ListSAMLProviders","lambda:ListFunctions","sns:ListTopics","lex:GetIntent","lex:GetIntents","lex:GetSlotType","lex:GetSlotTypes","lex:GetBot","lex:GetBots","lex:GetBotAlias","lex:GetBotAliases","mobilehub:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*/aws-my-sample-app*.zip"]},{"Action":["s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*-mobilehub-*/*"]},{"Action":["s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*-mobilehub-*"]}],"services":["apigateway","cloudfront","devicefarm","dynamodb","ec2","iam","lambda","sns","lex","mobilehub","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSDataPipelineRole","PolicyName":"AWSDataPipelineRole","PolicyId":"ANPAIKCP6XS3ESGF4GLO2","Path":"/service-role/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html. Default policy for the AWS Data Pipeline service role.","DefaultVersionId":"v6"},"document":[{"Action":["cloudwatch:*","datapipeline:DescribeObjects","datapipeline:EvaluateExpression","dynamodb:BatchGetItem","dynamodb:DescribeTable","dynamodb:GetItem","dynamodb:Query","dynamodb:Scan","dynamodb:UpdateTable","ec2:AuthorizeSecurityGroupIngress","ec2:CancelSpotInstanceRequests","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:DeleteTags","ec2:Describe*","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:RequestSpotInstances","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","ec2:AuthorizeSecurityGroupEgress","ec2:DeleteSecurityGroup","ec2:RevokeSecurityGroupEgress","ec2:DescribeNetworkInterfaces","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DetachNetworkInterface","elasticmapreduce:*","iam:GetInstanceProfile","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListInstanceProfiles","iam:PassRole","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","s3:CreateBucket","s3:DeleteObject","s3:Get*","s3:List*","s3:Put*","sdb:BatchPutAttributes","sdb:Select*","sns:GetTopicAttributes","sns:ListTopics","sns:Publish","sns:Subscribe","sns:Unsubscribe","sqs:CreateQueue","sqs:Delete*","sqs:GetQueue*","sqs:PurgeQueue","sqs:ReceiveMessage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","datapipeline","dynamodb","ec2","elasticmapreduce","iam","rds","redshift","s3","sdb","sns","sqs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudWatchFullAccess","PolicyName":"CloudWatchFullAccess","PolicyId":"ANPAIKEABORKUXN6DEAZU","Path":"/","Description":"Provides full access to CloudWatch.","DefaultVersionId":"v3"},"document":[{"Action":["autoscaling:Describe*","cloudwatch:*","logs:*","sns:*","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*"]}],"services":["autoscaling","cloudwatch","logs","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonGuardDutyFullAccess","PolicyName":"AmazonGuardDutyFullAccess","PolicyId":"ANPAIKUTKSN4KC63VDQUM","Path":"/","Description":"Provides full access to use Amazon GuardDuty.","DefaultVersionId":"v2"},"document":[{"Action":["guardduty:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess","organizations:RegisterDelegatedAdministrator","organizations:ListDelegatedAdministrators","organizations:ListAWSServiceAccessForOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["guardduty","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodePipelineReadOnlyAccess","PolicyName":"AWSCodePipelineReadOnlyAccess","PolicyId":"ANPAILFKZXIBOTNC5TO2Q","Path":"/","Description":"Provides read only access to AWS CodePipeline via the AWS Management Console.","DefaultVersionId":"v9"},"document":[{"Action":["codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:GetPipelineExecution","codepipeline:ListPipelineExecutions","codepipeline:ListActionExecutions","codepipeline:ListActionTypes","codepipeline:ListPipelines","codepipeline:ListTagsForResource","iam:ListRoles","s3:GetBucketPolicy","s3:GetObject","s3:ListAllMyBuckets","s3:ListBucket","codecommit:ListBranches","codecommit:ListRepositories","codedeploy:GetApplication","codedeploy:GetDeploymentGroup","codedeploy:ListApplications","codedeploy:ListDeploymentGroups","elasticbeanstalk:DescribeApplications","elasticbeanstalk:DescribeEnvironments","lambda:GetFunctionConfiguration","lambda:ListFunctions","opsworks:DescribeApps","opsworks:DescribeLayers","opsworks:DescribeStacks","codestar-notifications:ListNotificationRules","codestar-notifications:ListEventTypes","codestar-notifications:ListTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-notifications:DescribeNotificationRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["codepipeline","iam","s3","codecommit","codedeploy","elasticbeanstalk","lambda","opsworks","codestar-notifications"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ReadOnlyAccess","PolicyName":"ReadOnlyAccess","PolicyId":"ANPAILL3HVNFSB6DCOWYQ","Path":"/","Description":"Provides read-only access to AWS services and resources.","DefaultVersionId":"v78"},"document":[{"Action":["a4b:Get*","a4b:List*","a4b:Search*","access-analyzer:GetAccessPreview","access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:GetGeneratedPolicy","access-analyzer:ListAccessPreviewFindings","access-analyzer:ListAccessPreviews","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListPolicyGenerations","access-analyzer:ListTagsForResource","access-analyzer:ValidatePolicy","acm-pca:Describe*","acm-pca:Get*","acm-pca:List*","acm:Describe*","acm:Get*","acm:List*","amplify:GetApp","amplify:GetBranch","amplify:GetDomainAssociation","amplify:GetJob","amplify:ListApps","amplify:ListBranches","amplify:ListDomainAssociations","amplify:ListJobs","apigateway:GET","application-autoscaling:Describe*","applicationinsights:Describe*","applicationinsights:List*","appmesh:Describe*","appmesh:List*","appstream:Describe*","appstream:List*","appsync:Get*","appsync:List*","athena:Batch*","athena:Get*","athena:List*","auditmanager:GetAccountStatus","auditmanager:GetAssessment","auditmanager:GetAssessmentFramework","auditmanager:GetAssessmentReportUrl","auditmanager:GetChangeLogs","auditmanager:GetControl","auditmanager:GetDelegations","auditmanager:GetEvidence","auditmanager:GetEvidenceByEvidenceFolder","auditmanager:GetEvidenceFolder","auditmanager:GetEvidenceFoldersByAssessment","auditmanager:GetEvidenceFoldersByAssessmentControl","auditmanager:GetOrganizationAdminAccount","auditmanager:GetServicesInScope","auditmanager:GetSettings","auditmanager:ListAssessmentFrameworks","auditmanager:ListAssessmentReports","auditmanager:ListAssessments","auditmanager:ListControls","auditmanager:ListKeywordsForDataSource","auditmanager:ListNotifications","auditmanager:ListTagsForResource","auditmanager:ValidateAssessmentReportIntegrity","autoscaling-plans:Describe*","autoscaling-plans:GetScalingPlanResourceForecastData","autoscaling:Describe*","aws-portal:View*","backup:Describe*","backup:Get*","backup:List*","batch:Describe*","batch:List*","braket:GetDevice","braket:GetQuantumTask","braket:SearchDevices","braket:SearchQuantumTasks","budgets:Describe*","budgets:View*","cassandra:Select","chatbot:Describe*","chatbot:Get*","chime:Get*","chime:List*","chime:Retrieve*","chime:Search*","chime:Validate*","cloud9:Describe*","cloud9:List*","clouddirectory:BatchRead","clouddirectory:Get*","clouddirectory:List*","clouddirectory:LookupPolicy","cloudformation:Describe*","cloudformation:Detect*","cloudformation:Estimate*","cloudformation:Get*","cloudformation:List*","cloudfront:Get*","cloudfront:List*","cloudhsm:Describe*","cloudhsm:Get*","cloudhsm:List*","cloudsearch:Describe*","cloudsearch:List*","cloudtrail:Describe*","cloudtrail:Get*","cloudtrail:List*","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","codeartifact:DescribeDomain","codeartifact:DescribePackageVersion","codeartifact:DescribeRepository","codeartifact:GetAuthorizationToken","codeartifact:GetDomainPermissionsPolicy","codeartifact:GetPackageVersionAsset","codeartifact:GetPackageVersionReadme","codeartifact:GetRepositoryEndpoint","codeartifact:GetRepositoryPermissionsPolicy","codeartifact:ListDomains","codeartifact:ListPackageVersionAssets","codeartifact:ListPackageVersionDependencies","codeartifact:ListPackageVersions","codeartifact:ListPackages","codeartifact:ListRepositories","codeartifact:ListRepositoriesInDomain","codeartifact:ListTagsForResource","codeartifact:ReadFromRepository","codebuild:BatchGet*","codebuild:DescribeCodeCoverages","codebuild:DescribeTestCases","codebuild:List*","codecommit:BatchGet*","codecommit:Describe*","codecommit:Get*","codecommit:GitPull","codecommit:List*","codedeploy:BatchGet*","codedeploy:Get*","codedeploy:List*","codeguru-profiler:Describe*","codeguru-profiler:Get*","codeguru-profiler:List*","codeguru-reviewer:Describe*","codeguru-reviewer:Get*","codeguru-reviewer:List*","codepipeline:Get*","codepipeline:List*","codestar-notifications:ListTargets","codestar-notifications:describeNotificationRule","codestar-notifications:listEventTypes","codestar-notifications:listNotificationRules","codestar-notifications:listTagsForResource","codestar:Describe*","codestar:Get*","codestar:List*","codestar:Verify*","cognito-identity:Describe*","cognito-identity:GetCredentialsForIdentity","cognito-identity:GetIdentityPoolRoles","cognito-identity:GetOpenIdToken","cognito-identity:GetOpenIdTokenForDeveloperIdentity","cognito-identity:List*","cognito-identity:Lookup*","cognito-idp:AdminGet*","cognito-idp:AdminList*","cognito-idp:Describe*","cognito-idp:Get*","cognito-idp:List*","cognito-sync:Describe*","cognito-sync:Get*","cognito-sync:List*","cognito-sync:QueryRecords","compute-optimizer:DescribeRecommendationExportJobs","compute-optimizer:GetAutoScalingGroupRecommendations","compute-optimizer:GetEBSVolumeRecommendations","compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEC2RecommendationProjectedMetrics","compute-optimizer:GetEnrollmentStatus","compute-optimizer:GetLambdaFunctionRecommendations","compute-optimizer:GetRecommendationSummaries","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","config:SelectAggregateResourceConfig","config:SelectResourceConfig","connect:Describe*","connect:GetFederationToken","connect:List*","dataexchange:Get*","dataexchange:List*","datapipeline:Describe*","datapipeline:EvaluateExpression","datapipeline:Get*","datapipeline:List*","datapipeline:QueryObjects","datapipeline:Validate*","datasync:Describe*","datasync:List*","dax:BatchGetItem","dax:Describe*","dax:GetItem","dax:ListTags","dax:Query","dax:Scan","deepcomposer:GetComposition","deepcomposer:GetModel","deepcomposer:GetSampleModel","deepcomposer:ListCompositions","deepcomposer:ListModels","deepcomposer:ListSampleModels","deepcomposer:ListTrainingTopics","detective:Get*","detective:List*","devicefarm:Get*","devicefarm:List*","devops-guru:DescribeAccountHealth","devops-guru:DescribeAccountOverview","devops-guru:DescribeAnomaly","devops-guru:DescribeInsight","devops-guru:DescribeResourceCollectionHealth","devops-guru:DescribeServiceIntegration","devops-guru:GetResourceCollection","devops-guru:ListAnomaliesForInsight","devops-guru:ListEvents","devops-guru:ListInsights","devops-guru:ListNotificationChannels","devops-guru:ListRecommendations","devops-guru:SearchInsights","directconnect:Describe*","discovery:Describe*","discovery:Get*","discovery:List*","dlm:Get*","dms:Describe*","dms:List*","dms:Test*","ds:Check*","ds:Describe*","ds:Get*","ds:List*","ds:Verify*","dynamodb:BatchGet*","dynamodb:Describe*","dynamodb:Get*","dynamodb:List*","dynamodb:Query","dynamodb:Scan","ec2:Describe*","ec2:Get*","ec2:SearchTransitGatewayRoutes","ec2messages:Get*","ecr-public:BatchCheckLayerAvailability","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetAuthorizationToken","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr-public:ListTagsForResource","ecr:BatchCheck*","ecr:BatchGet*","ecr:Describe*","ecr:Get*","ecr:List*","ecs:Describe*","ecs:List*","eks:Describe*","eks:List*","elasticache:Describe*","elasticache:List*","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:Request*","elasticbeanstalk:Retrieve*","elasticbeanstalk:Validate*","elasticfilesystem:Describe*","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:List*","elasticmapreduce:View*","elastictranscoder:List*","elastictranscoder:Read*","elemental-appliances-software:Get*","elemental-appliances-software:List*","es:Describe*","es:ESHttpGet","es:ESHttpHead","es:Get*","es:List*","events:Describe*","events:List*","events:Test*","firehose:Describe*","firehose:List*","fis:GetAction","fis:GetExperiment","fis:GetExperimentTemplate","fis:ListActions","fis:ListExperimentTemplates","fis:ListExperiments","fis:ListTagsForResource","fms:GetAdminAccount","fms:GetAppsList","fms:GetComplianceDetail","fms:GetNotificationChannel","fms:GetPolicy","fms:GetProtectionStatus","fms:GetProtocolsList","fms:GetViolationDetails","fms:ListAppsLists","fms:ListComplianceStatus","fms:ListMemberAccounts","fms:ListPolicies","fms:ListProtocolsLists","fms:ListTagsForResource","forecast:DescribeDataset","forecast:DescribeDatasetGroup","forecast:DescribeDatasetImportJob","forecast:DescribeForecast","forecast:DescribeForecastExportJob","forecast:DescribePredictor","forecast:DescribePredictorBacktestExportJob","forecast:GetAccuracyMetrics","forecast:ListDatasetGroups","forecast:ListDatasetImportJobs","forecast:ListDatasets","forecast:ListForecastExportJobs","forecast:ListForecasts","forecast:ListPredictorBacktestExportJobs","forecast:ListPredictors","forecast:QueryForecast","freertos:Describe*","freertos:List*","fsx:Describe*","fsx:List*","gamelift:Describe*","gamelift:Get*","gamelift:List*","gamelift:ResolveAlias","gamelift:Search*","glacier:Describe*","glacier:Get*","glacier:List*","globalaccelerator:Describe*","globalaccelerator:List*","glue:BatchGetDevEndpoints","glue:BatchGetJobs","glue:BatchGetPartition","glue:BatchGetTriggers","glue:BatchGetWorkflows","glue:CheckSchemaVersionValidity","glue:GetCatalogImportStatus","glue:GetClassifier","glue:GetClassifiers","glue:GetCrawler","glue:GetCrawlerMetrics","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabase","glue:GetDatabases","glue:GetDataflowGraph","glue:GetDevEndpoint","glue:GetDevEndpoints","glue:GetJob","glue:GetJobBookmark","glue:GetJobRun","glue:GetJobRuns","glue:GetJobs","glue:GetMLTaskRun","glue:GetMLTaskRuns","glue:GetMLTransform","glue:GetMLTransforms","glue:GetMapping","glue:GetPartition","glue:GetPartitions","glue:GetPlan","glue:GetRegistry","glue:GetResourcePolicy","glue:GetSchema","glue:GetSchemaByDefinition","glue:GetSchemaVersion","glue:GetSchemaVersionsDiff","glue:GetSecurityConfiguration","glue:GetSecurityConfigurations","glue:GetTable","glue:GetTableVersion","glue:GetTableVersions","glue:GetTables","glue:GetTags","glue:GetTrigger","glue:GetTriggers","glue:GetUserDefinedFunction","glue:GetUserDefinedFunctions","glue:GetWorkflow","glue:GetWorkflowRun","glue:GetWorkflowRunProperties","glue:GetWorkflowRuns","glue:ListCrawlers","glue:ListDevEndpoints","glue:ListJobs","glue:ListMLTransforms","glue:ListRegistries","glue:ListSchemaVersions","glue:ListSchemas","glue:ListTriggers","glue:ListWorkflows","glue:QuerySchemaVersionMetadata","greengrass:DescribeComponent","greengrass:Get*","greengrass:List*","groundstation:DescribeContact","groundstation:GetConfig","groundstation:GetDataflowEndpointGroup","groundstation:GetMinuteUsage","groundstation:GetMissionProfile","groundstation:GetSatellite","groundstation:ListConfigs","groundstation:ListContacts","groundstation:ListDataflowEndpointGroups","groundstation:ListGroundStations","groundstation:ListMissionProfiles","groundstation:ListSatellites","groundstation:ListTagsForResource","guardduty:DescribeOrganizationConfiguration","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","health:Describe*","iam:Generate*","iam:Get*","iam:List*","iam:Simulate*","imagebuilder:Get*","imagebuilder:List*","importexport:Get*","importexport:List*","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:Get*","iot:List*","iotanalytics:Describe*","iotanalytics:Get*","iotanalytics:List*","iotanalytics:SampleChannelData","iotevents:DescribeAlarm","iotevents:DescribeAlarmModel","iotevents:DescribeDetector","iotevents:DescribeDetectorModel","iotevents:DescribeInput","iotevents:DescribeLoggingOptions","iotevents:ListAlarmModelVersions","iotevents:ListAlarmModels","iotevents:ListAlarms","iotevents:ListDetectorModelVersions","iotevents:ListDetectorModels","iotevents:ListDetectors","iotevents:ListInputs","iotevents:ListTagsForResource","iotfleethub:DescribeApplication","iotfleethub:ListApplications","iotsitewise:Describe*","iotsitewise:Get*","iotsitewise:List*","iotwireless:GetDestination","iotwireless:GetDeviceProfile","iotwireless:GetPartnerAccount","iotwireless:GetServiceEndpoint","iotwireless:GetServiceProfile","iotwireless:GetWirelessDevice","iotwireless:GetWirelessDeviceStatistics","iotwireless:GetWirelessGateway","iotwireless:GetWirelessGatewayCertificate","iotwireless:GetWirelessGatewayFirmwareInformation","iotwireless:GetWirelessGatewayStatistics","iotwireless:GetWirelessGatewayTask","iotwireless:GetWirelessGatewayTaskDefinition","iotwireless:ListDestinations","iotwireless:ListDeviceProfiles","iotwireless:ListPartnerAccounts","iotwireless:ListServiceProfiles","iotwireless:ListTagsForResource","iotwireless:ListWirelessDevices","iotwireless:ListWirelessGatewayTaskDefinitions","iotwireless:ListWirelessGateways","ivs:BatchGetChannel","ivs:GetChannel","ivs:GetPlaybackKeyPair","ivs:GetRecordingConfiguration","ivs:ListChannels","ivs:ListPlaybackKeyPairs","ivs:ListRecordingConfigurations","ivs:ListStreams","ivs:ListTagsForResource","kafka:Describe*","kafka:Get*","kafka:List*","kendra:DescribeDataSource","kendra:DescribeFaq","kendra:DescribeIndex","kendra:DescribeThesaurus","kendra:ListDataSourceSyncJobs","kendra:ListDataSources","kendra:ListFaqs","kendra:ListIndices","kendra:ListTagsForResource","kendra:ListThesauri","kendra:Query","kinesis:Describe*","kinesis:Get*","kinesis:List*","kinesisanalytics:Describe*","kinesisanalytics:Discover*","kinesisanalytics:Get*","kinesisanalytics:List*","kinesisvideo:Describe*","kinesisvideo:Get*","kinesisvideo:List*","kms:Describe*","kms:Get*","kms:List*","lambda:Get*","lambda:List*","lex:Get*","license-manager:Get*","license-manager:List*","lightsail:GetActiveNames","lightsail:GetAlarms","lightsail:GetAutoSnapshots","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetCertificates","lightsail:GetCloudFormationStackRecords","lightsail:GetContainerAPIMetadata","lightsail:GetContainerImages","lightsail:GetContainerServiceDeployments","lightsail:GetContainerServiceMetricData","lightsail:GetContainerServicePowers","lightsail:GetContainerServices","lightsail:GetDisk","lightsail:GetDiskSnapshot","lightsail:GetDiskSnapshots","lightsail:GetDisks","lightsail:GetDistributionBundles","lightsail:GetDistributionLatestCacheReset","lightsail:GetDistributionMetricData","lightsail:GetDistributions","lightsail:GetDomain","lightsail:GetDomains","lightsail:GetExportSnapshotRecords","lightsail:GetInstance","lightsail:GetInstanceMetricData","lightsail:GetInstancePortStates","lightsail:GetInstanceSnapshot","lightsail:GetInstanceSnapshots","lightsail:GetInstanceState","lightsail:GetInstances","lightsail:GetKeyPair","lightsail:GetKeyPairs","lightsail:GetLoadBalancer","lightsail:GetLoadBalancerMetricData","lightsail:GetLoadBalancerTlsCertificates","lightsail:GetLoadBalancers","lightsail:GetOperation","lightsail:GetOperations","lightsail:GetOperationsForResource","lightsail:GetRegions","lightsail:GetRelationalDatabase","lightsail:GetRelationalDatabaseBlueprints","lightsail:GetRelationalDatabaseBundles","lightsail:GetRelationalDatabaseEvents","lightsail:GetRelationalDatabaseLogEvents","lightsail:GetRelationalDatabaseLogStreams","lightsail:GetRelationalDatabaseMetricData","lightsail:GetRelationalDatabaseParameters","lightsail:GetRelationalDatabaseSnapshot","lightsail:GetRelationalDatabaseSnapshots","lightsail:GetRelationalDatabases","lightsail:GetStaticIp","lightsail:GetStaticIps","lightsail:Is*","logs:Describe*","logs:FilterLogEvents","logs:Get*","logs:ListTagsLogGroup","logs:StartQuery","logs:StopQuery","logs:TestMetricFilter","lookoutvision:DescribeDataset","lookoutvision:DescribeModel","lookoutvision:DescribeProject","lookoutvision:ListDatasetEntries","lookoutvision:ListModels","lookoutvision:ListProjects","lookoutvision:ListTagsForResource","machinelearning:Describe*","machinelearning:Get*","mediaconvert:DescribeEndpoints","mediaconvert:Get*","mediaconvert:List*","mediapackage:Describe*","mediapackage:List*","mediastore:DescribeContainer","mediastore:DescribeObject","mediastore:GetContainerPolicy","mediastore:GetCorsPolicy","mediastore:GetLifecyclePolicy","mediastore:GetMetricPolicy","mediastore:GetObject","mediastore:ListContainers","mediastore:ListItems","mediastore:ListTagsForResource","mgh:Describe*","mgh:GetHomeRegion","mgh:List*","mgn:DescribeJobLogItems","mgn:DescribeJobs","mgn:DescribeReplicationConfigurationTemplates","mgn:DescribeSourceServers","mgn:GetLaunchConfiguration","mgn:GetReplicationConfiguration","mobileanalytics:Get*","mobilehub:Describe*","mobilehub:Export*","mobilehub:Generate*","mobilehub:Get*","mobilehub:List*","mobilehub:Validate*","mobilehub:Verify*","mobiletargeting:Get*","mobiletargeting:List*","mq:Describe*","mq:List*","network-firewall:DescribeFirewall","network-firewall:DescribeFirewallPolicy","network-firewall:DescribeLoggingConfiguration","network-firewall:DescribeResourcePolicy","network-firewall:DescribeRuleGroup","network-firewall:ListFirewallPolicies","network-firewall:ListFirewalls","network-firewall:ListRuleGroups","network-firewall:ListTagsForResource","networkmanager:DescribeGlobalNetworks","networkmanager:GetConnections","networkmanager:GetCustomerGatewayAssociations","networkmanager:GetDevices","networkmanager:GetLinkAssociations","networkmanager:GetLinks","networkmanager:GetSites","networkmanager:GetTransitGatewayConnectPeerAssociations","networkmanager:GetTransitGatewayRegistrations","opsworks-cm:Describe*","opsworks-cm:List*","opsworks:Describe*","opsworks:Get*","organizations:Describe*","organizations:List*","outposts:Get*","outposts:List*","personalize:Describe*","personalize:Get*","personalize:List*","pi:DescribeDimensionKeys","pi:GetResourceMetrics","polly:Describe*","polly:Get*","polly:List*","polly:SynthesizeSpeech","qldb:DescribeJournalS3Export","qldb:DescribeLedger","qldb:GetBlock","qldb:GetDigest","qldb:GetRevision","qldb:ListJournalS3Exports","qldb:ListJournalS3ExportsForLedger","qldb:ListLedgers","qldb:ListTagsForResource","ram:Get*","ram:List*","rds:Describe*","rds:Download*","rds:List*","redshift:Describe*","redshift:GetReservedNodeExchangeOfferings","redshift:View*","rekognition:CompareFaces","rekognition:Detect*","rekognition:List*","rekognition:Search*","resource-groups:Get*","resource-groups:List*","resource-groups:Search*","robomaker:BatchDescribe*","robomaker:Describe*","robomaker:Get*","robomaker:List*","route53:Get*","route53:List*","route53:Test*","route53domains:Check*","route53domains:Get*","route53domains:List*","route53domains:View*","route53resolver:Get*","route53resolver:List*","s3:DescribeJob","s3:Get*","s3:List*","sagemaker:Describe*","sagemaker:GetSearchSuggestions","sagemaker:List*","sagemaker:Search","savingsplans:DescribeSavingsPlanRates","savingsplans:DescribeSavingsPlans","savingsplans:DescribeSavingsPlansOfferingRates","savingsplans:DescribeSavingsPlansOfferings","savingsplans:ListTagsForResource","schemas:Describe*","schemas:Get*","schemas:List*","schemas:Search*","sdb:Get*","sdb:List*","sdb:Select*","secretsmanager:Describe*","secretsmanager:GetResourcePolicy","secretsmanager:List*","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:Get*","serverlessrepo:List*","serverlessrepo:SearchApplications","servicecatalog:Describe*","servicecatalog:GetApplication","servicecatalog:GetAttributeGroup","servicecatalog:List*","servicecatalog:Scan*","servicecatalog:Search*","servicediscovery:Get*","servicediscovery:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","ses:Describe*","ses:Get*","ses:List*","shield:Describe*","shield:Get*","shield:List*","signer:DescribeSigningJob","signer:GetSigningPlatform","signer:GetSigningProfile","signer:ListProfilePermissions","signer:ListSigningJobs","signer:ListSigningPlatforms","signer:ListSigningProfiles","signer:ListTagsForResource","snowball:Describe*","snowball:Get*","snowball:List*","sns:Check*","sns:Get*","sns:List*","sqs:Get*","sqs:List*","sqs:Receive*","ssm-contacts:DescribeEngagement","ssm-contacts:DescribePage","ssm-contacts:GetContact","ssm-contacts:GetContactChannel","ssm-contacts:ListContactChannels","ssm-contacts:ListContacts","ssm-contacts:ListEngagements","ssm-contacts:ListPageReceipts","ssm-contacts:ListPagesByContact","ssm-contacts:ListPagesByEngagement","ssm-incidents:GetIncidentRecord","ssm-incidents:GetReplicationSet","ssm-incidents:GetResourcePolicies","ssm-incidents:GetResponsePlan","ssm-incidents:GetTimelineEvent","ssm-incidents:ListIncidentRecords","ssm-incidents:ListRelatedItems","ssm-incidents:ListReplicationSets","ssm-incidents:ListResponsePlans","ssm-incidents:ListTagsForResource","ssm-incidents:ListTimelineEvents","ssm:Describe*","ssm:Get*","ssm:List*","sso-directory:Describe*","sso-directory:List*","sso-directory:Search*","sso:Describe*","sso:Get*","sso:List*","sso:Search*","states:Describe*","states:GetExecutionHistory","states:List*","storagegateway:Describe*","storagegateway:List*","sts:GetAccessKeyInfo","sts:GetCallerIdentity","sts:GetSessionToken","swf:Count*","swf:Describe*","swf:Get*","swf:List*","synthetics:Describe*","synthetics:Get*","synthetics:List*","tag:Get*","transcribe:Get*","transcribe:List*","transfer:Describe*","transfer:List*","transfer:TestIdentityProvider","trustedadvisor:Describe*","waf-regional:Get*","waf-regional:List*","waf:Get*","waf:List*","wafv2:CheckCapacity","wafv2:Describe*","wafv2:Get*","wafv2:List*","workdocs:CheckAlias","workdocs:Describe*","workdocs:Get*","worklink:Describe*","worklink:List*","workmail:Describe*","workmail:Get*","workmail:List*","workmail:Search*","workspaces:Describe*","xray:BatchGet*","xray:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["a4b","access-analyzer","acm-pca","acm","amplify","apigateway","application-autoscaling","applicationinsights","appmesh","appstream","appsync","athena","auditmanager","autoscaling-plans","autoscaling","aws-portal","backup","batch","braket","budgets","cassandra","chatbot","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codeartifact","codebuild","codecommit","codedeploy","codeguru-profiler","codeguru-reviewer","codepipeline","codestar-notifications","codestar","cognito-identity","cognito-idp","cognito-sync","compute-optimizer","config","connect","dataexchange","datapipeline","datasync","dax","deepcomposer","detective","devicefarm","devops-guru","directconnect","discovery","dlm","dms","ds","dynamodb","ec2","ec2messages","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","elemental-appliances-software","es","events","firehose","fis","fms","forecast","freertos","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","groundstation","guardduty","health","iam","imagebuilder","importexport","inspector","iot","iotanalytics","iotevents","iotfleethub","iotsitewise","iotwireless","ivs","kafka","kendra","kinesis","kinesisanalytics","kinesisvideo","kms","lambda","lex","license-manager","lightsail","logs","lookoutvision","machinelearning","mediaconvert","mediapackage","mediastore","mgh","mgn","mobileanalytics","mobilehub","mobiletargeting","mq","network-firewall","networkmanager","opsworks-cm","opsworks","organizations","outposts","personalize","pi","polly","qldb","ram","rds","redshift","rekognition","resource-groups","robomaker","route53","route53domains","route53resolver","s3","sagemaker","savingsplans","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicecatalog","servicediscovery","servicequotas","ses","shield","signer","snowball","sns","sqs","ssm-contacts","ssm-incidents","ssm","sso-directory","sso","states","storagegateway","sts","swf","synthetics","tag","transcribe","transfer","trustedadvisor","waf-regional","waf","wafv2","workdocs","worklink","workmail","workspaces","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AlexaForBusinessFullAccess","PolicyName":"AlexaForBusinessFullAccess","PolicyId":"ANPAILUT3JGG7WRIMVNH2","Path":"/","Description":"Grants full access to AlexaForBusiness resources and access to related AWS Services","DefaultVersionId":"v5"},"document":[{"Action":["a4b:*","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/*a4b.amazonaws.com/AWSServiceRoleForAlexaForBusiness*"]},{"Action":["secretsmanager:GetSecretValue","secretsmanager:DeleteSecret","secretsmanager:UpdateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:A4B*"]},{"Action":["secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["a4b","kms","iam","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSEC2SpotFleetServiceRolePolicy","PolicyName":"AWSEC2SpotFleetServiceRolePolicy","PolicyId":"ANPAILWCVTZD57EMYWMBO","Path":"/aws-service-role/","Description":"Allows EC2 Spot Fleet to launch and manage spot fleet instances","DefaultVersionId":"v4"},"document":[{"Action":["ec2:DescribeImages","ec2:DescribeSubnets","ec2:RequestSpotInstances","ec2:DescribeInstanceStatus","ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:spot-instances-request/*","arn:aws:ec2:*:*:spot-fleet-request/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:RegisterInstancesWithLoadBalancer"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:loadbalancer/*"]},{"Action":["elasticloadbalancing:RegisterTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:*/*"]}],"services":["ec2","iam","elasticloadbalancing"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerServiceRolePolicy","PolicyName":"AWSLicenseManagerServiceRolePolicy","PolicyId":"ANPAIM7JPETWHTYNBQSZE","Path":"/aws-service-role/","Description":"AWS License Manager service default role policy","DefaultVersionId":"v4"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/license-management.marketplace.amazonaws.com/AWSServiceRoleForMarketplaceLicenseManagement"]},{"Action":["s3:GetBucketLocation","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:aws-license-manager-service-*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","ec2:DescribeImages","ec2:DescribeHosts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:ListInventoryEntries","ssm:GetInventory","ssm:CreateAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAWSServiceAccessForOrganization","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["license-manager:GetServiceSettings","license-manager:GetLicense*","license-manager:UpdateLicenseSpecificationsForResource","license-manager:ListUsageForLicenseConfiguration","license-manager:ListDistributedGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","s3","sns","ec2","ssm","organizations","license-manager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetAutoscaleRole","PolicyName":"AmazonEC2SpotFleetAutoscaleRole","PolicyId":"ANPAIMFFRMIOBGDP2TAVE","Path":"/service-role/","Description":"Policy to enable Autoscaling for Amazon EC2 Spot Fleet","DefaultVersionId":"v3"},"document":[{"Action":["ec2:DescribeSpotFleetRequests","ec2:ModifySpotFleetRequest"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms","cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/ec2.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_EC2SpotFleetRequest"]}],"services":["ec2","cloudwatch","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataPipeline_PowerUser","PolicyName":"AWSDataPipeline_PowerUser","PolicyId":"ANPAIMXGLVY6DVR24VTYS","Path":"/","Description":"Provides full access to Data Pipeline, list access for S3, DynamoDB, Redshift, RDS, SNS, and IAM roles, and passRole access for default Roles.","DefaultVersionId":"v2"},"document":[{"Action":["s3:List*","dynamodb:DescribeTable","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","sns:ListTopics","iam:ListRoles","iam:GetRolePolicy","iam:GetInstanceProfile","iam:ListInstanceProfiles","datapipeline:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/DataPipelineDefaultResourceRole","arn:aws:iam::*:role/DataPipelineDefaultRole"]}],"services":["s3","dynamodb","rds","redshift","sns","iam","datapipeline"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSCodeStarServiceRole","PolicyName":"AWSCodeStarServiceRole","PolicyId":"ANPAIN6D4M2KD3NBOC4M4","Path":"/service-role/","Description":"DO NOT USE -  AWS CodeStar Service Role Policy which grants administrative privileges in order for CodeStar to manage IAM and other service resources on behalf of the customer.","DefaultVersionId":"v10"},"document":[{"Action":["events:PutTargets","events:RemoveTargets","events:PutRule","events:DeleteRule","events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/awscodestar-*"]},{"Action":["cloudformation:*Stack*","cloudformation:CreateChangeSet","cloudformation:ExecuteChangeSet","cloudformation:DeleteChangeSet","cloudformation:GetTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awscodestar-*","arn:aws:cloudformation:*:*:stack/awseb-*","arn:aws:cloudformation:*:*:stack/aws-cloud9-*","arn:aws:cloudformation:*:aws:transform/CodeStar*"]},{"Action":["cloudformation:GetTemplateSummary","cloudformation:DescribeChangeSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awscodestar-*/*"]},{"Action":["s3:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-codestar-*","arn:aws:s3:::aws-codestar-*/*","arn:aws:s3:::elasticbeanstalk-*","arn:aws:s3:::elasticbeanstalk-*/*"]},{"Action":["codestar:*","codecommit:*","codepipeline:*","codedeploy:*","codebuild:*","ec2:RunInstances","autoscaling:*","cloudwatch:Put*","ec2:*","elasticbeanstalk:*","elasticloadbalancing:*","iam:ListRoles","logs:*","sns:*","cloud9:CreateEnvironmentEC2","cloud9:DeleteEnvironment","cloud9:DescribeEnvironment*","cloud9:ListEnvironments"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:AttachRolePolicy","iam:CreateRole","iam:DeleteRole","iam:DeleteRolePolicy","iam:DetachRolePolicy","iam:GetRole","iam:PassRole","iam:GetRolePolicy","iam:PutRolePolicy","iam:SetDefaultPolicyVersion","iam:CreatePolicy","iam:DeletePolicy","iam:AddRoleToInstanceProfile","iam:CreateInstanceProfile","iam:DeleteInstanceProfile","iam:RemoveRoleFromInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/CodeStarWorker*","arn:aws:iam::*:policy/CodeStarWorker*","arn:aws:iam::*:instance-profile/awscodestar-*"]},{"Action":["iam:AttachUserPolicy","iam:DetachUserPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreatePolicy","iam:DeletePolicy","iam:CreatePolicyVersion","iam:DeletePolicyVersion","iam:ListEntitiesForPolicy","iam:ListPolicyVersions","iam:GetPolicy","iam:GetPolicyVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:policy/CodeStar_*"]},{"Action":["iam:ListAttachedRolePolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-codestar-service-role","arn:aws:iam::*:role/service-role/aws-codestar-service-role"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeConfigRules"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:UseConnection","codestar-connections:GetConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:PassConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["events","cloudformation","s3","codestar","codecommit","codepipeline","codedeploy","codebuild","ec2","autoscaling","cloudwatch","elasticbeanstalk","elasticloadbalancing","iam","logs","sns","cloud9","config","codestar-connections"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess","PolicyName":"AWSDirectoryServiceFullAccess","PolicyId":"ANPAINAW5ANUWTH3R4ANI","Path":"/","Description":"Provides full access to AWS Directory Service.","DefaultVersionId":"v5"},"document":[{"Action":["ds:*","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateNetworkInterface","ec2:CreateSecurityGroup","ec2:DeleteNetworkInterface","ec2:DeleteSecurityGroup","ec2:DescribeNetworkInterfaces","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:DescribeSecurityGroups","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","iam:ListRoles","organizations:ListAccountsForParent","organizations:ListRoots","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeAccount","organizations:ListOrganizationalUnitsForParent","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:SetTopicAttributes","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:DirectoryMonitoring*"]},{"Action":["organizations:EnableAWSServiceAccess","organizations:DisableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*"]}],"services":["ds","ec2","sns","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess","PolicyName":"AmazonDynamoDBFullAccess","PolicyId":"ANPAINUGF2JSOSUY76KYA","Path":"/","Description":"Provides full access to Amazon DynamoDB via the AWS Management Console.","DefaultVersionId":"v15"},"document":[{"Action":["dynamodb:*","dax:*","application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:GetMetricData","datapipeline:ActivatePipeline","datapipeline:CreatePipeline","datapipeline:DeletePipeline","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:PutPipelineDefinition","datapipeline:QueryObjects","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:ListAliases","sns:CreateTopic","sns:DeleteTopic","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Subscribe","sns:Unsubscribe","sns:SetTopicAttributes","lambda:CreateFunction","lambda:ListFunctions","lambda:ListEventSourceMappings","lambda:CreateEventSourceMapping","lambda:DeleteEventSourceMapping","lambda:GetFunctionConfiguration","lambda:DeleteFunction","resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroup","resource-groups:GetGroupQuery","resource-groups:DeleteGroup","resource-groups:CreateGroup","tag:GetResources","kinesis:ListStreams","kinesis:DescribeStream","kinesis:DescribeStreamSummary"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetInsightRuleReport"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dynamodb","dax","application-autoscaling","cloudwatch","datapipeline","ec2","iam","kms","sns","lambda","resource-groups","tag","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSRoboMakerServiceRolePolicy","PolicyName":"AWSRoboMakerServiceRolePolicy","PolicyId":"ANPAIOSFFLBBLCTKS3ATC","Path":"/","Description":"RoboMaker service policy","DefaultVersionId":"v1"},"document":[{"Action":["ec2:CreateNetworkInterfacePermission","ec2:DescribeNetworkInterfaces","ec2:DeleteNetworkInterface","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","greengrass:CreateDeployment","greengrass:CreateGroupVersion","greengrass:CreateFunctionDefinition","greengrass:CreateFunctionDefinitionVersion","greengrass:GetDeploymentStatus","greengrass:GetGroup","greengrass:GetGroupVersion","greengrass:GetCoreDefinitionVersion","greengrass:GetFunctionDefinitionVersion","greengrass:GetAssociatedRole","lambda:CreateFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:UpdateFunctionCode","lambda:GetFunction","lambda:UpdateFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:aws-robomaker-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","greengrass","lambda","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudFrontFullAccess","PolicyName":"CloudFrontFullAccess","PolicyId":"ANPAIPRV52SH6HDCCFY6U","Path":"/","Description":"Provides full access to the CloudFront console plus the ability to list Amazon S3 buckets via the AWS Management Console.","DefaultVersionId":"v6"},"document":[{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*"]},{"Action":["acm:ListCertificates","cloudfront:*","iam:ListServerCertificates","waf:ListWebACLs","waf:GetWebACL","wafv2:ListWebACLs","wafv2:GetWebACL","kinesis:ListStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kinesis:DescribeStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kinesis:*:*:*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:*"]}],"services":["s3","acm","cloudfront","iam","waf","wafv2","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCloud9Administrator","PolicyName":"AWSCloud9Administrator","PolicyId":"ANPAIQ4KWP455WDTCBGWK","Path":"/","Description":"Provides administrator access to AWS Cloud9.","DefaultVersionId":"v2"},"document":[{"Action":["cloud9:*","iam:GetUser","iam:ListUsers","ec2:DescribeVpcs","ec2:DescribeSubnets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:StartSession"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:StartSession"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/*"]}],"services":["cloud9","iam","ec2","ssm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy","PolicyName":"AWSOrganizationsServiceTrustPolicy","PolicyId":"ANPAIQH6ROMVVECFVRJPK","Path":"/aws-service-role/","Description":"A policy to allow AWS Organizations to share trust with other approved AWS Services for the purpose of simplifying customer configuration.","DefaultVersionId":"v2"},"document":[{"Action":["iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDocDBFullAccess","PolicyName":"AmazonDocDBFullAccess","PolicyId":"ANPAIQKACUF6JJHALEG5K","Path":"/","Description":"Provides full access to Amazon DocumentDB with MongoDB compatibility. Note this policy also grants full access to publish on all SNS topics within the account and full access to Amazon RDS and Amazon Neptune.","DefaultVersionId":"v1"},"document":[{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBCluster","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBInstance","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","cloudwatch","ec2","kms","logs","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSConfigRole","PolicyName":"AWSConfigRole","PolicyId":"ANPAIQRXRDRGJUA33ELIO","Path":"/service-role/","Description":"Default policy for AWS Config service role.","DefaultVersionId":"v39"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetObject","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSSOMemberAccountAdministrator","PolicyName":"AWSSSOMemberAccountAdministrator","PolicyId":"ANPAIQYHEY7KJWXZFNDPY","Path":"/","Description":"Provides access within AWS SSO to manage AWS Organizations member accounts and cloud application","DefaultVersionId":"v2"},"document":[{"Action":["ds:DescribeDirectories","ds:AuthorizeApplication","ds:UnauthorizeApplication","ds:DescribeTrusts","iam:ListPolicies","organizations:EnableAWSServiceAccess","organizations:DescribeOrganization","organizations:DescribeAccount","organizations:ListRoots","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListParents","organizations:ListChildren","organizations:ListOrganizationalUnitsForParent","sso:*","sso-directory:DescribeDirectory","ds:CreateAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ds","iam","organizations","sso","sso-directory"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole","PolicyName":"AWSGlueServiceRole","PolicyId":"ANPAIRUJCPEBPMEZFAS32","Path":"/service-role/","Description":"Policy for AWS Glue service role which allows access to related services including EC2, S3, and Cloudwatch Logs","DefaultVersionId":"v4"},"document":[{"Action":["glue:*","s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets","s3:GetBucketAcl","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","cloudwatch:PutMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::crawler-public*","arn:aws:s3:::aws-glue-*"]},{"Action":["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:instance/*"]}],"services":["glue","s3","ec2","iam","cloudwatch","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonRedshiftFullAccess","PolicyName":"AmazonRedshiftFullAccess","PolicyId":"ANPAISEKCHH4YDB46B5ZO","Path":"/","Description":"Provides full access to Amazon Redshift via the AWS Management Console.","DefaultVersionId":"v4"},"document":[{"Action":["redshift:*","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeInternetGateways","sns:CreateTopic","sns:Get*","sns:List*","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","cloudwatch:PutMetricAlarm","cloudwatch:EnableAlarmActions","cloudwatch:DisableAlarmActions","tag:GetResources","tag:UntagResources","tag:GetTagValues","tag:GetTagKeys","tag:TagResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift"]},{"Action":["redshift-data:ExecuteStatement","redshift-data:CancelStatement","redshift-data:ListStatements","redshift-data:GetStatementResult","redshift-data:DescribeStatement","redshift-data:ListDatabases","redshift-data:ListSchemas","redshift-data:ListTables","redshift-data:DescribeTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:GetSecretValue","secretsmanager:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["redshift","ec2","sns","cloudwatch","tag","iam","redshift-data","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ComprehendFullAccess","PolicyName":"ComprehendFullAccess","PolicyId":"ANPAITBM2PMWNG2P7RZEQ","Path":"/","Description":"Provides full access to Amazon Comprehend.","DefaultVersionId":"v2"},"document":[{"Action":["comprehend:*","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation","iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["comprehend","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonFSxConsoleFullAccess","PolicyName":"AmazonFSxConsoleFullAccess","PolicyId":"ANPAITDDJ23Y5UZ2WCZRQ","Path":"/","Description":"Provides full access to Amazon FSx and access to related AWS services via the AWS Management Console.","DefaultVersionId":"v4"},"document":[{"Action":["cloudwatch:DescribeAlarms","ds:DescribeDirectories","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","firehose:ListDeliveryStreams","fsx:*","kms:ListAliases","logs:DescribeLogGroups","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ds","ec2","firehose","fsx","kms","logs","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/SystemAdministrator","PolicyName":"SystemAdministrator","PolicyId":"ANPAITJPEZXCYCBXANDSW","Path":"/job-function/","Description":"Grants full access permissions necessary for resources required for application and development operations.","DefaultVersionId":"v6"},"document":[{"Action":["acm:Describe*","acm:Get*","acm:List*","acm:Request*","acm:Resend*","autoscaling:*","cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:ListPublicKeys","cloudtrail:ListTags","cloudtrail:LookupEvents","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudwatch:*","codecommit:BatchGetRepositories","codecommit:CreateBranch","codecommit:CreateRepository","codecommit:Get*","codecommit:GitPull","codecommit:GitPush","codecommit:List*","codecommit:Put*","codecommit:Test*","codecommit:Update*","codedeploy:*","codepipeline:*","config:*","ds:*","ec2:Allocate*","ec2:AssignPrivateIpAddresses*","ec2:Associate*","ec2:Allocate*","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVpnGateway","ec2:Bundle*","ec2:Cancel*","ec2:Copy*","ec2:CreateCustomerGateway","ec2:CreateDhcpOptions","ec2:CreateFlowLogs","ec2:CreateImage","ec2:CreateInstanceExportTask","ec2:CreateInternetGateway","ec2:CreateKeyPair","ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreatePlacementGroup","ec2:CreateReservedInstancesListing","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSnapshot","ec2:CreateSpotDatafeedSubscription","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVolume","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:CreateVpnConnection","ec2:CreateVpnConnectionRoute","ec2:CreateVpnGateway","ec2:DeleteFlowLogs","ec2:DeleteKeyPair","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions","ec2:DeleteNatGateway","ec2:DeleteNetworkInterface","ec2:DeletePlacementGroup","ec2:DeleteSnapshot","ec2:DeleteSpotDatafeedSubscription","ec2:DeleteSubnet","ec2:DeleteTags","ec2:DeleteVpc","ec2:DeleteVpcEndpoints","ec2:DeleteVpnConnection","ec2:DeleteVpnConnectionRoute","ec2:DeleteVpnGateway","ec2:DeregisterImage","ec2:Describe*","ec2:DetachInternetGateway","ec2:DetachNetworkInterface","ec2:DetachVpnGateway","ec2:DisableVgwRoutePropagation","ec2:DisableVpcClassicLinkDnsSupport","ec2:DisassociateAddress","ec2:DisassociateRouteTable","ec2:EnableVgwRoutePropagation","ec2:EnableVolumeIO","ec2:EnableVpcClassicLinkDnsSupport","ec2:GetConsoleOutput","ec2:GetHostReservationPurchasePreview","ec2:GetLaunchTemplateData","ec2:GetPasswordData","ec2:Import*","ec2:Modify*","ec2:MonitorInstances","ec2:MoveAddressToVpc","ec2:Purchase*","ec2:RegisterImage","ec2:Release*","ec2:Replace*","ec2:ReportInstanceStatus","ec2:Request*","ec2:Reset*","ec2:RestoreAddressToClassic","ec2:RunScheduledInstances","ec2:UnassignPrivateIpAddresses","ec2:UnmonitorInstances","ec2:UpdateSecurityGroupRuleDescriptionsEgress","ec2:UpdateSecurityGroupRuleDescriptionsIngress","elasticloadbalancing:*","events:*","iam:GetAccount*","iam:GetContextKeys*","iam:GetCredentialReport","iam:ListAccountAliases","iam:ListGroups","iam:ListOpenIDConnectProviders","iam:ListPolicies","iam:ListPoliciesGrantingServiceAccess","iam:ListRoles","iam:ListSAMLProviders","iam:ListServerCertificates","iam:Simulate*","iam:UpdateServerCertificate","iam:UpdateSigningCertificate","kinesis:ListStreams","kinesis:PutRecord","kms:CreateAlias","kms:CreateKey","kms:DeleteAlias","kms:Describe*","kms:GenerateRandom","kms:Get*","kms:List*","kms:Encrypt","kms:ReEncrypt*","lambda:Create*","lambda:Delete*","lambda:Get*","lambda:InvokeFunction","lambda:List*","lambda:PublishVersion","lambda:Update*","logs:*","rds:Describe*","rds:ListTagsForResource","route53:*","route53domains:*","ses:*","sns:*","sqs:*","trustedadvisor:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AcceptVpcPeeringConnection","ec2:AttachClassicLinkVpc","ec2:AttachVolume","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateVpcPeeringConnection","ec2:DeleteCustomerGateway","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteNetworkAcl*","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DeleteVpcPeeringConnection","ec2:DetachClassicLinkVpc","ec2:DetachVolume","ec2:DisableVpcClassicLink","ec2:EnableVpcClassicLink","ec2:GetConsoleScreenshot","ec2:RebootInstances","ec2:RejectVpcPeeringConnection","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetAccessKeyLastUsed","iam:GetGroup*","iam:GetInstanceProfile","iam:GetLoginProfile","iam:GetOpenIDConnectProvider","iam:GetPolicy*","iam:GetRole*","iam:GetSAMLProvider","iam:GetSSHPublicKey","iam:GetServerCertificate","iam:GetServiceLastAccessed*","iam:GetUser*","iam:ListAccessKeys","iam:ListAttached*","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfiles*","iam:ListMFADevices","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListSSHPublicKeys","iam:ListSigningCertificates","iam:ListUserPolicies","iam:Upload*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:ListRoles","iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/rds-monitoring-role","arn:aws:iam::*:role/ec2-sysadmin-*","arn:aws:iam::*:role/ecr-sysadmin-*","arn:aws:iam::*:role/lambda-sysadmin-*"]}],"services":["acm","autoscaling","cloudtrail","cloudwatch","codecommit","codedeploy","codepipeline","config","ds","ec2","elasticloadbalancing","events","iam","kinesis","kms","lambda","logs","rds","route53","route53domains","ses","sns","sqs","trustedadvisor","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole","PolicyName":"AmazonEC2ContainerServiceEventsRole","PolicyId":"ANPAITKFNIUAG27VSYNZ4","Path":"/service-role/","Description":"Policy to enable CloudWatch Events for EC2 Container Service","DefaultVersionId":"v2"},"document":[{"Action":["ecs:RunTask"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ecs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole","PolicyName":"AWSBatchServiceRole","PolicyId":"ANPAIUETIXPCKASQJURFE","Path":"/service-role/","Description":"Policy for AWS Batch service role which allows access to related services including EC2, Autoscaling, EC2 Container service and Cloudwatch Logs.","DefaultVersionId":"v11"},"document":[{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeInstances","ec2:DescribeInstanceAttribute","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","ec2:DescribeKeyPairs","ec2:DescribeImages","ec2:DescribeImageAttribute","ec2:DescribeSpotInstanceRequests","ec2:DescribeSpotFleetInstances","ec2:DescribeSpotFleetRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeVpcClassicLink","ec2:DescribeLaunchTemplateVersions","ec2:CreateLaunchTemplate","ec2:DeleteLaunchTemplate","ec2:RequestSpotFleet","ec2:CancelSpotFleetRequests","ec2:ModifySpotFleetRequest","ec2:TerminateInstances","ec2:RunInstances","autoscaling:DescribeAccountLimits","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeAutoScalingInstances","autoscaling:CreateLaunchConfiguration","autoscaling:CreateAutoScalingGroup","autoscaling:UpdateAutoScalingGroup","autoscaling:SetDesiredCapacity","autoscaling:DeleteLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:CreateOrUpdateTags","autoscaling:SuspendProcesses","autoscaling:PutNotificationConfiguration","autoscaling:TerminateInstanceInAutoScalingGroup","ecs:DescribeClusters","ecs:DescribeContainerInstances","ecs:DescribeTaskDefinition","ecs:DescribeTasks","ecs:ListAccountSettings","ecs:ListClusters","ecs:ListContainerInstances","ecs:ListTaskDefinitionFamilies","ecs:ListTaskDefinitions","ecs:ListTasks","ecs:CreateCluster","ecs:DeleteCluster","ecs:RegisterTaskDefinition","ecs:DeregisterTaskDefinition","ecs:RunTask","ecs:StartTask","ecs:StopTask","ecs:UpdateContainerAgent","ecs:DeregisterContainerInstance","logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents","logs:DescribeLogGroups","iam:GetInstanceProfile","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecs:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecs:*:*:task/*_Batch_*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","autoscaling","ecs","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/SecurityAudit","PolicyName":"SecurityAudit","PolicyId":"ANPAIX2T3QCXHR2OGGCTO","Path":"/","Description":"The security audit template grants access to read security configuration metadata. It is useful for software that audits the configuration of an AWS account.","DefaultVersionId":"v35"},"document":[{"Action":["access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListTagsForResource","acm-pca:ListPermissions","acm:Describe*","acm:List*","application-autoscaling:Describe*","appmesh:Describe*","appmesh:List*","appsync:List*","athena:GetWorkGroup","athena:List*","autoscaling-plans:DescribeScalingPlans","autoscaling:Describe*","batch:DescribeComputeEnvironments","batch:DescribeJobDefinitions","chime:List*","cloud9:Describe*","cloud9:ListEnvironments","clouddirectory:ListDirectories","cloudformation:DescribeStack*","cloudformation:GetStackPolicy","cloudformation:GetTemplate","cloudformation:ListStack*","cloudfront:Get*","cloudfront:List*","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudhsm:ListLunaClients","cloudsearch:DescribeDomainEndpointOptions","cloudsearch:DescribeDomains","cloudsearch:DescribeServiceAccessPolicies","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:ListTagsForResource","codebuild:ListProjects","codecommit:BatchGetRepositories","codecommit:GetBranch","codecommit:GetObjectIdentifier","codecommit:GetRepository","codecommit:GetRepositoryTriggers","codecommit:List*","codedeploy:Batch*","codedeploy:Get*","codedeploy:List*","codepipeline:GetJobDetails","codepipeline:GetPipeline","codepipeline:GetPipelineExecution","codepipeline:GetPipelineState","codepipeline:ListPipelines","codestar:Describe*","codestar:List*","cognito-identity:ListIdentityPools","cognito-idp:DescribeIdentityProvider","cognito-idp:DescribeResourceServer","cognito-idp:DescribeRiskConfiguration","cognito-idp:DescribeUserImportJob","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:DescribeUserPoolDomain","cognito-idp:ListDevices","cognito-idp:ListGroups","cognito-idp:ListIdentityProviders","cognito-idp:ListResourceServers","cognito-idp:ListTagsForResource","cognito-idp:ListUserImportJobs","cognito-idp:ListUserPoolClients","cognito-idp:ListUserPools","cognito-idp:ListUsers","cognito-idp:ListUsersInGroup","cognito-sync:Describe*","cognito-sync:List*","comprehend:Describe*","comprehend:List*","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:EvaluateExpression","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","datapipeline:ValidatePipelineDefinition","datasync:Describe*","datasync:List*","dax:Describe*","dax:ListTags","detective:GetGraphIngestState","detective:ListGraphs","detective:ListMembers","directconnect:Describe*","dms:Describe*","dms:ListTagsForResource","ds:DescribeDirectories","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:DescribeTransitGatewayAttachments","ec2:DescribeTransitGatewayMulticastDomains","ec2:DescribeTransitGatewayPeeringAttachments","ec2:DescribeTransitGatewayRouteTables","ec2:DescribeTransitGatewayVpcAttachments","ec2:DescribeTransitGateways","ec2:GetManagedPrefixListAssociations","ec2:GetManagedPrefixListEntries","ec2:GetTransitGatewayAttachmentPropagations","ec2:GetTransitGatewayMulticastDomainAssociations","ec2:GetTransitGatewayPrefixListReferences","ec2:GetTransitGatewayRouteTableAssociations","ec2:GetTransitGatewayRouteTablePropagations","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr:DescribeImageScanFindings","ecr:DescribeImages","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListImages","ecr:ListTagsForResource","ecs:Describe*","ecs:List*","eks:DescribeCluster","eks:DescribeNodeGroup","eks:ListClusters","eks:ListNodeGroups","elasticache:Describe*","elasticache:ListTagsForResource","elasticbeanstalk:Describe*","elasticbeanstalk:DescribeApplications","elasticbeanstalk:ListTagsForResource","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeMountTargets","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:ListClusters","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","es:Describe*","es:ListDomainNames","es:ListElasticsearchInstanceTypeDetails","es:ListElasticsearchVersions","es:ListTags","events:Describe*","events:List*","events:TestEventPattern","firehose:Describe*","firehose:List*","fms:ListComplianceStatus","fms:ListPolicies","fsx:Describe*","fsx:List*","gamelift:ListBuilds","gamelift:ListFleets","glacier:DescribeVault","glacier:GetVaultAccessPolicy","glacier:ListVaults","globalaccelerator:Describe*","globalaccelerator:List*","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabases","glue:GetDevEndpoints","glue:GetJobs","greengrass:List*","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","iam:SimulateCustomPolicy","iam:SimulatePrincipalPolicy","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:GetPolicy","iot:GetPolicyVersion","iot:List*","kinesis:DescribeLimits","kinesis:DescribeStream","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kinesisanalytics:ListApplications","kms:Describe*","kms:Get*","kms:List*","lambda:GetAccountSettings","lambda:GetFunctionConfiguration","lambda:GetFunctionEventInvokeConfig","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:List*","license-manager:List*","lightsail:GetInstances","lightsail:GetLoadBalancers","logs:Describe*","logs:ListTagsLogGroup","machinelearning:DescribeMLModels","mediaconnect:Describe*","mediaconnect:List*","mediastore:GetContainerPolicy","mediastore:ListContainers","mq:DescribeBroker","mq:DescribeBrokerEngineTypes","mq:DescribeBrokerInstanceOptions","mq:DescribeConfiguration","mq:DescribeConfigurationRevision","mq:DescribeUser","mq:ListBrokers","mq:ListConfigurationRevisions","mq:ListConfigurations","mq:ListTags","mq:ListUsers","network-firewall:ListFirewalls","opsworks-cm:DescribeServers","opsworks:DescribeStacks","organizations:Describe*","organizations:List*","quicksight:Describe*","quicksight:List*","ram:List*","rds:Describe*","rds:DownloadDBLogFilePortion","rds:ListTagsForResource","redshift:Describe*","rekognition:Describe*","rekognition:List*","robomaker:Describe*","robomaker:List*","route53:Get*","route53:List*","route53domains:GetDomainDetail","route53domains:GetOperationDetail","route53domains:ListDomains","route53domains:ListOperations","route53domains:ListTagsForDomain","route53resolver:Get*","route53resolver:List*","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetAnalyticsConfiguration","s3:GetBucket*","s3:GetEncryptionConfiguration","s3:GetInventoryConfiguration","s3:GetLifecycleConfiguration","s3:GetMetricsConfiguration","s3:GetObjectAcl","s3:GetObjectVersionAcl","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","sagemaker:Describe*","sagemaker:List*","schemas:DescribeCodeBinding","schemas:DescribeDiscoverer","schemas:DescribeRegistry","schemas:DescribeSchema","schemas:ListDiscoverers","schemas:ListRegistries","schemas:ListSchemaVersions","schemas:ListSchemas","schemas:ListTagsForResource","sdb:DomainMetadata","sdb:ListDomains","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:ListSecrets","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:GetApplicationPolicy","serverlessrepo:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","servicequotas:ListTagsForResource","ses:GetIdentityDkimAttributes","ses:GetIdentityPolicies","ses:GetIdentityVerificationAttributes","ses:ListIdentities","ses:ListIdentityPolicies","ses:ListVerifiedEmailAddresses","shield:Describe*","shield:List*","snowball:ListClusters","snowball:ListJobs","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListDeadLetterSourceQueues","sqs:ListQueueTags","sqs:ListQueues","ssm:Describe*","ssm:GetAutomationExecution","ssm:ListAssociationVersions","ssm:ListAssociations","ssm:ListCommands","ssm:ListComplianceItems","ssm:ListComplianceSummaries","ssm:ListDocumentMetadataHistory","ssm:ListDocumentVersions","ssm:ListDocuments","ssm:ListInventoryEntries","ssm:ListOpsMetadata","ssm:ListResourceComplianceSummaries","ssm:ListResourceDataSync","ssm:ListTagsForResource","sso:DescribePermissionsPolicies","sso:List*","states:ListStateMachines","storagegateway:DescribeBandwidthRateLimit","storagegateway:DescribeCache","storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeGatewayInformation","storagegateway:DescribeMaintenanceStartTime","storagegateway:DescribeNFSFileShares","storagegateway:DescribeSnapshotSchedule","storagegateway:DescribeStorediSCSIVolumes","storagegateway:DescribeTapeArchives","storagegateway:DescribeTapeRecoveryPoints","storagegateway:DescribeTapes","storagegateway:DescribeUploadBuffer","storagegateway:DescribeVTLDevices","storagegateway:DescribeWorkingStorage","storagegateway:List*","support:DescribeTrustedAdvisorCheckRefreshStatuses","support:DescribeTrustedAdvisorCheckResult","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorChecks","tag:GetResources","tag:GetTagKeys","transfer:Describe*","transfer:List*","translate:List*","trustedadvisor:Describe*","waf-regional:GetWebACL","waf-regional:ListResourcesForWebACL","waf-regional:ListTagsForResource","waf-regional:ListWebACLs","waf:GetWebACL","waf:ListTagsForResource","waf:ListWebACLs","wafv2:GetWebACL","wafv2:ListAvailableManagedRuleGroups","wafv2:ListIPSets","wafv2:ListLoggingConfigurations","wafv2:ListRegexPatternSets","wafv2:ListResourcesForWebACL","wafv2:ListRuleGroups","wafv2:ListTagsForResource","wafv2:ListWebACLs","workdocs:DescribeResourcePermissions","workspaces:Describe*","xray:GetEncryptionConfig","xray:GetGroup","xray:GetGroups","xray:GetSamplingRules","xray:GetSamplingTargets","xray:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/apis","arn:aws:apigateway:*::/apis/*/routes","arn:aws:apigateway:*::/apis/*/stages","arn:aws:apigateway:*::/apis/*/stages/*","arn:aws:apigateway:*::/clientcertificates/*","arn:aws:apigateway:*::/restapis","arn:aws:apigateway:*::/restapis/*/authorizers","arn:aws:apigateway:*::/restapis/*/authorizers/*","arn:aws:apigateway:*::/restapis/*/documentation/versions","arn:aws:apigateway:*::/restapis/*/resources","arn:aws:apigateway:*::/restapis/*/resources/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*","arn:aws:apigateway:*::/restapis/*/stages","arn:aws:apigateway:*::/restapis/*/stages/*","arn:aws:apigateway:*::/tags/*","arn:aws:apigateway:*::/vpclinks"]}],"services":["access-analyzer","acm-pca","acm","application-autoscaling","appmesh","appsync","athena","autoscaling-plans","autoscaling","batch","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-identity","cognito-idp","cognito-sync","comprehend","config","datapipeline","datasync","dax","detective","directconnect","dms","ds","dynamodb","ec2","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","events","firehose","fms","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","guardduty","iam","inspector","iot","kinesis","kinesisanalytics","kms","lambda","license-manager","lightsail","logs","machinelearning","mediaconnect","mediastore","mq","network-firewall","opsworks-cm","opsworks","organizations","quicksight","ram","rds","redshift","rekognition","robomaker","route53","route53domains","route53resolver","s3","sagemaker","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicequotas","ses","shield","snowball","sns","sqs","ssm","sso","states","storagegateway","support","tag","transfer","translate","trustedadvisor","waf-regional","waf","wafv2","workdocs","workspaces","xray","apigateway"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSElementalMediaConvertFullAccess","PolicyName":"AWSElementalMediaConvertFullAccess","PolicyId":"ANPAIXDREOCL6LV7RBJWC","Path":"/","Description":"Provides full access to AWS Elemental MediaConvert via the AWS Management Console and SDK.","DefaultVersionId":"v2"},"document":[{"Action":["mediaconvert:*","s3:ListAllMyBuckets","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["mediaconvert","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy","PolicyName":"AmazonSSMServiceRolePolicy","PolicyId":"ANPAIXJ26NUGBA3TCV7EC","Path":"/aws-service-role/","Description":"Provides access to AWS Resources managed or used by Amazon SSM","DefaultVersionId":"v13"},"document":[{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation","ssm:ListCommandInvocations","ssm:ListCommands","ssm:SendCommand","ssm:GetAutomationExecution","ssm:GetParameters","ssm:StartAutomationExecution","ssm:ListTagsForResource","ssm:GetCalendarState"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:UpdateServiceSetting","ssm:GetServiceSetting"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:servicesetting/ssm/opsitem/*","arn:aws:ssm:*:*:servicesetting/ssm/opsdata/*"]},{"Action":["ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:SSM*","arn:aws:lambda:*:*:function:*:SSM*"]},{"Action":["states:DescribeExecution","states:StartExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:stateMachine:SSM*","arn:aws:states:*:*:execution:SSM*"]},{"Action":["resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroupQuery"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:SelectResourceConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEnrollmentStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["support:DescribeTrustedAdvisorChecks","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorCheckResult","support:DescribeCases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeComplianceByConfigRule","config:DescribeComplianceByResource","config:DescribeRemediationConfigurations","config:DescribeConfigurationRecorders"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackSets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackInstances","cloudformation:DescribeStackSetOperation","cloudformation:DeleteStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"]},{"Action":["cloudformation:DeleteStackInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*","arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*","arn:aws:cloudformation:*:*:type/resource/*"]},{"Action":["events:PutRule","events:PutTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:RemoveTargets","events:DeleteRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/SSMExplorerManagedRule"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["securityhub:DescribeHub"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","ec2","lambda","states","resource-groups","cloudformation","tag","config","compute-optimizer","support","iam","organizations","events","securityhub"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataPipeline_FullAccess","PolicyName":"AWSDataPipeline_FullAccess","PolicyId":"ANPAIXOFIG7RSBMRPHXJ4","Path":"/","Description":"Provides full access to Data Pipeline, list access for S3, DynamoDB, Redshift, RDS, SNS, and IAM roles, and passRole access for default Roles.","DefaultVersionId":"v2"},"document":[{"Action":["s3:List*","dynamodb:DescribeTable","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","sns:ListTopics","sns:Subscribe","iam:ListRoles","iam:GetRolePolicy","iam:GetInstanceProfile","iam:ListInstanceProfiles","datapipeline:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/DataPipelineDefaultResourceRole","arn:aws:iam::*:role/DataPipelineDefaultRole"]}],"services":["s3","dynamodb","rds","redshift","sns","iam","datapipeline"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/NeptuneFullAccess","PolicyName":"NeptuneFullAccess","PolicyId":"ANPAIXSDEYRCNJRC6ITFK","Path":"/","Description":"Provides full access to Amazon Neptune. Note this policy also grants full access to publish on all SNS topics within the account and full access to Amazon RDS. For more information, see https://aws.amazon.com/neptune/faqs/.","DefaultVersionId":"v5"},"document":[{"Action":["rds:CreateDBCluster","rds:CreateDBInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:*"]},{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","cloudwatch","ec2","kms","logs","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess","PolicyName":"AmazonDynamoDBReadOnlyAccess","PolicyId":"ANPAIY2XFNA232XJ6J7X2","Path":"/","Description":"Provides read only access to Amazon DynamoDB via the AWS Management Console.","DefaultVersionId":"v13"},"document":[{"Action":["application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:GetMetricData","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","dynamodb:BatchGetItem","dynamodb:Describe*","dynamodb:List*","dynamodb:GetItem","dynamodb:Query","dynamodb:Scan","dynamodb:PartiQLSelect","dax:Describe*","dax:List*","dax:GetItem","dax:BatchGetItem","dax:Query","dax:Scan","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:ListAliases","sns:ListSubscriptionsByTopic","sns:ListTopics","lambda:ListFunctions","lambda:ListEventSourceMappings","lambda:GetFunctionConfiguration","resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroup","resource-groups:GetGroupQuery","tag:GetResources","kinesis:ListStreams","kinesis:DescribeStream","kinesis:DescribeStreamSummary"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetInsightRuleReport"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"]}],"services":["application-autoscaling","cloudwatch","datapipeline","dynamodb","dax","ec2","iam","kms","sns","lambda","resource-groups","tag","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AutoScalingConsoleFullAccess","PolicyName":"AutoScalingConsoleFullAccess","PolicyId":"ANPAIYEN6FJGYYWJFFCZW","Path":"/","Description":"Provides full access to Auto Scaling via the AWS Management Console.","DefaultVersionId":"v2"},"document":[{"Action":["ec2:AuthorizeSecurityGroupIngress","ec2:CreateKeyPair","ec2:CreateSecurityGroup","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeLaunchTemplateVersions","ec2:DescribePlacementGroups","ec2:DescribeSecurityGroups","ec2:DescribeSpotInstanceRequests","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcClassicLink","ec2:ImportKeyPair"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:ListMetrics","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm","cloudwatch:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListSubscriptions","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","elasticloadbalancing","cloudwatch","autoscaling","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSEC2SpotServiceRolePolicy","PolicyName":"AWSEC2SpotServiceRolePolicy","PolicyId":"ANPAIZJJBQNXQYVKTEXGM","Path":"/aws-service-role/","Description":"Allows EC2 Spot to launch and manage spot instances","DefaultVersionId":"v4"},"document":[{"Action":["ec2:DescribeInstances","ec2:StartInstances","ec2:StopInstances","ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess","PolicyName":"AmazonElasticMapReduceFullAccess","PolicyId":"ANPAIZP5JFP3AMSGINBB2","Path":"/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-managed-iam-policies.html. Provides full access to Amazon Elastic MapReduce and underlying services that it requires such as EC2 and S3","DefaultVersionId":"v7"},"document":[{"Action":["cloudwatch:*","cloudformation:CreateStack","cloudformation:DescribeStackEvents","ec2:AuthorizeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress","ec2:CancelSpotInstanceRequests","ec2:CreateRoute","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:DeleteRoute","ec2:DeleteTags","ec2:DeleteSecurityGroup","ec2:DescribeAvailabilityZones","ec2:DescribeAccountAttributes","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSpotInstanceRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","ec2:DescribeRouteTables","ec2:DescribeNetworkAcls","ec2:CreateVpcEndpoint","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:RequestSpotInstances","ec2:RevokeSecurityGroupEgress","ec2:RunInstances","ec2:TerminateInstances","elasticmapreduce:*","iam:GetPolicy","iam:GetPolicyVersion","iam:ListRoles","iam:PassRole","kms:List*","s3:*","sdb:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","cloudformation","ec2","elasticmapreduce","iam","kms","s3","sdb"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/GlobalAcceleratorFullAccess","PolicyName":"GlobalAcceleratorFullAccess","PolicyId":"ANPAJ3NSRQKPB42BCNRT6","Path":"/","Description":"Allow GlobalAccelerator Users full Access to all APIs","DefaultVersionId":"v6"},"document":[{"Action":["globalaccelerator:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:DescribeLoadBalancers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAddresses","ec2:DescribeInstances","ec2:DescribeInternetGateways","ec2:DescribeRegions","ec2:DescribeSubnets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/globalaccelerator.amazonaws.com/AWSServiceRoleForGlobalAccelerator*"]}],"services":["globalaccelerator","elasticloadbalancing","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccesswithDataPipeline","PolicyName":"AmazonDynamoDBFullAccesswithDataPipeline","PolicyId":"ANPAJ3ORT7KDISSXGHJXA","Path":"/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBPipeline.html. Provides full access to Amazon DynamoDB including Export/Import using AWS Data Pipeline via the AWS Management Console.","DefaultVersionId":"v2"},"document":[{"Action":["cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","dynamodb:*","sns:CreateTopic","sns:DeleteTopic","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Subscribe","sns:Unsubscribe","sns:SetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:*","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["datapipeline:*","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRolePolicy","iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DescribeInstances","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","elasticmapreduce:*","datapipeline:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:DeleteObject","s3:Get*","s3:List*","s3:Put*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","dynamodb","sns","lambda","iam","datapipeline","ec2","elasticmapreduce","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSecurityHubFullAccess","PolicyName":"AWSSecurityHubFullAccess","PolicyId":"ANPAJ4262VZCA4HPBZSO6","Path":"/","Description":"Provides full access to use AWS Security Hub.","DefaultVersionId":"v1"},"document":[{"Action":["securityhub:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["securityhub","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess","PolicyName":"AmazonPersonalizeFullAccess","PolicyId":"ANPAJ45XBPPZNI3MMVAUK","Path":"/service-role/","Description":"Provides full access to Amazon Personalize via the AWS Management Console and SDK. Also provides select access to related services (e.g., S3, CloudWatch).","DefaultVersionId":"v2"},"document":[{"Action":["personalize:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:PutMetricData","cloudwatch:ListMetrics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*Personalize*","arn:aws:s3:::*personalize*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["personalize","cloudwatch","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMigrationHubFullAccess","PolicyName":"AWSMigrationHubFullAccess","PolicyId":"ANPAJ4A2SZKHUYHDYIGOK","Path":"/","Description":"Managed policy to provide the customer access to the Migration Hub Service","DefaultVersionId":"v4"},"document":[{"Action":["mgh:*","discovery:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["mgh","discovery","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMUserChangePassword","PolicyName":"IAMUserChangePassword","PolicyId":"ANPAJ4L4MM2A7QIEB56MS","Path":"/","Description":"Provides the ability for an IAM user to change their own password.","DefaultVersionId":"v2"},"document":[{"Action":["iam:ChangePassword"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["iam:GetAccountPasswordPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/LightsailExportAccess","PolicyName":"LightsailExportAccess","PolicyId":"ANPAJ4LZGPQLZWMVR4WMQ","Path":"/aws-service-role/","Description":"AWS Lightsail service linked role policy which grants permissions to export resources","DefaultVersionId":"v1"},"document":[{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lightsail.amazonaws.com/AWSServiceRoleForLightsail*"]},{"Action":["ec2:CopySnapshot","ec2:DescribeSnapshots","ec2:CopyImage","ec2:DescribeImages"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ec2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonMacieSetupRole","PolicyName":"AmazonMacieSetupRole","PolicyId":"ANPAJ5DC6UBVKND7ADSKA","Path":"/service-role/","Description":"Provides Macie with access to your AWS account.","DefaultVersionId":"v2"},"document":[{"Action":["cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","iam:ListAccountAliases","s3:GetBucket*","s3:ListBucket","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:CreateTrail","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudtrail:UpdateTrail","cloudtrail:DeleteTrail","cloudtrail:PutEventSelectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudtrail:*:*:trail/AWSMacieTrail-DO-NOT-EDIT"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteBucketPolicy","s3:DeleteBucketWebsite","s3:DeleteObject","s3:DeleteObjectTagging","s3:DeleteObjectVersion","s3:DeleteObjectVersionTagging","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awsmacie-*","arn:aws:s3:::awsmacietrail-*","arn:aws:s3:::*-awsmacietrail-*"]}],"services":["cloudtrail","iam","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole","PolicyName":"AmazonEC2SpotFleetTaggingRole","PolicyId":"ANPAJ5U6UMLCEYLX5OLC4","Path":"/service-role/","Description":"Allows EC2 Spot Fleet to request, terminate and tag Spot Instances on your behalf. ","DefaultVersionId":"v5"},"document":[{"Action":["ec2:DescribeImages","ec2:DescribeSubnets","ec2:RequestSpotInstances","ec2:TerminateInstances","ec2:DescribeInstanceStatus","ec2:CreateTags","ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:RegisterInstancesWithLoadBalancer"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:loadbalancer/*"]},{"Action":["elasticloadbalancing:RegisterTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:*/*"]}],"services":["ec2","iam","elasticloadbalancing"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/DataScientist","PolicyName":"DataScientist","PolicyId":"ANPAJ5YHI2BQW7EQFYDXS","Path":"/job-function/","Description":"Grants permissions to AWS data analytics services.","DefaultVersionId":"v5"},"document":[{"Action":["autoscaling:*","cloudwatch:*","cloudformation:CreateStack","cloudformation:DescribeStackEvents","datapipeline:Describe*","datapipeline:ListPipelines","datapipeline:GetPipelineDefinition","datapipeline:QueryObjects","dynamodb:*","ec2:CancelSpotInstanceRequests","ec2:CancelSpotFleetRequests","ec2:CreateTags","ec2:DeleteTags","ec2:Describe*","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:ModifySpotFleetRequest","ec2:RequestSpotInstances","ec2:RequestSpotFleet","elasticfilesystem:*","elasticmapreduce:*","es:*","firehose:*","fsx:DescribeFileSystems","iam:GetInstanceProfile","iam:GetRole","iam:GetPolicy","iam:GetPolicyVersion","iam:ListRoles","kinesis:*","kms:List*","lambda:Create*","lambda:Delete*","lambda:Get*","lambda:InvokeFunction","lambda:PublishVersion","lambda:Update*","lambda:List*","machinelearning:*","sdb:*","rds:*","sns:ListSubscriptions","sns:ListTopics","logs:DescribeLogStreams","logs:GetLogEvents","redshift:*","s3:CreateBucket","sns:CreateTopic","sns:Get*","sns:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:Abort*","s3:DeleteObject","s3:Get*","s3:List*","s3:PutAccelerateConfiguration","s3:PutBucketCors","s3:PutBucketLogging","s3:PutBucketNotification","s3:PutBucketTagging","s3:PutObject","s3:Replicate*","s3:RestoreObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/DataPipelineDefaultRole","arn:aws:iam::*:role/DataPipelineDefaultResourceRole","arn:aws:iam::*:role/EMR_EC2_DefaultRole","arn:aws:iam::*:role/EMR_DefaultRole","arn:aws:iam::*:role/kinesis-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":["arn:aws:sagemaker:*:*:domain/*","arn:aws:sagemaker:*:*:user-profile/*","arn:aws:sagemaker:*:*:app/*","arn:aws:sagemaker:*:*:flow-definition/*"],"Resource":null},{"Action":["sagemaker:CreatePresignedDomainUrl","sagemaker:DescribeDomain","sagemaker:ListDomains","sagemaker:DescribeUserProfile","sagemaker:ListUserProfiles","sagemaker:*App","sagemaker:ListApps"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*FlowDefinition","sagemaker:*FlowDefinitions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudwatch","cloudformation","datapipeline","dynamodb","ec2","elasticfilesystem","elasticmapreduce","es","firehose","fsx","iam","kinesis","kms","lambda","machinelearning","sdb","rds","sns","logs","redshift","s3","sagemaker"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole","PolicyName":"AWSOpsWorksCMServiceRole","PolicyId":"ANPAJ6I6MPGJE62URSHCO","Path":"/service-role/","Description":"Service Role Policy to be used for Creating OpsWorks CM servers.","DefaultVersionId":"v14"},"document":[{"Action":["s3:CreateBucket","s3:DeleteObject","s3:DeleteBucket","s3:GetObject","s3:ListBucket","s3:PutBucketPolicy","s3:PutObject","s3:GetBucketTagging","s3:PutBucketTagging"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-opsworks-cm-*"]},{"Action":["tag:UntagResources","tag:TagResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DescribeInstanceInformation","ssm:GetCommandInvocation","ssm:ListCommandInvocations","ssm:ListCommands"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*::document/*","arn:aws:s3:::aws-opsworks-cm-*"]},{"Action":["ec2:AllocateAddress","ec2:AssociateAddress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateImage","ec2:CreateSecurityGroup","ec2:CreateSnapshot","ec2:CreateTags","ec2:DeleteSecurityGroup","ec2:DeleteSnapshot","ec2:DeregisterImage","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeImages","ec2:DescribeInstanceStatus","ec2:DescribeInstances","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DisassociateAddress","ec2:ReleaseAddress","ec2:RunInstances","ec2:StopInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances","ec2:RebootInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["opsworks-cm:DeleteServer","opsworks-cm:StartMaintenance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:opsworks-cm:*:*:server/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:UpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-opsworks-cm-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-opsworks-cm-*","arn:aws:iam::*:role/service-role/aws-opsworks-cm-*"]},{"Action":["acm:DeleteCertificate","acm:ImportCertificate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:GetSecretValue","secretsmanager:UpdateSecret","secretsmanager:DeleteSecret","secretsmanager:TagResource","secretsmanager:UntagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:opsworks-cm!aws-opsworks-cm-secrets-*"]},{"Action":["ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:elastic-ip/*","arn:aws:ec2:*:*:security-group/*"]}],"services":["s3","tag","ssm","ec2","opsworks-cm","cloudformation","iam","acm","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/FSxDeleteServiceLinkedRoleAccess","PolicyName":"FSxDeleteServiceLinkedRoleAccess","PolicyId":"ANPAJ6IRP2YV2YPKWPPNQ","Path":"/aws-service-role/","Description":"Allows Amazon FSx to delete its Service Linked Roles for Amazon S3 access","DefaultVersionId":"v1"},"document":[{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:*:iam::*:role/aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/AWSServiceRoleForFSxS3Access_*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonConnectServiceLinkedRolePolicy","PolicyName":"AmazonConnectServiceLinkedRolePolicy","PolicyId":"ANPAJ6R6FMTSRUJSKI72Y","Path":"/aws-service-role/","Description":"Allows Amazon Connect to create and manage AWS resources on your behalf.","DefaultVersionId":"v4"},"document":[{"Action":["connect:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/connect.amazonaws.com/AWSServiceRoleForAmazonConnect_*"]},{"Action":["s3:GetObject","s3:GetObjectAcl","s3:PutObject","s3:PutObjectAcl","s3:DeleteObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::amazon-connect-*/*"]},{"Action":["s3:GetBucketLocation","s3:GetBucketAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::amazon-connect-*"]},{"Action":["logs:CreateLogStream","logs:DescribeLogStreams","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/connect/*:*"]},{"Action":["lex:ListBots","lex:ListBotAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["connect","iam","s3","logs","lex"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSConnector","PolicyName":"AWSConnector","PolicyId":"ANPAJ6YATONJHICG3DJ3U","Path":"/","Description":"Enables broad read/write access to ALL EC2 objects, read/write access to S3 buckets starting with 'import-to-ec2-', and the ability to list all S3 buckets, for the AWS Connector to import VMs on your behalf.","DefaultVersionId":"v3"},"document":[{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteObject","s3:GetBucketLocation","s3:GetObject","s3:ListBucket","s3:PutObject","s3:PutObjectAcl","s3:AbortMultipartUpload","s3:ListBucketMultipartUploads","s3:ListMultipartUploadParts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::import-to-ec2-*"]},{"Action":["ec2:CancelConversionTask","ec2:CancelExportTask","ec2:CreateImage","ec2:CreateInstanceExportTask","ec2:CreateTags","ec2:CreateVolume","ec2:DeleteTags","ec2:DeleteVolume","ec2:DescribeConversionTasks","ec2:DescribeExportTasks","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstances","ec2:DescribeRegions","ec2:DescribeTags","ec2:DetachVolume","ec2:ImportInstance","ec2:ImportVolume","ec2:ModifyInstanceAttribute","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","ec2:ImportImage","ec2:DescribeImportImageTasks","ec2:DeregisterImage","ec2:DescribeSnapshots","ec2:DeleteSnapshot","ec2:CancelImportTask","ec2:ImportSnapshot","ec2:DescribeImportSnapshotTasks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["SNS:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:metrics-sns-topic-for-*"]}],"services":["iam","s3","ec2","SNS"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodeDeployRoleForECSLimited","PolicyName":"AWSCodeDeployRoleForECSLimited","PolicyId":"ANPAJ6Z7L2IOXEFFOGD2M","Path":"/","Description":" Provides CodeDeploy service limited access to perform an ECS blue/green deployment on your behalf. ","DefaultVersionId":"v3"},"document":[{"Action":["ecs:DescribeServices","ecs:CreateTaskSet","ecs:UpdateServicePrimaryTaskSet","ecs:DeleteTaskSet","cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:CodeDeployTopic_*"]},{"Action":["elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:ModifyListener","elasticloadbalancing:DescribeRules","elasticloadbalancing:ModifyRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:CodeDeployHook_*"]},{"Action":["s3:GetObject","s3:GetObjectVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/ecsTaskExecutionRole","arn:aws:iam::*:role/ECSTaskExecution*"]}],"services":["ecs","cloudwatch","sns","elasticloadbalancing","lambda","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticTranscoder_JobsSubmitter","PolicyName":"AmazonElasticTranscoder_JobsSubmitter","PolicyId":"ANPAJ7AUMMRQOVZRI734S","Path":"/","Description":"Grants users permission to change presets, submit jobs, and view Elastic Transcoder settings. This policy also grants some read-only access to some other services required to use the Elastic Transcode console, including S3, IAM, and SNS.","DefaultVersionId":"v2"},"document":[{"Action":["elastictranscoder:Read*","elastictranscoder:List*","elastictranscoder:*Job","elastictranscoder:*Preset","s3:ListAllMyBuckets","s3:ListBucket","iam:ListRoles","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["elastictranscoder","s3","iam","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonMacieHandshakeRole","PolicyName":"AmazonMacieHandshakeRole","PolicyId":"ANPAJ7CVEIVL347MLOVKI","Path":"/service-role/","Description":"Grants permission to create the service-linked role of Amazon Macie.","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBatchFullAccess","PolicyName":"AWSBatchFullAccess","PolicyId":"ANPAJ7K2KIWB3HZVK3CUO","Path":"/","Description":"Provides full access for AWS Batch resources.","DefaultVersionId":"v6"},"document":[{"Action":["batch:*","cloudwatch:GetMetricStatistics","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","ec2:DescribeKeyPairs","ec2:DescribeVpcs","ec2:DescribeImages","ec2:DescribeLaunchTemplates","ec2:DescribeLaunchTemplateVersions","ecs:DescribeClusters","ecs:Describe*","ecs:List*","logs:Describe*","logs:Get*","logs:TestMetricFilter","logs:FilterLogEvents","iam:ListInstanceProfiles","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSBatchServiceRole","arn:aws:iam::*:role/service-role/AWSBatchServiceRole","arn:aws:iam::*:role/ecsInstanceRole","arn:aws:iam::*:instance-profile/ecsInstanceRole","arn:aws:iam::*:role/iaws-ec2-spot-fleet-role","arn:aws:iam::*:role/aws-ec2-spot-fleet-role","arn:aws:iam::*:role/AWSBatchJobRole*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*Batch*"]}],"services":["batch","cloudwatch","ec2","ecs","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonECS_FullAccess","PolicyName":"AmazonECS_FullAccess","PolicyId":"ANPAJ7S7AN6YQPTJC7IFS","Path":"/","Description":"Provides administrative access to Amazon ECS resources and enables ECS features through access to other AWS service resources, including VPCs, Auto Scaling groups, and CloudFormation stacks.","DefaultVersionId":"v19"},"document":[{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","appmesh:DescribeVirtualGateway","appmesh:DescribeVirtualNode","appmesh:ListMeshes","appmesh:ListVirtualGateways","appmesh:ListVirtualNodes","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteLaunchConfiguration","autoscaling:Describe*","autoscaling:UpdateAutoScalingGroup","cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStack*","cloudformation:UpdateStack","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm","codedeploy:BatchGetApplicationRevisions","codedeploy:BatchGetApplications","codedeploy:BatchGetDeploymentGroups","codedeploy:BatchGetDeployments","codedeploy:ContinueDeployment","codedeploy:CreateApplication","codedeploy:CreateDeployment","codedeploy:CreateDeploymentGroup","codedeploy:GetApplication","codedeploy:GetApplicationRevision","codedeploy:GetDeployment","codedeploy:GetDeploymentConfig","codedeploy:GetDeploymentGroup","codedeploy:GetDeploymentTarget","codedeploy:ListApplicationRevisions","codedeploy:ListApplications","codedeploy:ListDeploymentConfigs","codedeploy:ListDeploymentGroups","codedeploy:ListDeployments","codedeploy:ListDeploymentTargets","codedeploy:RegisterApplicationRevision","codedeploy:StopDeployment","ec2:AssociateRouteTable","ec2:AttachInternetGateway","ec2:AuthorizeSecurityGroupIngress","ec2:CancelSpotFleetRequests","ec2:CreateInternetGateway","ec2:CreateLaunchTemplate","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:DeleteLaunchTemplate","ec2:DeleteSubnet","ec2:DeleteVpc","ec2:Describe*","ec2:DetachInternetGateway","ec2:DisassociateRouteTable","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:RequestSpotFleet","ec2:RunInstances","ecs:*","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeFileSystems","elasticloadbalancing:CreateListener","elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:CreateRule","elasticloadbalancing:CreateTargetGroup","elasticloadbalancing:DeleteListener","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DeleteRule","elasticloadbalancing:DeleteTargetGroup","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTargetGroups","events:DeleteRule","events:DescribeRule","events:ListRuleNamesByTarget","events:ListTargetsByRule","events:PutRule","events:PutTargets","events:RemoveTargets","fsx:DescribeFileSystems","iam:ListAttachedRolePolicies","iam:ListInstanceProfiles","iam:ListRoles","lambda:ListFunctions","logs:CreateLogGroup","logs:DescribeLogGroups","logs:FilterLogEvents","route53:CreateHostedZone","route53:DeleteHostedZone","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHostedZonesByName","servicediscovery:CreatePrivateDnsNamespace","servicediscovery:CreateService","servicediscovery:DeleteService","servicediscovery:GetNamespace","servicediscovery:GetOperation","servicediscovery:GetService","servicediscovery:ListNamespaces","servicediscovery:ListServices","servicediscovery:UpdateService","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:GetParameter","ssm:GetParameters","ssm:GetParametersByPath"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:parameter/aws/service/ecs*"]},{"Action":["ec2:DeleteInternetGateway","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/ecsInstanceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/ecsAutoscaleRole*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["application-autoscaling","appmesh","autoscaling","cloudformation","cloudwatch","codedeploy","ec2","ecs","elasticfilesystem","elasticloadbalancing","events","fsx","iam","lambda","logs","route53","servicediscovery","sns","ssm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy","PolicyName":"AWSSupportServiceRolePolicy","PolicyId":"ANPAJ7W6266ELXF5MISDS","Path":"/aws-service-role/","Description":"Allows AWS Support to access AWS resources to provide billing, administrative, and support services.","DefaultVersionId":"v15"},"document":[{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/account","arn:aws:apigateway:*::/apis","arn:aws:apigateway:*::/apis/*","arn:aws:apigateway:*::/apis/*/authorizers","arn:aws:apigateway:*::/apis/*/authorizers/*","arn:aws:apigateway:*::/apis/*/deployments","arn:aws:apigateway:*::/apis/*/deployments/*","arn:aws:apigateway:*::/apis/*/integrations","arn:aws:apigateway:*::/apis/*/integrations/*","arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses","arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*","arn:aws:apigateway:*::/apis/*/models","arn:aws:apigateway:*::/apis/*/models/*","arn:aws:apigateway:*::/apis/*/routes","arn:aws:apigateway:*::/apis/*/routes/*","arn:aws:apigateway:*::/apis/*/routes/*/routeresponses","arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*","arn:aws:apigateway:*::/apis/*/stages","arn:aws:apigateway:*::/apis/*/stages/*","arn:aws:apigateway:*::/clientcertificates","arn:aws:apigateway:*::/clientcertificates/*","arn:aws:apigateway:*::/domainnames","arn:aws:apigateway:*::/domainnames/*","arn:aws:apigateway:*::/domainnames/*/apimappings","arn:aws:apigateway:*::/domainnames/*/apimappings/*","arn:aws:apigateway:*::/domainnames/*/basepathmappings","arn:aws:apigateway:*::/domainnames/*/basepathmappings/*","arn:aws:apigateway:*::/restapis","arn:aws:apigateway:*::/restapis/*","arn:aws:apigateway:*::/restapis/*/authorizers","arn:aws:apigateway:*::/restapis/*/authorizers/*","arn:aws:apigateway:*::/restapis/*/deployments","arn:aws:apigateway:*::/restapis/*/deployments/*","arn:aws:apigateway:*::/restapis/*/models","arn:aws:apigateway:*::/restapis/*/models/*","arn:aws:apigateway:*::/restapis/*/models/*/default_template","arn:aws:apigateway:*::/restapis/*/resources","arn:aws:apigateway:*::/restapis/*/resources/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*","arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration","arn:aws:apigateway:*::/restapis/*/stages","arn:aws:apigateway:*::/restapis/*/stages/*"]},{"Action":["iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"]},{"Action":["a4b:getDevice","a4b:getProfile","a4b:getRoom","a4b:getRoomSkillParameter","a4b:getSkillGroup","a4b:searchDevices","a4b:searchProfiles","a4b:searchRooms","a4b:searchSkillGroups","access-analyzer:getFinding","access-analyzer:listAnalyzers","access-analyzer:listArchiveRules","access-analyzer:listFindings","acm-pca:describeCertificateAuthority","acm-pca:describeCertificateAuthorityAuditReport","acm-pca:getCertificate","acm-pca:getCertificateAuthorityCertificate","acm-pca:getCertificateAuthorityCsr","acm-pca:listCertificateAuthorities","acm-pca:listTags","acm:describeCertificate","acm:getCertificate","acm:listCertificates","acm:listTagsForCertificate","amplify:getApp","amplify:getBranch","amplify:getDomainAssociation","amplify:getJob","amplify:getWebhook","amplify:listApps","amplify:listWebhooks","application-autoscaling:describeScalableTargets","application-autoscaling:describeScalingActivities","application-autoscaling:describeScalingPolicies","application-autoscaling:describeScheduledActions","appmesh:describeMesh","appmesh:describeRoute","appmesh:describeVirtualNode","appmesh:describeVirtualRouter","appmesh:describeVirtualService","appmesh:listMeshes","appmesh:listRoutes","appmesh:listVirtualNodes","appmesh:listVirtualRouters","appmesh:listVirtualServices","appstream:describeDirectoryConfigs","appstream:describeFleets","appstream:describeImageBuilders","appstream:describeImages","appstream:describeSessions","appstream:describeStacks","appstream:listAssociatedFleets","appstream:listAssociatedStacks","appstream:listTagsForResource","appsync:getFunction","appsync:getGraphqlApi","appsync:getIntrospectionSchema","appsync:getResolver","appsync:getSchemaCreationStatus","appsync:getType","appsync:listDataSources","appsync:listFunctions","appsync:listGraphqlApis","appsync:listResolvers","appsync:listTypes","athena:batchGetNamedQuery","athena:batchGetQueryExecution","athena:getNamedQuery","athena:getQueryExecution","athena:getWorkGroup","athena:listNamedQueries","athena:listQueryExecutions","athena:listTagsForResource","athena:listWorkGroups","autoscaling-plans:describeScalingPlanResources","autoscaling-plans:describeScalingPlans","autoscaling-plans:getScalingPlanResourceForecastData","autoscaling:describeAccountLimits","autoscaling:describeAdjustmentTypes","autoscaling:describeAutoScalingGroups","autoscaling:describeAutoScalingInstances","autoscaling:describeAutoScalingNotificationTypes","autoscaling:describeInstanceRefreshes","autoscaling:describeLaunchConfigurations","autoscaling:describeLifecycleHookTypes","autoscaling:describeLifecycleHooks","autoscaling:describeLoadBalancerTargetGroups","autoscaling:describeLoadBalancers","autoscaling:describeMetricCollectionTypes","autoscaling:describeNotificationConfigurations","autoscaling:describePolicies","autoscaling:describeScalingActivities","autoscaling:describeScalingProcessTypes","autoscaling:describeScheduledActions","autoscaling:describeTags","autoscaling:describeTerminationPolicyTypes","backup:describeBackupJob","backup:describeBackupVault","backup:describeProtectedResource","backup:describeRecoveryPoint","backup:describeRestoreJob","backup:getBackupPlan","backup:getBackupPlanFromJSON","backup:getBackupPlanFromTemplate","backup:getBackupSelection","backup:getBackupVaultAccessPolicy","backup:getBackupVaultNotifications","backup:getRecoveryPointRestoreMetadata","backup:getSupportedResourceTypes","backup:listBackupJobs","backup:listBackupPlanTemplates","backup:listBackupPlanVersions","backup:listBackupPlans","backup:listBackupSelections","backup:listBackupVaults","backup:listProtectedResources","backup:listRecoveryPointsByBackupVault","backup:listRecoveryPointsByResource","backup:listRestoreJobs","backup:listTags","batch:describeComputeEnvironments","batch:describeJobDefinitions","batch:describeJobQueues","batch:describeJobs","batch:listJobs","braket:getDevice","braket:getQuantumTask","braket:searchDevices","braket:searchQuantumTasks","budgets:viewBudget","ce:getCostAndUsage","ce:getCostAndUsageWithResources","ce:getCostForecast","ce:getDimensionValues","ce:getReservationCoverage","ce:getReservationPurchaseRecommendation","ce:getReservationUtilization","ce:getRightsizingRecommendation","ce:getSavingsPlansCoverage","ce:getSavingsPlansPurchaseRecommendation","ce:getSavingsPlansUtilization","ce:getSavingsPlansUtilizationDetails","ce:getTags","cloud9:describeEnvironmentMemberships","cloud9:describeEnvironments","cloud9:listEnvironments","clouddirectory:getDirectory","clouddirectory:listDirectories","cloudformation:describeAccountLimits","cloudformation:describeChangeSet","cloudformation:describeStackEvents","cloudformation:describeStackInstance","cloudformation:describeStackResource","cloudformation:describeStackResources","cloudformation:describeStackSet","cloudformation:describeStackSetOperation","cloudformation:describeStacks","cloudformation:estimateTemplateCost","cloudformation:getStackPolicy","cloudformation:getTemplate","cloudformation:getTemplateSummary","cloudformation:listChangeSets","cloudformation:listExports","cloudformation:listImports","cloudformation:listStackInstances","cloudformation:listStackResources","cloudformation:listStackSetOperationResults","cloudformation:listStackSetOperations","cloudformation:listStackSets","cloudformation:listStacks","cloudfront:getCloudFrontOriginAccessIdentity","cloudfront:getCloudFrontOriginAccessIdentityConfig","cloudfront:getDistribution","cloudfront:getDistributionConfig","cloudfront:getInvalidation","cloudfront:getStreamingDistribution","cloudfront:getStreamingDistributionConfig","cloudfront:listCloudFrontOriginAccessIdentities","cloudfront:listDistributions","cloudfront:listDistributionsByWebACLId","cloudfront:listInvalidations","cloudfront:listStreamingDistributions","cloudhsm:describeBackups","cloudhsm:describeClusters","cloudsearch:describeAnalysisSchemes","cloudsearch:describeAvailabilityOptions","cloudsearch:describeDomains","cloudsearch:describeExpressions","cloudsearch:describeIndexFields","cloudsearch:describeScalingParameters","cloudsearch:describeServiceAccessPolicies","cloudsearch:describeSuggesters","cloudsearch:listDomainNames","cloudtrail:describeTrails","cloudtrail:getEventSelectors","cloudtrail:getInsightSelectors","cloudtrail:getTrail","cloudtrail:getTrailStatus","cloudtrail:listPublicKeys","cloudtrail:listTags","cloudtrail:listTrails","cloudtrail:lookupEvents","cloudwatch:describeAlarmHistory","cloudwatch:describeAlarms","cloudwatch:describeAlarmsForMetric","cloudwatch:describeAnomalyDetectors","cloudwatch:getDashboard","cloudwatch:getMetricData","cloudwatch:getMetricStatistics","cloudwatch:listDashboards","cloudwatch:listMetrics","codeartifact:describeDomain","codeartifact:describePackageVersion","codeartifact:describeRepository","codeartifact:getDomainPermissionsPolicy","codeartifact:getRepositoryEndPoint","codeartifact:getRepositoryPermissionsPolicy","codeartifact:listDomains","codeartifact:listPackageVersionAssets","codeartifact:listPackageVersions","codeartifact:listPackages","codeartifact:listRepositories","codeartifact:listRepositoriesInDomain","codebuild:batchGetBuildBatches","codebuild:batchGetBuilds","codebuild:batchGetProjects","codebuild:listBuildBatches","codebuild:listBuildBatchesForProject","codebuild:listBuilds","codebuild:listBuildsForProject","codebuild:listCuratedEnvironmentImages","codebuild:listProjects","codebuild:listSourceCredentials","codecommit:batchGetRepositories","codecommit:getBranch","codecommit:getRepository","codecommit:getRepositoryTriggers","codecommit:listBranches","codecommit:listRepositories","codedeploy:batchGetApplicationRevisions","codedeploy:batchGetApplications","codedeploy:batchGetDeploymentGroups","codedeploy:batchGetDeploymentInstances","codedeploy:batchGetDeploymentTargets","codedeploy:batchGetDeployments","codedeploy:batchGetOnPremisesInstances","codedeploy:getApplication","codedeploy:getApplicationRevision","codedeploy:getDeployment","codedeploy:getDeploymentConfig","codedeploy:getDeploymentGroup","codedeploy:getDeploymentInstance","codedeploy:getDeploymentTarget","codedeploy:getOnPremisesInstance","codedeploy:listApplicationRevisions","codedeploy:listApplications","codedeploy:listDeploymentConfigs","codedeploy:listDeploymentGroups","codedeploy:listDeploymentInstances","codedeploy:listDeploymentTargets","codedeploy:listDeployments","codedeploy:listGitHubAccountTokenNames","codedeploy:listOnPremisesInstances","codepipeline:getJobDetails","codepipeline:getPipeline","codepipeline:getPipelineExecution","codepipeline:getPipelineState","codepipeline:listActionExecutions","codepipeline:listActionTypes","codepipeline:listPipelineExecutions","codepipeline:listPipelines","codepipeline:listWebhooks","codestar:describeProject","codestar:listProjects","codestar:listResources","codestar:listTeamMembers","codestar:listUserProfiles","cognito-identity:describeIdentityPool","cognito-identity:getIdentityPoolRoles","cognito-identity:listIdentities","cognito-identity:listIdentityPools","cognito-idp:adminGetUser","cognito-idp:describeIdentityProvider","cognito-idp:describeResourceServer","cognito-idp:describeRiskConfiguration","cognito-idp:describeUserImportJob","cognito-idp:describeUserPool","cognito-idp:describeUserPoolClient","cognito-idp:describeUserPoolDomain","cognito-idp:getGroup","cognito-idp:getUICustomization","cognito-idp:getUser","cognito-idp:getUserPoolMfaConfig","cognito-idp:listGroups","cognito-idp:listIdentityProviders","cognito-idp:listResourceServers","cognito-idp:listUserImportJobs","cognito-idp:listUserPoolClients","cognito-idp:listUserPools","cognito-sync:describeDataset","cognito-sync:describeIdentityPoolUsage","cognito-sync:describeIdentityUsage","cognito-sync:getCognitoEvents","cognito-sync:getIdentityPoolConfiguration","cognito-sync:listDatasets","cognito-sync:listIdentityPoolUsage","compute-optimizer:getAutoScalingGroupRecommendations","compute-optimizer:getEC2InstanceRecommendations","compute-optimizer:getEC2RecommendationProjectedMetrics","compute-optimizer:getEnrollmentStatus","compute-optimizer:getRecommendationSummaries","compute-optimizer:getEBSVolumeRecommendations","config:describeConfigRuleEvaluationStatus","config:describeConfigRules","config:describeConfigurationRecorderStatus","config:describeConfigurationRecorders","config:describeDeliveryChannelStatus","config:describeDeliveryChannels","config:getResourceConfigHistory","config:listDiscoveredResources","connect:describeUser","connect:getCurrentMetricData","connect:getMetricData","connect:listRoutingProfiles","connect:listSecurityProfiles","connect:listUsers","controltower:describeAccountFactoryConfig","controltower:describeCoreService","controltower:describeGuardrail","controltower:describeGuardrailForTarget","controltower:describeManagedAccount","controltower:describeSingleSignOn","controltower:getAvailableUpdates","controltower:getHomeRegion","controltower:getLandingZoneStatus","controltower:listDirectoryGroups","controltower:listGuardrailViolations","controltower:listGuardrailsForTarget","controltower:listManagedAccounts","controltower:listManagedAccountsForGuardrail","controltower:listManagedAccountsForParent","controltower:listManagedOrganizationalUnits","controltower:listManagedOrganizationalUnitsForGuardrail","databrew:describeDataset","databrew:describeJob","databrew:describeProject","databrew:describeRecipe","databrew:listDatasets","databrew:listJobRuns","databrew:listJobs","databrew:listProjects","databrew:listRecipes","databrew:listRecipeVersions","databrew:listTagsForResource","datapipeline:describeObjects","datapipeline:describePipelines","datapipeline:getPipelineDefinition","datapipeline:listPipelines","datapipeline:queryObjects","datasync:describeAgent","datasync:describeLocationEfs","datasync:describeLocationFsxWindows","datasync:describeLocationNfs","datasync:describeLocationObjectStorage","datasync:describeLocationS3","datasync:describeLocationSmb","datasync:describeTask","datasync:describeTaskExecution","datasync:listAgents","datasync:listLocations","datasync:listTaskExecutions","datasync:listTasks","dax:describeClusters","dax:describeDefaultParameters","dax:describeEvents","dax:describeParameterGroups","dax:describeParameters","dax:describeSubnetGroups","detective:getMembers","detective:listGraphs","detective:listInvitations","detective:listMembers","devicefarm:getAccountSettings","devicefarm:getDevice","devicefarm:getDevicePool","devicefarm:getDevicePoolCompatibility","devicefarm:getJob","devicefarm:getProject","devicefarm:getRemoteAccessSession","devicefarm:getRun","devicefarm:getSuite","devicefarm:getTest","devicefarm:getTestGridProject","devicefarm:getTestGridSession","devicefarm:getUpload","devicefarm:listArtifacts","devicefarm:listDevicePools","devicefarm:listDevices","devicefarm:listJobs","devicefarm:listProjects","devicefarm:listRemoteAccessSessions","devicefarm:listRuns","devicefarm:listSamples","devicefarm:listSuites","devicefarm:listTestGridProjects","devicefarm:listTestGridSessionActions","devicefarm:listTestGridSessionArtifacts","devicefarm:listTestGridSessions","devicefarm:listTests","devicefarm:listUniqueProblems","devicefarm:listUploads","directconnect:describeConnections","directconnect:describeConnectionsOnInterconnect","directconnect:describeInterconnects","directconnect:describeLocations","directconnect:describeVirtualGateways","directconnect:describeVirtualInterfaces","dlm:getLifecyclePolicies","dlm:getLifecyclePolicy","dms:describeAccountAttributes","dms:describeConnections","dms:describeEndpointTypes","dms:describeEndpoints","dms:describeOrderableReplicationInstances","dms:describeRefreshSchemasStatus","dms:describeReplicationInstances","dms:describeReplicationSubnetGroups","ds:describeConditionalForwarders","ds:describeDirectories","ds:describeEventTopics","ds:describeSnapshots","ds:describeTrusts","ds:getDirectoryLimits","ds:getSnapshotLimits","ds:listIpRoutes","ds:listSchemaExtensions","ds:listTagsForResource","dynamodb:describeBackup","dynamodb:describeContinuousBackups","dynamodb:describeGlobalTable","dynamodb:describeLimits","dynamodb:describeStream","dynamodb:describeTable","dynamodb:describeTimeToLive","dynamodb:listBackups","dynamodb:listGlobalTables","dynamodb:listStreams","dynamodb:listTables","dynamodb:listTagsOfResource","ec2:acceptReservedInstancesExchangeQuote","ec2:cancelReservedInstancesListing","ec2:createReservedInstancesListing","ec2:describeAccountAttributes","ec2:describeAddresses","ec2:describeAvailabilityZones","ec2:describeBundleTasks","ec2:describeByoipCidrs","ec2:describeCapacityReservations","ec2:describeClassicLinkInstances","ec2:describeClientVpnAuthorizationRules","ec2:describeClientVpnConnections","ec2:describeClientVpnEndpoints","ec2:describeClientVpnRoutes","ec2:describeClientVpnTargetNetworks","ec2:describeCoipPools","ec2:describeConversionTasks","ec2:describeCustomerGateways","ec2:describeDhcpOptions","ec2:describeElasticGpus","ec2:describeExportImageTasks","ec2:describeExportTasks","ec2:describeFastSnapshotRestores","ec2:describeFleetHistory","ec2:describeFleetInstances","ec2:describeFleets","ec2:describeFlowLogs","ec2:describeHostReservationOfferings","ec2:describeHostReservations","ec2:describeHosts","ec2:describeIdFormat","ec2:describeIdentityIdFormat","ec2:describeImageAttribute","ec2:describeImages","ec2:describeImportImageTasks","ec2:describeImportSnapshotTasks","ec2:describeInstanceAttribute","ec2:describeInstanceStatus","ec2:describeInstances","ec2:describeInternetGateways","ec2:describeKeyPairs","ec2:describeLaunchTemplateVersions","ec2:describeLaunchTemplates","ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations","ec2:describeLocalGatewayRouteTableVpcAssociations","ec2:describeLocalGatewayRouteTables","ec2:describeLocalGatewayVirtualInterfaceGroups","ec2:describeLocalGatewayVirtualInterfaces","ec2:describeLocalGateways","ec2:describeMovingAddresses","ec2:describeNatGateways","ec2:describeNetworkAcls","ec2:describeNetworkInterfaceAttribute","ec2:describeNetworkInterfaces","ec2:describePlacementGroups","ec2:describePrefixLists","ec2:describePublicIpv4Pools","ec2:describeRegions","ec2:describeReservedInstances","ec2:describeReservedInstancesListings","ec2:describeReservedInstancesModifications","ec2:describeReservedInstancesOfferings","ec2:describeRouteTables","ec2:describeScheduledInstances","ec2:describeSecurityGroups","ec2:describeSnapshotAttribute","ec2:describeSnapshots","ec2:describeSpotDatafeedSubscription","ec2:describeSpotFleetInstances","ec2:describeSpotFleetRequestHistory","ec2:describeSpotFleetRequests","ec2:describeSpotInstanceRequests","ec2:describeSpotPriceHistory","ec2:describeSubnets","ec2:describeTags","ec2:describeTrafficMirrorFilters","ec2:describeTrafficMirrorSessions","ec2:describeTrafficMirrorTargets","ec2:describeTransitGatewayAttachments","ec2:describeTransitGatewayRouteTables","ec2:describeTransitGatewayVpcAttachments","ec2:describeTransitGateways","ec2:describeVolumeAttribute","ec2:describeVolumeStatus","ec2:describeVolumes","ec2:describeVolumesModifications","ec2:describeVpcAttribute","ec2:describeVpcClassicLink","ec2:describeVpcClassicLinkDnsSupport","ec2:describeVpcEndpointConnectionNotifications","ec2:describeVpcEndpointConnections","ec2:describeVpcEndpointServiceConfigurations","ec2:describeVpcEndpointServicePermissions","ec2:describeVpcEndpointServices","ec2:describeVpcEndpoints","ec2:describeVpcPeeringConnections","ec2:describeVpcs","ec2:describeVpnConnections","ec2:describeVpnGateways","ec2:getCoipPoolUsage","ec2:getConsoleScreenshot","ec2:getReservedInstancesExchangeQuote","ec2:getTransitGatewayAttachmentPropagations","ec2:getTransitGatewayRouteTableAssociations","ec2:getTransitGatewayRouteTablePropagations","ec2:modifyReservedInstances","ec2:purchaseReservedInstancesOffering","ec2:searchLocalGatewayRoutes","ecr:batchCheckLayerAvailability","ecr:describeImages","ecr:describeRepositories","ecr:getRepositoryPolicy","ecr:listImages","ecs:describeClusters","ecs:describeContainerInstances","ecs:describeServices","ecs:describeTaskDefinition","ecs:describeTasks","ecs:listClusters","ecs:listContainerInstances","ecs:listServices","ecs:listTaskDefinitions","ecs:listTasks","eks:describeCluster","eks:describeFargateProfile","eks:describeNodegroup","eks:describeUpdate","eks:listClusters","eks:listFargateProfiles","eks:listNodegroups","eks:listUpdates","elasticache:describeCacheClusters","elasticache:describeCacheEngineVersions","elasticache:describeCacheParameterGroups","elasticache:describeCacheParameters","elasticache:describeCacheSecurityGroups","elasticache:describeCacheSubnetGroups","elasticache:describeEngineDefaultParameters","elasticache:describeEvents","elasticache:describeReplicationGroups","elasticache:describeReservedCacheNodes","elasticache:describeReservedCacheNodesOfferings","elasticache:describeSnapshots","elasticache:listAllowedNodeTypeModifications","elasticache:listTagsForResource","elasticbeanstalk:checkDNSAvailability","elasticbeanstalk:describeApplicationVersions","elasticbeanstalk:describeApplications","elasticbeanstalk:describeConfigurationOptions","elasticbeanstalk:describeConfigurationSettings","elasticbeanstalk:describeEnvironmentHealth","elasticbeanstalk:describeEnvironmentManagedActionHistory","elasticbeanstalk:describeEnvironmentManagedActions","elasticbeanstalk:describeEnvironmentResources","elasticbeanstalk:describeEnvironments","elasticbeanstalk:describeEvents","elasticbeanstalk:describeInstancesHealth","elasticbeanstalk:describePlatformVersion","elasticbeanstalk:listAvailableSolutionStacks","elasticbeanstalk:listPlatformVersions","elasticbeanstalk:validateConfigurationSettings","elasticfilesystem:describeAccessPoints","elasticfilesystem:describeFileSystemPolicy","elasticfilesystem:describeFileSystems","elasticfilesystem:describeLifecycleConfiguration","elasticfilesystem:describeMountTargetSecurityGroups","elasticfilesystem:describeMountTargets","elasticfilesystem:describeTags","elasticfilesystem:listTagsForResource","elasticloadbalancing:describeInstanceHealth","elasticloadbalancing:describeListenerCertificates","elasticloadbalancing:describeListeners","elasticloadbalancing:describeLoadBalancerAttributes","elasticloadbalancing:describeLoadBalancerPolicies","elasticloadbalancing:describeLoadBalancerPolicyTypes","elasticloadbalancing:describeLoadBalancers","elasticloadbalancing:describeRules","elasticloadbalancing:describeSSLPolicies","elasticloadbalancing:describeTags","elasticloadbalancing:describeTargetGroupAttributes","elasticloadbalancing:describeTargetGroups","elasticloadbalancing:describeTargetHealth","elasticmapreduce:describeCluster","elasticmapreduce:describeSecurityConfiguration","elasticmapreduce:describeStep","elasticmapreduce:listBootstrapActions","elasticmapreduce:listClusters","elasticmapreduce:listInstanceGroups","elasticmapreduce:listInstances","elasticmapreduce:listSecurityConfigurations","elasticmapreduce:listSteps","elastictranscoder:listJobsByPipeline","elastictranscoder:listJobsByStatus","elastictranscoder:listPipelines","elastictranscoder:listPresets","elastictranscoder:readPipeline","elastictranscoder:readPreset","es:describeElasticsearchDomain","es:describeElasticsearchDomainConfig","es:describeElasticsearchDomains","es:listDomainNames","es:listTags","events:describeEventBus","events:describeEventSource","events:describePartnerEventSource","events:describeRule","events:listEventBuses","events:listEventSources","events:listPartnerEventSourceAccounts","events:listPartnerEventSources","events:listRuleNamesByTarget","events:listRules","events:listTargetsByRule","events:testEventPattern","firehose:describeDeliveryStream","firehose:listDeliveryStreams","fms:getAdminAccount","fms:getComplianceDetail","fms:getNotificationChannel","fms:getPolicy","fms:getProtectionStatus","fms:listComplianceStatus","fms:listMemberAccounts","fms:listPolicies","forecast:describeDataset","forecast:describeDatasetGroup","forecast:describeDatasetImportJob","forecast:describeForecast","forecast:describeForecastExportJob","forecast:describePredictor","forecast:getAccuracyMetrics","forecast:listDatasetGroups","forecast:listDatasetImportJobs","forecast:listDatasets","forecast:listForecastExportJobs","forecast:listForecasts","forecast:listPredictors","fsx:describeBackups","fsx:describeDataRepositoryTasks","fsx:describeFileSystems","fsx:listTagsForResource","glacier:describeJob","glacier:describeVault","glacier:getDataRetrievalPolicy","glacier:getVaultAccessPolicy","glacier:getVaultLock","glacier:getVaultNotifications","glacier:listJobs","glacier:listTagsForVault","glacier:listVaults","globalaccelerator:describeAccelerator","globalaccelerator:describeAcceleratorAttributes","globalaccelerator:describeEndpointGroup","globalaccelerator:describeListener","globalaccelerator:listAccelerators","globalaccelerator:listEndpointGroups","globalaccelerator:listListeners","glue:batchGetPartition","glue:checkSchemaVersionValidity","glue:getCatalogImportStatus","glue:getClassifier","glue:getClassifiers","glue:getCrawler","glue:getCrawlerMetrics","glue:getCrawlers","glue:getDatabase","glue:getDatabases","glue:getDataflowGraph","glue:getDevEndpoint","glue:getDevEndpoints","glue:getJob","glue:getJobRun","glue:getJobRuns","glue:getJobs","glue:getMapping","glue:getPartition","glue:getPartitions","glue:getRegistry","glue:getSchema","glue:getSchemaByDefinition","glue:getSchemaVersion","glue:getSchemaVersionsDiff","glue:getTable","glue:getTableVersions","glue:getTables","glue:getTrigger","glue:getTriggers","glue:getUserDefinedFunction","glue:getUserDefinedFunctions","glue:listRegistries","glue:listSchemas","glue:listSchemaVersions","glue:querySchemaVersionMetadata","greengrass:getConnectivityInfo","greengrass:getCoreDefinition","greengrass:getCoreDefinitionVersion","greengrass:getDeploymentStatus","greengrass:getDeviceDefinition","greengrass:getDeviceDefinitionVersion","greengrass:getFunctionDefinition","greengrass:getFunctionDefinitionVersion","greengrass:getGroup","greengrass:getGroupCertificateAuthority","greengrass:getGroupVersion","greengrass:getLoggerDefinition","greengrass:getLoggerDefinitionVersion","greengrass:getResourceDefinitionVersion","greengrass:getServiceRoleForAccount","greengrass:getSubscriptionDefinition","greengrass:getSubscriptionDefinitionVersion","greengrass:listCoreDefinitionVersions","greengrass:listCoreDefinitions","greengrass:listDeployments","greengrass:listDeviceDefinitionVersions","greengrass:listDeviceDefinitions","greengrass:listFunctionDefinitionVersions","greengrass:listFunctionDefinitions","greengrass:listGroupVersions","greengrass:listGroups","greengrass:listLoggerDefinitionVersions","greengrass:listLoggerDefinitions","greengrass:listResourceDefinitionVersions","greengrass:listResourceDefinitions","greengrass:listSubscriptionDefinitionVersions","greengrass:listSubscriptionDefinitions","guardduty:getDetector","guardduty:getFindings","guardduty:getFindingsStatistics","guardduty:getIPSet","guardduty:getInvitationsCount","guardduty:getMasterAccount","guardduty:getMembers","guardduty:getThreatIntelSet","guardduty:listDetectors","guardduty:listFindings","guardduty:listIPSets","guardduty:listInvitations","guardduty:listMembers","guardduty:listThreatIntelSets","health:describeAffectedAccountsForOrganization","health:describeAffectedEntities","health:describeAffectedEntitiesForOrganization","health:describeEntityAggregates","health:describeEventAggregates","health:describeEventDetails","health:describeEventTypes","health:describeEventDetailsForOrganization","health:describeEvents","health:describeEventsForOrganization","health:describeHealthServiceStatusForOrganization","iam:getAccessKeyLastUsed","iam:getAccountAuthorizationDetails","iam:getAccountPasswordPolicy","iam:getAccountSummary","iam:getContextKeysForCustomPolicy","iam:getContextKeysForPrincipalPolicy","iam:getCredentialReport","iam:getGroup","iam:getGroupPolicy","iam:getInstanceProfile","iam:getLoginProfile","iam:getOpenIDConnectProvider","iam:getPolicy","iam:getPolicyVersion","iam:getRole","iam:getRolePolicy","iam:getSAMLProvider","iam:getSSHPublicKey","iam:getServerCertificate","iam:getUser","iam:getUserPolicy","iam:listAccessKeys","iam:listAccountAliases","iam:listAttachedGroupPolicies","iam:listAttachedRolePolicies","iam:listAttachedUserPolicies","iam:listEntitiesForPolicy","iam:listGroupPolicies","iam:listGroups","iam:listGroupsForUser","iam:listInstanceProfiles","iam:listInstanceProfilesForRole","iam:listMFADevices","iam:listOpenIDConnectProviders","iam:listPolicies","iam:listPolicyVersions","iam:listRolePolicies","iam:listRoles","iam:listSAMLProviders","iam:listSSHPublicKeys","iam:listServerCertificates","iam:listSigningCertificates","iam:listUserPolicies","iam:listUsers","iam:listVirtualMFADevices","iam:simulateCustomPolicy","iam:simulatePrincipalPolicy","imagebuilder:getComponent","imagebuilder:getComponentPolicy","imagebuilder:getContainerRecipe","imagebuilder:getDistributionConfiguration","imagebuilder:getImage","imagebuilder:getImagePipeline","imagebuilder:getImagePolicy","imagebuilder:getImageRecipe","imagebuilder:getImageRecipePolicy","imagebuilder:getInfrastructureConfiguration","imagebuilder:listComponentBuildVersions","imagebuilder:listComponents","imagebuilder:listContainerRecipes","imagebuilder:listDistributionConfigurations","imagebuilder:listImageBuildVersions","imagebuilder:listImagePipelineImages","imagebuilder:listImagePipelines","imagebuilder:listImageRecipes","imagebuilder:listImages","imagebuilder:listInfrastructureConfigurations","imagebuilder:listTagsForResource","importexport:getStatus","importexport:listJobs","inspector:describeAssessmentRuns","inspector:describeAssessmentTargets","inspector:describeAssessmentTemplates","inspector:describeCrossAccountAccessRole","inspector:describeResourceGroups","inspector:describeRulesPackages","inspector:getTelemetryMetadata","inspector:listAssessmentRunAgents","inspector:listAssessmentRuns","inspector:listAssessmentTargets","inspector:listAssessmentTemplates","inspector:listEventSubscriptions","inspector:listRulesPackages","inspector:listTagsForResource","iot:describeAuthorizer","iot:describeCACertificate","iot:describeCertificate","iot:describeDefaultAuthorizer","iot:describeEndpoint","iot:describeIndex","iot:describeJobExecution","iot:describeThing","iot:describeThingGroup","iot:describeTunnel","iot:getEffectivePolicies","iot:getIndexingConfiguration","iot:getLoggingOptions","iot:getPolicy","iot:getPolicyVersion","iot:getTopicRule","iot:getV2LoggingOptions","iot:listAttachedPolicies","iot:listAuthorizers","iot:listCACertificates","iot:listCertificates","iot:listCertificatesByCA","iot:listJobExecutionsForJob","iot:listJobExecutionsForThing","iot:listJobs","iot:listOutgoingCertificates","iot:listPolicies","iot:listPolicyPrincipals","iot:listPolicyVersions","iot:listPrincipalPolicies","iot:listPrincipalThings","iot:listRoleAliases","iot:listTargetsForPolicy","iot:listThingGroups","iot:listThingGroupsForThing","iot:listThingPrincipals","iot:listThingRegistrationTasks","iot:listThingTypes","iot:listThings","iot:listTopicRules","iot:listTunnels","iot:listV2LoggingLevels","iotevents:describeDetector","iotevents:describeDetectorModel","iotevents:describeInput","iotevents:describeLoggingOptions","iotevents:listDetectorModelVersions","iotevents:listDetectorModels","iotevents:listDetectors","iotevents:listInputs","iotsitewise:describeAccessPolicy","iotsitewise:describeAsset","iotsitewise:describeAssetModel","iotsitewise:describeAssetProperty","iotsitewise:describeDashboard","iotsitewise:describeGateway","iotsitewise:describeGatewayCapabilityConfiguration","iotsitewise:describeLoggingOptions","iotsitewise:describePortal","iotsitewise:describeProject","iotsitewise:listAccessPolicies","iotsitewise:listAssetModels","iotsitewise:listAssets","iotsitewise:listAssociatedAssets","iotsitewise:listDashboards","iotsitewise:listGateways","iotsitewise:listPortals","iotsitewise:listProjectAssets","iotsitewise:listProjects","kafka:describeCluster","kafka:getBootstrapBrokers","kafka:listClusters","kafka:listNodes","kendra:describeDataSource","kendra:describeFaq","kendra:describeIndex","kendra:listDataSources","kendra:listFaqs","kendra:listIndices","kinesis:describeStream","kinesis:listStreams","kinesis:listTagsForStream","kinesisanalytics:describeApplication","kinesisanalytics:describeApplicationSnapshot","kinesisanalytics:listApplications","kinesisanalytics:listApplicationSnapshots","kms:describeKey","kms:getKeyPolicy","kms:getKeyRotationStatus","kms:listAliases","kms:listGrants","kms:listKeyPolicies","kms:listKeys","kms:listResourceTags","kms:listRetirableGrants","lambda:getAccountSettings","lambda:getAlias","lambda:getEventSourceMapping","lambda:getFunction","lambda:getFunctionConcurrency","lambda:getFunctionConfiguration","lambda:getFunctionEventInvokeConfig","lambda:getLayerVersion","lambda:getLayerVersionPolicy","lambda:getPolicy","lambda:getProvisionedConcurrencyConfig","lambda:listAliases","lambda:listEventSourceMappings","lambda:listFunctionEventInvokeConfigs","lambda:listFunctions","lambda:listLayerVersions","lambda:listLayers","lambda:listProvisionedConcurrencyConfigs","lambda:listVersionsByFunction","launchwizard:describeProvisionedApp","launchwizard:describeProvisioningEvents","launchwizard:listProvisionedApps","lex:getBot","lex:getBotAlias","lex:getBotAliases","lex:getBotChannelAssociation","lex:getBotChannelAssociations","lex:getBotVersions","lex:getBots","lex:getBuiltinIntent","lex:getBuiltinIntents","lex:getBuiltinSlotTypes","lex:getIntent","lex:getIntentVersions","lex:getIntents","lex:getSlotType","lex:getSlotTypeVersions","lex:getSlotTypes","license-manager:getLicenseConfiguration","license-manager:getServiceSettings","license-manager:listAssociationsForLicenseConfiguration","license-manager:listFailuresForLicenseConfigurationOperations","license-manager:listLicenseConfigurations","license-manager:listLicenseSpecificationsForResource","license-manager:listResourceInventory","license-manager:listUsageForLicenseConfiguration","lightsail:getActiveNames","lightsail:getBlueprints","lightsail:getBundles","lightsail:getDisk","lightsail:getDisks","lightsail:getDiskSnapshot","lightsail:getDiskSnapshots","lightsail:getDomain","lightsail:getDomains","lightsail:getExportSnapshotRecords","lightsail:getInstance","lightsail:getInstanceMetricData","lightsail:getInstancePortStates","lightsail:getInstanceSnapshot","lightsail:getInstanceSnapshots","lightsail:getInstanceState","lightsail:getInstances","lightsail:getKeyPair","lightsail:getKeyPairs","lightsail:getLoadBalancer","lightsail:getLoadBalancers","lightsail:getLoadBalancerTlsCertificates","lightsail:getOperation","lightsail:getOperations","lightsail:getOperationsForResource","lightsail:getRegions","lightsail:getRelationalDatabase","lightsail:getRelationalDatabases","lightsail:getRelationalDatabaseSnapshot","lightsail:getRelationalDatabaseSnapshots","lightsail:getStaticIp","lightsail:getStaticIps","logs:describeDestinations","logs:describeExportTasks","logs:describeLogGroups","logs:describeLogStreams","logs:describeMetricFilters","logs:describeQueries","logs:describeSubscriptionFilters","logs:testMetricFilter","machinelearning:describeBatchPredictions","machinelearning:describeDataSources","machinelearning:describeEvaluations","machinelearning:describeMLModels","machinelearning:getBatchPrediction","machinelearning:getDataSource","machinelearning:getEvaluation","machinelearning:getMLModel","managedblockchain:getMember","managedblockchain:getNetwork","managedblockchain:getNode","managedblockchain:listMembers","managedblockchain:listNetworks","managedblockchain:listNodes","mediaconnect:describeFlow","mediaconnect:listEntitlements","mediaconnect:listFlows","mediaconvert:describeEndpoints","mediaconvert:getJob","mediaconvert:getJobTemplate","mediaconvert:getPreset","mediaconvert:getQueue","mediaconvert:listJobTemplates","mediaconvert:listJobs","medialive:describeChannel","medialive:describeInput","medialive:describeInputDevice","medialive:describeInputSecurityGroup","medialive:describeMultiplex","medialive:describeOffering","medialive:describeReservation","medialive:describeSchedule","medialive:listChannels","medialive:listInputDevices","medialive:listInputSecurityGroups","medialive:listInputs","medialive:listMultiplexes","medialive:listOfferings","medialive:listReservations","mediapackage:describeChannel","mediapackage:describeOriginEndpoint","mediapackage:listChannels","mediapackage:listOriginEndpoints","mediastore:describeContainer","mediastore:describeObject","mediastore:getContainerPolicy","mediastore:getCorsPolicy","mediastore:listContainers","mediastore:listItems","mediatailor:getPlaybackConfiguration","mediatailor:listPlaybackConfigurations","mobiletargeting:getAdmChannel","mobiletargeting:getApnsChannel","mobiletargeting:getApnsSandboxChannel","mobiletargeting:getApnsVoipChannel","mobiletargeting:getApnsVoipSandboxChannel","mobiletargeting:getApp","mobiletargeting:getApplicationSettings","mobiletargeting:getApps","mobiletargeting:getBaiduChannel","mobiletargeting:getCampaign","mobiletargeting:getCampaignActivities","mobiletargeting:getCampaignVersion","mobiletargeting:getCampaignVersions","mobiletargeting:getCampaigns","mobiletargeting:getEmailChannel","mobiletargeting:getEndpoint","mobiletargeting:getEventStream","mobiletargeting:getExportJob","mobiletargeting:getExportJobs","mobiletargeting:getGcmChannel","mobiletargeting:getImportJob","mobiletargeting:getImportJobs","mobiletargeting:getSegment","mobiletargeting:getSegmentImportJobs","mobiletargeting:getSegmentVersion","mobiletargeting:getSegmentVersions","mobiletargeting:getSegments","mobiletargeting:getSmsChannel","mq:describeBroker","mq:describeConfiguration","mq:describeConfigurationRevision","mq:describeUser","mq:listBrokers","mq:listConfigurationRevisions","mq:listConfigurations","mq:listUsers","network-firewall:describeFirewall","network-firewall:describeFirewallPolicy","network-firewall:describeLoggingConfiguration","network-firewall:describeRuleGroup","network-firewall:listFirewallPolicies","network-firewall:listFirewalls","network-firewall:listRuleGroups","networkmanager:describeGlobalNetworks","networkmanager:getCustomerGatewayAssociations","networkmanager:getDevices","networkmanager:getLinkAssociations","networkmanager:getLinks","networkmanager:getSites","networkmanager:getTransitGatewayRegistrations","opsworks-cm:describeAccountAttributes","opsworks-cm:describeBackups","opsworks-cm:describeEvents","opsworks-cm:describeNodeAssociationStatus","opsworks-cm:describeServers","opsworks:describeAgentVersions","opsworks:describeApps","opsworks:describeCommands","opsworks:describeDeployments","opsworks:describeEcsClusters","opsworks:describeElasticIps","opsworks:describeElasticLoadBalancers","opsworks:describeInstances","opsworks:describeLayers","opsworks:describeLoadBasedAutoScaling","opsworks:describeMyUserProfile","opsworks:describePermissions","opsworks:describeRaidArrays","opsworks:describeRdsDbInstances","opsworks:describeServiceErrors","opsworks:describeStackProvisioningParameters","opsworks:describeStackSummary","opsworks:describeStacks","opsworks:describeTimeBasedAutoScaling","opsworks:describeUserProfiles","opsworks:describeVolumes","opsworks:getHostnameSuggestion","outposts:getOutpost","outposts:getOutpostInstanceTypes","outposts:listOutposts","outposts:listSites","personalize:describeAlgorithm","personalize:describeCampaign","personalize:describeDataset","personalize:describeDatasetGroup","personalize:describeDatasetImportJob","personalize:describeEventTracker","personalize:describeFeatureTransformation","personalize:describeRecipe","personalize:describeSchema","personalize:describeSolution","personalize:describeSolutionVersion","personalize:listCampaigns","personalize:listDatasetGroups","personalize:listDatasetImportJobs","personalize:listDatasets","personalize:listEventTrackers","personalize:listRecipes","personalize:listSchemas","personalize:listSolutionVersions","personalize:listSolutions","polly:describeVoices","polly:getLexicon","polly:listLexicons","pricing:describeServices","pricing:getAttributeValues","pricing:getProducts","quicksight:describeDashboard","quicksight:describeDashboardPermissions","quicksight:describeGroup","quicksight:describeIAMPolicyAssignment","quicksight:describeTemplate","quicksight:describeTemplateAlias","quicksight:describeTemplatePermissions","quicksight:describeUser","quicksight:listDashboards","quicksight:listGroupMemberships","quicksight:listGroups","quicksight:listIAMPolicyAssignments","quicksight:listIAMPolicyAssignmentsForUser","quicksight:listTemplateAliases","quicksight:listTemplateVersions","quicksight:listTemplates","quicksight:listUserGroups","quicksight:listUsers","rds:describeAccountAttributes","rds:describeCertificates","rds:describeDBClusterParameterGroups","rds:describeDBClusterParameters","rds:describeDBClusterSnapshots","rds:describeDBClusters","rds:describeDBEngineVersions","rds:describeDBInstances","rds:describeDBParameterGroups","rds:describeDBParameters","rds:describeDBSecurityGroups","rds:describeDBSnapshotAttributes","rds:describeDBSnapshots","rds:describeDBSubnetGroups","rds:describeEngineDefaultClusterParameters","rds:describeEngineDefaultParameters","rds:describeEventCategories","rds:describeEventSubscriptions","rds:describeEvents","rds:describeExportTasks","rds:describeOptionGroupOptions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describePendingMaintenanceActions","rds:describeReservedDBInstances","rds:describeReservedDBInstancesOfferings","rds:listTagsForResource","redshift:describeClusterParameterGroups","redshift:describeClusterParameters","redshift:describeClusterSecurityGroups","redshift:describeClusterSnapshots","redshift:describeClusterSubnetGroups","redshift:describeClusterVersions","redshift:describeClusters","redshift:describeDefaultClusterParameters","redshift:describeEventCategories","redshift:describeEventSubscriptions","redshift:describeEvents","redshift:describeHsmClientCertificates","redshift:describeHsmConfigurations","redshift:describeLoggingStatus","redshift:describeOrderableClusterOptions","redshift:describeReservedNodeOfferings","redshift:describeReservedNodes","redshift:describeResize","redshift:describeSnapshotCopyGrants","redshift:describeStorage","redshift:describeTableRestoreStatus","redshift:describeTags","rekognition:listCollections","rekognition:listFaces","resource-groups:getGroup","resource-groups:getGroupQuery","resource-groups:getTags","resource-groups:listGroupResources","resource-groups:listGroups","resource-groups:searchResources","robomaker:batchDescribeSimulationJob","robomaker:describeDeploymentJob","robomaker:describeFleet","robomaker:describeRobot","robomaker:describeRobotApplication","robomaker:describeSimulationApplication","robomaker:describeSimulationJob","robomaker:listDeploymentJobs","robomaker:listFleets","robomaker:listRobotApplications","robomaker:listRobots","robomaker:listSimulationApplications","robomaker:listSimulationJobs","route53:getChange","route53:getCheckerIpRanges","route53:getGeoLocation","route53:getHealthCheck","route53:getHealthCheckCount","route53:getHealthCheckLastFailureReason","route53:getHealthCheckStatus","route53:getHostedZone","route53:getHostedZoneCount","route53:getReusableDelegationSet","route53:getTrafficPolicy","route53:getTrafficPolicyInstance","route53:getTrafficPolicyInstanceCount","route53:listGeoLocations","route53:listHealthChecks","route53:listHostedZones","route53:listHostedZonesByName","route53:listResourceRecordSets","route53:listReusableDelegationSets","route53:listTagsForResource","route53:listTagsForResources","route53:listTrafficPolicies","route53:listTrafficPolicyInstances","route53:listTrafficPolicyInstancesByHostedZone","route53:listTrafficPolicyInstancesByPolicy","route53:listTrafficPolicyVersions","route53domains:checkDomainAvailability","route53domains:getContactReachabilityStatus","route53domains:getDomainDetail","route53domains:getOperationDetail","route53domains:listDomains","route53domains:listOperations","route53domains:listTagsForDomain","route53domains:viewBilling","route53resolver:getResolverDnssecConfig","route53resolver:getResolverRulePolicy","route53resolver:listResolverDnssecConfigs","route53resolver:listResolverEndpointIpAddresses","route53resolver:listResolverEndpoints","route53resolver:listResolverRuleAssociations","route53resolver:listResolverRules","route53resolver:listTagsForResource","s3:getAccelerateConfiguration","s3:getAnalyticsConfiguration","s3:getBucketAcl","s3:getBucketCORS","s3:getBucketLocation","s3:getBucketLogging","s3:getBucketNotification","s3:getBucketPolicy","s3:getBucketRequestPayment","s3:getBucketTagging","s3:getBucketVersioning","s3:getBucketWebsite","s3:getEncryptionConfiguration","s3:getInventoryConfiguration","s3:getLifecycleConfiguration","s3:getMetricsConfiguration","s3:getReplicationConfiguration","s3:listAllMyBuckets","s3:listBucket","s3:listBucketMultipartUploads","sagemaker:describeAction","sagemaker:describeAlgorithm","sagemaker:describeApp","sagemaker:describeArtifact","sagemaker:describeAutoMLJob","sagemaker:describeCompilationJob","sagemaker:describeContext","sagemaker:describeDataQualityJobDefinition","sagemaker:describeDevice","sagemaker:describeDeviceFleet","sagemaker:describeDomain","sagemaker:describeEdgePackagingJob","sagemaker:describeEndpoint","sagemaker:describeEndpointConfig","sagemaker:describeExperiment","sagemaker:describeFeatureGroup","sagemaker:describeHumanTaskUi","sagemaker:describeHyperParameterTuningJob","sagemaker:describeImage","sagemaker:describeImageVersion","sagemaker:describeLabelingJob","sagemaker:describeModel","sagemaker:describeModelBiasJobDefinition","sagemaker:describeModelExplainabilityJobDefinition","sagemaker:describeModelPackage","sagemaker:describeModelPackageGroup","sagemaker:describeModelQualityJobDefinition","sagemaker:describeMonitoringSchedule","sagemaker:describeNotebookInstance","sagemaker:describeNotebookInstanceLifecycleConfig","sagemaker:describePipeline","sagemaker:describePipelineDefinitionForExecution","sagemaker:describePipelineExecution","sagemaker:describeProcessingJob","sagemaker:describeProject","sagemaker:describeSubscribedWorkteam","sagemaker:describeTrainingJob","sagemaker:describeTransformJob","sagemaker:describeTrial","sagemaker:describeTrialComponent","sagemaker:describeUserProfile","sagemaker:describeWorkteam","sagemaker:listActions","sagemaker:listAlgorithms","sagemaker:listApps","sagemaker:listArtifacts","sagemaker:listAssociations","sagemaker:listAutoMLJobs","sagemaker:listCandidatesForAutoMLJob","sagemaker:listCodeRepositories","sagemaker:listCompilationJobs","sagemaker:listContexts","sagemaker:listDataQualityJobDefinitions","sagemaker:listDeviceFleets","sagemaker:listDevices","sagemaker:listDomains","sagemaker:listEdgePackagingJobs","sagemaker:listEndpointConfigs","sagemaker:listEndpoints","sagemaker:listExperiments","sagemaker:listFeatureGroups","sagemaker:listFlowDefinitions","sagemaker:listHumanTaskUis","sagemaker:listHyperParameterTuningJobs","sagemaker:listImages","sagemaker:listImageVersions","sagemaker:listLabelingJobs","sagemaker:listLabelingJobsForWorkteam","sagemaker:listModelBiasJobDefinitions","sagemaker:listModelExplainabilityJobDefinitions","sagemaker:listModelPackageGroups","sagemaker:listModelPackages","sagemaker:listModelQualityJobDefinitions","sagemaker:listModels","sagemaker:listMonitoringExecutions","sagemaker:listMonitoringSchedules","sagemaker:listNotebookInstanceLifecycleConfigs","sagemaker:listNotebookInstances","sagemaker:listPipelineExecutions","sagemaker:listPipelineExecutionSteps","sagemaker:listPipelineParametersForExecution","sagemaker:listPipelines","sagemaker:listProcessingJobs","sagemaker:listProjects","sagemaker:listSubscribedWorkteams","sagemaker:listTags","sagemaker:listTrainingJobs","sagemaker:listTrainingJobsForHyperParameterTuningJob","sagemaker:listTransformJobs","sagemaker:listTrialComponents","sagemaker:listTrials","sagemaker:listUserProfiles","sagemaker:listWorkteams","sdb:domainMetadata","sdb:listDomains","secretsmanager:describeSecret","secretsmanager:getResourcePolicy","secretsmanager:listSecretVersionIds","secretsmanager:listSecrets","securityhub:getEnabledStandards","securityhub:getFindings","securityhub:getInsightResults","securityhub:getInsights","securityhub:getMasterAccount","securityhub:getMembers","securityhub:listEnabledProductsForImport","securityhub:listInvitations","securityhub:listMembers","servicecatalog:describeConstraint","servicecatalog:describePortfolio","servicecatalog:describeProduct","servicecatalog:describeProductAsAdmin","servicecatalog:describeProductView","servicecatalog:describeProvisioningArtifact","servicecatalog:describeProvisioningParameters","servicecatalog:describeRecord","servicecatalog:listAcceptedPortfolioShares","servicecatalog:listConstraintsForPortfolio","servicecatalog:listLaunchPaths","servicecatalog:listPortfolioAccess","servicecatalog:listPortfolios","servicecatalog:listPortfoliosForProduct","servicecatalog:listPrincipalsForPortfolio","servicecatalog:listProvisioningArtifacts","servicecatalog:listRecordHistory","servicecatalog:scanProvisionedProducts","servicecatalog:searchProducts","servicequotas:getAWSDefaultServiceQuota","servicequotas:getAssociationForServiceQuotaTemplate","servicequotas:getRequestedServiceQuotaChange","servicequotas:getServiceQuota","servicequotas:getServiceQuotaIncreaseRequestFromTemplate","servicequotas:listAWSDefaultServiceQuotas","servicequotas:listRequestedServiceQuotaChangeHistory","servicequotas:listRequestedServiceQuotaChangeHistoryByQuota","servicequotas:listServiceQuotaIncreaseRequestsInTemplate","servicequotas:listServiceQuotas","servicequotas:listServices","ses:describeActiveReceiptRuleSet","ses:describeReceiptRule","ses:describeReceiptRuleSet","ses:getAccount","ses:getBlacklistReports","ses:getConfigurationSet","ses:getConfigurationSetEventDestinations","ses:getDedicatedIp","ses:getDedicatedIps","ses:getDeliverabilityDashboardOptions","ses:getDeliverabilityTestReport","ses:getDomainDeliverabilityCampaign","ses:getDomainStatisticsReport","ses:getEmailIdentity","ses:getIdentityDkimAttributes","ses:getIdentityMailFromDomainAttributes","ses:getIdentityNotificationAttributes","ses:getIdentityPolicies","ses:getIdentityVerificationAttributes","ses:getSendQuota","ses:getSendStatistics","ses:listConfigurationSets","ses:listDedicatedIpPools","ses:listDeliverabilityTestReports","ses:listDomainDeliverabilityCampaigns","ses:listEmailIdentities","ses:listIdentities","ses:listIdentityPolicies","ses:listReceiptFilters","ses:listReceiptRuleSets","ses:listTagsForResource","ses:listVerifiedEmailAddresses","shield:describeAttack","shield:describeProtection","shield:describeSubscription","shield:listAttacks","shield:listProtections","sms-voice:getConfigurationSetEventDestinations","sms:getConnectors","sms:getReplicationJobs","sms:getReplicationRuns","sms:getServers","snowball:describeAddress","snowball:describeAddresses","snowball:describeJob","snowball:getSnowballUsage","snowball:listJobs","sns:checkIfPhoneNumberIsOptedOut","sns:getEndpointAttributes","sns:getPlatformApplicationAttributes","sns:getSMSAttributes","sns:getSubscriptionAttributes","sns:getTopicAttributes","sns:listEndpointsByPlatformApplication","sns:listPhoneNumbersOptedOut","sns:listPlatformApplications","sns:listSubscriptions","sns:listSubscriptionsByTopic","sns:listTopics","sqs:getQueueAttributes","sqs:getQueueUrl","sqs:listDeadLetterSourceQueues","sqs:listQueues","ssm:describeActivations","ssm:describeAssociation","ssm:describeAssociationExecutionTargets","ssm:describeAssociationExecutions","ssm:describeAutomationExecutions","ssm:describeAutomationStepExecutions","ssm:describeAvailablePatches","ssm:describeDocument","ssm:describeDocumentPermission","ssm:describeEffectiveInstanceAssociations","ssm:describeEffectivePatchesForPatchBaseline","ssm:describeInstanceAssociationsStatus","ssm:describeInstanceInformation","ssm:describeInstancePatchStates","ssm:describeInstancePatchStatesForPatchGroup","ssm:describeInstancePatches","ssm:describeInventoryDeletions","ssm:describeMaintenanceWindowExecutionTaskInvocations","ssm:describeMaintenanceWindowExecutionTasks","ssm:describeMaintenanceWindowExecutions","ssm:describeMaintenanceWindowSchedule","ssm:describeMaintenanceWindowTargets","ssm:describeMaintenanceWindowTasks","ssm:describeMaintenanceWindows","ssm:describeMaintenanceWindowsForTarget","ssm:describeParameters","ssm:describePatchBaselines","ssm:describePatchGroupState","ssm:describePatchGroups","ssm:describePatchProperties","ssm:describeSessions","ssm:getAutomationExecution","ssm:getCommandInvocation","ssm:getConnectionStatus","ssm:getDefaultPatchBaseline","ssm:getDeployablePatchSnapshotForInstance","ssm:getInventorySchema","ssm:getMaintenanceWindow","ssm:getMaintenanceWindowExecution","ssm:getMaintenanceWindowExecutionTask","ssm:getMaintenanceWindowExecutionTaskInvocation","ssm:getMaintenanceWindowTask","ssm:getPatchBaseline","ssm:getPatchBaselineForPatchGroup","ssm:getServiceSetting","ssm:labelParameterVersion","ssm:listAssociationVersions","ssm:listAssociations","ssm:listCommandInvocations","ssm:listCommands","ssm:listComplianceItems","ssm:listComplianceSummaries","ssm:listDocumentVersions","ssm:listDocuments","ssm:listResourceComplianceSummaries","ssm:listResourceDataSync","ssm:listTagsForResource","states:describeActivity","states:describeExecution","states:describeStateMachine","states:describeStateMachineForExecution","states:getExecutionHistory","states:listActivities","states:listExecutions","states:listStateMachines","storagegateway:describeBandwidthRateLimit","storagegateway:describeCache","storagegateway:describeCachediSCSIVolumes","storagegateway:describeGatewayInformation","storagegateway:describeMaintenanceStartTime","storagegateway:describeNFSFileShares","storagegateway:describeSMBFileShares","storagegateway:describeSMBSettings","storagegateway:describeSnapshotSchedule","storagegateway:describeStorediSCSIVolumes","storagegateway:describeTapeArchives","storagegateway:describeTapeRecoveryPoints","storagegateway:describeTapes","storagegateway:describeUploadBuffer","storagegateway:describeVTLDevices","storagegateway:describeWorkingStorage","storagegateway:listFileShares","storagegateway:listGateways","storagegateway:listLocalDisks","storagegateway:listTagsForResource","storagegateway:listTapes","storagegateway:listVolumeInitiators","storagegateway:listVolumeRecoveryPoints","storagegateway:listVolumes","swf:countClosedWorkflowExecutions","swf:countOpenWorkflowExecutions","swf:countPendingActivityTasks","swf:countPendingDecisionTasks","swf:describeActivityType","swf:describeDomain","swf:describeWorkflowExecution","swf:describeWorkflowType","swf:getWorkflowExecutionHistory","swf:listActivityTypes","swf:listClosedWorkflowExecutions","swf:listDomains","swf:listOpenWorkflowExecutions","swf:listWorkflowTypes","transfer:describeServer","transfer:describeUser","transfer:listServers","transfer:listTagsForResource","transfer:listUsers","waf-regional:getByteMatchSet","waf-regional:getChangeTokenStatus","waf-regional:getIPSet","waf-regional:getRule","waf-regional:getSqlInjectionMatchSet","waf-regional:getWebACL","waf-regional:getWebACLForResource","waf-regional:listByteMatchSets","waf-regional:listIPSets","waf-regional:listResourcesForWebACL","waf-regional:listRules","waf-regional:listSqlInjectionMatchSets","waf-regional:listWebACLs","waf:getByteMatchSet","waf:getChangeTokenStatus","waf:getIPSet","waf:getRule","waf:getSampledRequests","waf:getSizeConstraintSet","waf:getSqlInjectionMatchSet","waf:getWebACL","waf:getXssMatchSet","waf:listByteMatchSets","waf:listIPSets","waf:listRules","waf:listSizeConstraintSets","waf:listSqlInjectionMatchSets","waf:listWebACLs","waf:listXssMatchSets","wafv2:checkCapacity","wafv2:describeManagedRuleGroup","wafv2:getIPSet","wafv2:getLoggingConfiguration","wafv2:getPermissionPolicy","wafv2:getRateBasedStatementManagedKeys","wafv2:getRegexPatternSet","wafv2:getRuleGroup","wafv2:getSampledRequests","wafv2:getWebACL","wafv2:getWebACLForResource","wafv2:listAvailableManagedRuleGroups","wafv2:listIPSets","wafv2:listLoggingConfigurations","wafv2:listRegexPatternSets","wafv2:listResourcesForWebACL","wafv2:listRuleGroups","wafv2:listTagsForResource","wafv2:listWebACLs","workdocs:checkAlias","workdocs:describeAvailableDirectories","workdocs:describeInstances","worklink:describeAuditStreamConfiguration","worklink:describeCompanyNetworkConfiguration","worklink:describeDevice","worklink:describeDevicePolicyConfiguration","worklink:describeDomain","worklink:describeFleetMetadata","worklink:describeIdentityProviderConfiguration","worklink:describeWebsiteCertificateAuthority","worklink:listDevices","worklink:listDomains","worklink:listFleets","worklink:listWebsiteAuthorizationProviders","worklink:listWebsiteCertificateAuthorities","workmail:describeGroup","workmail:describeOrganization","workmail:describeResource","workmail:describeUser","workmail:listAliases","workmail:listGroupMembers","workmail:listGroups","workmail:listMailboxPermissions","workmail:listOrganizations","workmail:listResourceDelegates","workmail:listResources","workmail:listUsers","workspaces:describeAccount","workspaces:describeAccountModifications","workspaces:describeIpGroups","workspaces:describeTags","workspaces:describeWorkspaceBundles","workspaces:describeWorkspaceDirectories","workspaces:describeWorkspaceImages","workspaces:describeWorkspaces","workspaces:describeWorkspacesConnectionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["apigateway","iam","a4b","access-analyzer","acm-pca","acm","amplify","application-autoscaling","appmesh","appstream","appsync","athena","autoscaling-plans","autoscaling","backup","batch","braket","budgets","ce","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codeartifact","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-identity","cognito-idp","cognito-sync","compute-optimizer","config","connect","controltower","databrew","datapipeline","datasync","dax","detective","devicefarm","directconnect","dlm","dms","ds","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","es","events","firehose","fms","forecast","fsx","glacier","globalaccelerator","glue","greengrass","guardduty","health","imagebuilder","importexport","inspector","iot","iotevents","iotsitewise","kafka","kendra","kinesis","kinesisanalytics","kms","lambda","launchwizard","lex","license-manager","lightsail","logs","machinelearning","managedblockchain","mediaconnect","mediaconvert","medialive","mediapackage","mediastore","mediatailor","mobiletargeting","mq","network-firewall","networkmanager","opsworks-cm","opsworks","outposts","personalize","polly","pricing","quicksight","rds","redshift","rekognition","resource-groups","robomaker","route53","route53domains","route53resolver","s3","sagemaker","sdb","secretsmanager","securityhub","servicecatalog","servicequotas","ses","shield","sms-voice","sms","snowball","sns","sqs","ssm","states","storagegateway","swf","transfer","waf-regional","waf","wafv2","workdocs","worklink","workmail","workspaces"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingRDSClusterPolicy","PolicyName":"AWSApplicationAutoscalingRDSClusterPolicy","PolicyId":"ANPAJ7XS52I27Q2JVKALU","Path":"/aws-service-role/","Description":"Policy granting permissions to Application Auto Scaling to access RDS and CloudWatch.","DefaultVersionId":"v3"},"document":[{"Action":["rds:AddTagsToResource","rds:CreateDBInstance","rds:DeleteDBInstance","rds:DescribeDBClusters","rds:DescribeDBInstances","rds:ModifyDBCluster","cloudwatch:PutMetricAlarm","cloudwatch:DescribeAlarms","cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["rds","cloudwatch","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonSSMFullAccess","PolicyName":"AmazonSSMFullAccess","PolicyId":"ANPAJA7V6HI4ISQFMDYAG","Path":"/","Description":"Provides full access to Amazon SSM.","DefaultVersionId":"v4"},"document":[{"Action":["cloudwatch:PutMetricData","ds:CreateComputer","ds:DescribeDirectories","ec2:DescribeInstanceStatus","logs:*","ssm:*","ec2messages:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*"]},{"Action":["ssmmessages:CreateControlChannel","ssmmessages:CreateDataChannel","ssmmessages:OpenControlChannel","ssmmessages:OpenDataChannel"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ds","ec2","logs","ssm","ec2messages","iam","ssmmessages"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodeCommitReadOnly","PolicyName":"AWSCodeCommitReadOnly","PolicyId":"ANPAJACNSXR7Z2VLJW3D6","Path":"/","Description":"Provides read only access to AWS CodeCommit via the AWS Management Console.","DefaultVersionId":"v10"},"document":[{"Action":["codecommit:BatchGet*","codecommit:BatchDescribe*","codecommit:Describe*","codecommit:EvaluatePullRequestApprovalRules","codecommit:Get*","codecommit:List*","codecommit:GitPull"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DescribeRule","events:ListTargetsByRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/codecommit*"]},{"Action":["sns:ListTopics","sns:ListSubscriptionsByTopic","sns:GetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListAccessKeys","iam:ListSSHPublicKeys","iam:ListServiceSpecificCredentials","iam:ListAccessKeys","iam:GetSSHPublicKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]},{"Action":["codestar-connections:ListConnections","codestar-connections:GetConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codestar-connections:*:*:connection/*"]},{"Action":["codestar-notifications:DescribeNotificationRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-notifications:ListNotificationRules","codestar-notifications:ListEventTypes","codestar-notifications:ListTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codeguru-reviewer:DescribeRepositoryAssociation","codeguru-reviewer:ListRepositoryAssociations","codeguru-reviewer:DescribeCodeReview","codeguru-reviewer:ListCodeReviews"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["codecommit","events","sns","lambda","iam","codestar-connections","codestar-notifications","codeguru-reviewer"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonCognitoReadOnly","PolicyName":"AmazonCognitoReadOnly","PolicyId":"ANPAJBFTRZD2GQGJHSVQK","Path":"/","Description":"Provides read only access to Amazon Cognito resources.","DefaultVersionId":"v4"},"document":[{"Action":["cognito-identity:Describe*","cognito-identity:Get*","cognito-identity:List*","cognito-idp:Describe*","cognito-idp:AdminGet*","cognito-idp:AdminList*","cognito-idp:List*","cognito-idp:Get*","cognito-sync:Describe*","cognito-sync:Get*","cognito-sync:List*","iam:ListOpenIdConnectProviders","iam:ListRoles","sns:ListPlatformApplications"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cognito-identity","cognito-idp","cognito-sync","iam","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSApplicationDiscoveryServiceFullAccess","PolicyName":"AWSApplicationDiscoveryServiceFullAccess","PolicyId":"ANPAJBNJEA6ZXM2SBOPDU","Path":"/","Description":"Provides full access to view and tag Configuration Items maintained by the AWS Application Discovery Service ","DefaultVersionId":"v4"},"document":[{"Action":["mgh:*","discovery:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["mgh","discovery","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSSOReadOnly","PolicyName":"AWSSSOReadOnly","PolicyId":"ANPAJBSMEEZXFDMKMY43I","Path":"/","Description":"Provides read only access to AWS SSO configurations.","DefaultVersionId":"v6"},"document":[{"Action":["ds:DescribeDirectories","ds:DescribeTrusts","iam:ListPolicies","organizations:DescribeOrganization","organizations:DescribeAccount","organizations:ListParents","organizations:ListChildren","organizations:ListAccounts","organizations:ListRoots","organizations:ListAccountsForParent","organizations:ListOrganizationalUnitsForParent","sso:Describe*","sso:Get*","sso:List*","sso:Search*","sso-directory:DescribeDirectory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ds","iam","organizations","sso","sso-directory"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAppSyncAdministrator","PolicyName":"AWSAppSyncAdministrator","PolicyId":"ANPAJBYY36AJPXTTWIXCY","Path":"/","Description":"Provides administrative access to the AppSync service, though not enough to access via the console.","DefaultVersionId":"v2"},"document":[{"Action":["appsync:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/appsync.amazonaws.com/AWSServiceRoleForAppSync*"]}],"services":["appsync","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSEC2FleetServiceRolePolicy","PolicyName":"AWSEC2FleetServiceRolePolicy","PolicyId":"ANPAJCL355O4TC27CPKVC","Path":"/aws-service-role/","Description":"Allows EC2 Fleet to launch and manage instances.","DefaultVersionId":"v3"},"document":[{"Action":["ec2:DescribeImages","ec2:DescribeSubnets","ec2:RequestSpotInstances","ec2:DescribeInstanceStatus","ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:spot-instances-request/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/DynamoDBReplicationServiceRolePolicy","PolicyName":"DynamoDBReplicationServiceRolePolicy","PolicyId":"ANPAJCUNRXL4BWASNJED2","Path":"/aws-service-role/","Description":"Permissions required by DynamoDB for cross-region data replication","DefaultVersionId":"v6"},"document":[{"Action":["dynamodb:GetItem","dynamodb:PutItem","dynamodb:UpdateItem","dynamodb:DeleteItem","dynamodb:DescribeTable","dynamodb:UpdateTable","dynamodb:Scan","dynamodb:DescribeStream","dynamodb:GetRecords","dynamodb:GetShardIterator","dynamodb:DescribeTimeToLive","dynamodb:UpdateTimeToLive","dynamodb:DescribeLimits","application-autoscaling:RegisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:PutScalingPolicy","application-autoscaling:DescribeScalingPolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dynamodb","application-autoscaling","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess","PolicyName":"AWSGlueConsoleSageMakerNotebookFullAccess","PolicyId":"ANPAJELFOHJC42QS3ZSYY","Path":"/","Description":"Provides full access to AWS Glue via the AWS Management Console and access to sagemaker notebook instances.","DefaultVersionId":"v2"},"document":[{"Action":["glue:*","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","iam:ListRoles","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:DescribeVpcAttribute","ec2:DescribeKeyPairs","ec2:DescribeInstances","ec2:DescribeImages","ec2:CreateNetworkInterface","ec2:AttachNetworkInterface","ec2:ModifyNetworkInterfaceAttribute","ec2:DeleteNetworkInterface","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeNetworkInterfaces","rds:DescribeDBInstances","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketAcl","s3:GetBucketLocation","cloudformation:DescribeStacks","cloudformation:GetTemplateSummary","dynamodb:ListTables","kms:ListAliases","kms:DescribeKey","sagemaker:ListNotebookInstances","cloudformation:ListStacks","cloudwatch:GetMetricData","cloudwatch:ListDashboards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*","arn:aws:s3:::aws-glue-*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-glue*/*"]},{"Action":["sagemaker:CreatePresignedNotebookInstanceUrl","sagemaker:CreateNotebookInstance","sagemaker:DeleteNotebookInstance","sagemaker:DescribeNotebookInstance","sagemaker:StartNotebookInstance","sagemaker:StopNotebookInstance","sagemaker:UpdateNotebookInstance","sagemaker:ListTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance/aws-glue-*"]},{"Action":["sagemaker:DescribeNotebookInstanceLifecycleConfig","sagemaker:CreateNotebookInstanceLifecycleConfig","sagemaker:DeleteNotebookInstanceLifecycleConfig","sagemaker:ListNotebookInstanceLifecycleConfigs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/aws-glue-*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances","ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceSageMakerNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"]}],"services":["glue","redshift","iam","ec2","rds","s3","cloudformation","dynamodb","kms","sagemaker","cloudwatch","logs","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMSKFullAccess","PolicyName":"AmazonMSKFullAccess","PolicyId":"ANPAJERQQQTWI5OMENTQE","Path":"/","Description":"Provide full access to Amazon MSK and other required permissions for its dependencies.","DefaultVersionId":"v3"},"document":[{"Action":["kafka:*","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","kms:DescribeKey","kms:CreateGrant","logs:CreateLogDelivery","logs:GetLogDelivery","logs:UpdateLogDelivery","logs:DeleteLogDelivery","logs:ListLogDeliveries","S3:GetBucketPolicy","logs:PutResourcePolicy","logs:DescribeResourcePolicies","logs:DescribeLogGroups","firehose:TagDeliveryStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/kafka.amazonaws.com/AWSServiceRoleForKafka*"]},{"Action":["iam:AttachRolePolicy","iam:PutRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/kafka.amazonaws.com/AWSServiceRoleForKafka*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/delivery.logs.amazonaws.com/AWSServiceRoleForLogDelivery*"]}],"services":["kafka","ec2","kms","logs","S3","firehose","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEKSServicePolicy","PolicyName":"AmazonEKSServicePolicy","PolicyId":"ANPAJFCNXU6HPGCIVXYDI","Path":"/","Description":"This policy allows Amazon Elastic Container Service for Kubernetes to create and manage the necessary resources to operate EKS Clusters.","DefaultVersionId":"v6"},"document":[{"Action":["ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:DeleteNetworkInterface","ec2:DescribeInstances","ec2:DescribeNetworkInterfaces","ec2:DetachNetworkInterface","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","iam:ListAttachedRolePolicies","eks:UpdateClusterVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:vpc/*","arn:aws:ec2:*:*:subnet/*"]},{"Action":["route53:AssociateVPCWithHostedZone"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogStream","logs:DescribeLogStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/eks/*:*"]},{"Action":["logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/eks/*:*:*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","eks","route53","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSCloud9ServiceRolePolicy","PolicyName":"AWSCloud9ServiceRolePolicy","PolicyId":"ANPAJFXGCBXQIZATFZ4YG","Path":"/aws-service-role/","Description":"Service Linked Role Policy for AWS Cloud9","DefaultVersionId":"v7"},"document":[{"Action":["ec2:RunInstances","ec2:CreateSecurityGroup","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","ec2:DescribeInstances","ec2:DescribeInstanceStatus","cloudformation:CreateStack","cloudformation:DescribeStacks","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances","ec2:DeleteSecurityGroup","ec2:AuthorizeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-cloud9-*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:StartInstances","ec2:StopInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListInstanceProfiles","iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/cloud9/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSCloud9SSMAccessRole"]}],"services":["ec2","cloudformation","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataSyncFullAccess","PolicyName":"AWSDataSyncFullAccess","PolicyId":"ANPAJGOHCDUQULZJKDGT4","Path":"/","Description":"Provides full access to AWS DataSync and minimal access to its dependencies","DefaultVersionId":"v3"},"document":[{"Action":["datasync:*","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:DeleteNetworkInterface","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:ModifyNetworkInterfaceAttribute","fsx:DescribeFileSystems","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargets","iam:GetRole","iam:ListRoles","logs:CreateLogGroup","logs:DescribeLogGroups","logs:DescribeResourcePolicies","s3:ListAllMyBuckets","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["datasync","ec2","fsx","elasticfilesystem","iam","logs","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy","PolicyName":"AWSTrustedAdvisorServiceRolePolicy","PolicyId":"ANPAJH4QJ2WMHBOB47BUE","Path":"/aws-service-role/","Description":"Access for the AWS Trusted Advisor Service to help reduce cost, increase performance, and improve security of your AWS environment.","DefaultVersionId":"v8"},"document":[{"Action":["autoscaling:DescribeAccountLimits","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","cloudformation:DescribeAccountLimits","cloudformation:DescribeStacks","cloudformation:ListStacks","cloudfront:ListDistributions","cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","ec2:DescribeAddresses","ec2:DescribeReservedInstances","ec2:DescribeInstances","ec2:DescribeVpcs","ec2:DescribeInternetGateways","ec2:DescribeImages","ec2:DescribeVolumes","ec2:DescribeSecurityGroups","ec2:DescribeReservedInstancesOfferings","ec2:DescribeSnapshots","ec2:DescribeVpnConnections","ec2:DescribeVpnGateways","ec2:DescribeLaunchTemplateVersions","elasticloadbalancing:DescribeAccountLimits","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancerPolicyTypes","elasticloadbalancing:DescribeLoadBalancers","iam:GenerateCredentialReport","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetServerCertificate","iam:ListServerCertificates","kinesis:DescribeLimits","rds:DescribeAccountAttributes","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultParameters","rds:DescribeEvents","rds:DescribeOptionGroupOptions","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribeReservedDBInstances","rds:DescribeReservedDBInstancesOfferings","rds:ListTagsForResource","redshift:DescribeClusters","redshift:DescribeReservedNodeOfferings","redshift:DescribeReservedNodes","route53:GetAccountLimit","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListResourceRecordSets","s3:GetBucketAcl","s3:GetBucketPolicy","s3:GetBucketPolicyStatus","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketVersioning","s3:GetBucketPublicAccessBlock","s3:ListBucket","s3:ListAllMyBuckets","ses:GetSendQuota","sqs:ListQueues","cloudwatch:GetMetricStatistics","ce:GetReservationPurchaseRecommendation","ce:GetSavingsPlansPurchaseRecommendation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudfront","cloudtrail","dynamodb","ec2","elasticloadbalancing","iam","kinesis","rds","redshift","route53","s3","ses","sqs","cloudwatch","ce"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonWorkMailReadOnlyAccess","PolicyName":"AmazonWorkMailReadOnlyAccess","PolicyId":"ANPAJHF7J65E2QFKCWAJM","Path":"/","Description":"Provides read only access to WorkMail and SES.","DefaultVersionId":"v4"},"document":[{"Action":["ses:Describe*","ses:Get*","workmail:Describe*","workmail:Get*","workmail:List*","workmail:Search*","lambda:ListFunctions","iam:ListRoles","logs:DescribeLogGroups","cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ses","workmail","lambda","iam","logs","cloudwatch"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDocDBConsoleFullAccess","PolicyName":"AmazonDocDBConsoleFullAccess","PolicyId":"ANPAJHV6VMSNDDHJ3ESNI","Path":"/","Description":"Provides full access to manage Amazon DocumentDB with MongoDB compatibility using the AWS Management Console. Note this policy also grants full access to publish on all SNS topics within the account, permissions to create and edit Amazon EC2 instances and VPC configurations, permissions to view and list keys on Amazon KMS, and full access to Amazon RDS and Amazon Neptune.","DefaultVersionId":"v3"},"document":[{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBCluster","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBInstance","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:AllocateAddress","ec2:AssignIpv6Addresses","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeCustomerGateways","ec2:DescribeInstances","ec2:DescribeNatGateways","ec2:DescribeNetworkInterfaces","ec2:DescribePrefixLists","ec2:DescribeRouteTables","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:ModifyVpcEndpoint","kms:DescribeKey","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","iam","cloudwatch","ec2","kms","logs","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSStepFunctionsConsoleFullAccess","PolicyName":"AWSStepFunctionsConsoleFullAccess","PolicyId":"ANPAJIYC52YWRX6OSMJWK","Path":"/","Description":"An access policy for providing a user/role/etc access to the AWS StepFunctions console. For a full console experience, in addition to this policy, a user may need iam:PassRole permission on other IAM roles that can be assumed by the service.","DefaultVersionId":"v2"},"document":[{"Action":["states:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/StatesExecutionRole*"]},{"Action":["lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["states","iam","lambda"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMacieFullAccess","PolicyName":"AmazonMacieFullAccess","PolicyId":"ANPAJJF2N5FR6S5TZN5OA","Path":"/","Description":"Provides full access to Amazon Macie.","DefaultVersionId":"v3"},"document":[{"Action":["macie:*","macie2:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["macie","macie2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess","PolicyName":"CloudFrontReadOnlyAccess","PolicyId":"ANPAJJZMNYOTZCNQP36LG","Path":"/","Description":"Provides access to CloudFront distribution configuration information and list distributions via the AWS Management Console.","DefaultVersionId":"v4"},"document":[{"Action":["acm:ListCertificates","cloudfront:Get*","cloudfront:List*","iam:ListServerCertificates","route53:List*","waf:ListWebACLs","waf:GetWebACL","wafv2:ListWebACLs","wafv2:GetWebACL"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["acm","cloudfront","iam","route53","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSDeepLensServiceRolePolicy","PolicyName":"AWSDeepLensServiceRolePolicy","PolicyId":"ANPAJK2Z2S7FPJFCYGR72","Path":"/service-role/","Description":"Grants AWS DeepLens access to AWS Services, resources and roles needed by DeepLens and its dependencies including IoT, S3, GreenGrass and AWS Lambda.","DefaultVersionId":"v6"},"document":[{"Action":["iot:CreateThing","iot:DeleteThing","iot:DeleteThingShadow","iot:DescribeThing","iot:GetThingShadow","iot:UpdateThing","iot:UpdateThingShadow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/deeplens*"]},{"Action":["iot:AttachThingPrincipal","iot:DetachThingPrincipal","iot:UpdateCertificate","iot:DeleteCertificate","iot:DetachPrincipalPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/deeplens*","arn:aws:iot:*:*:cert/*"]},{"Action":["iot:CreateKeysAndCertificate","iot:CreatePolicy","iot:CreatePolicyVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iot:AttachPrincipalPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:policy/deeplens*","arn:aws:iot:*:*:cert/*"]},{"Action":["iot:GetThingShadow","iot:UpdateThingShadow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/deeplens*"]},{"Action":["iot:DescribeEndpoint"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["deeplens:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::deeplens*"]},{"Action":["s3:DeleteBucket","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::deeplens*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSDeepLens*","arn:aws:iam::*:role/service-role/AWSDeepLens*"]},{"Action":["greengrass:AssociateRoleToGroup","greengrass:AssociateServiceRoleToAccount","greengrass:CreateResourceDefinition","greengrass:CreateResourceDefinitionVersion","greengrass:CreateCoreDefinition","greengrass:CreateCoreDefinitionVersion","greengrass:CreateDeployment","greengrass:CreateFunctionDefinition","greengrass:CreateFunctionDefinitionVersion","greengrass:CreateGroup","greengrass:CreateGroupCertificateAuthority","greengrass:CreateGroupVersion","greengrass:CreateLoggerDefinition","greengrass:CreateLoggerDefinitionVersion","greengrass:CreateSubscriptionDefinition","greengrass:CreateSubscriptionDefinitionVersion","greengrass:DeleteCoreDefinition","greengrass:DeleteFunctionDefinition","greengrass:DeleteGroup","greengrass:DeleteLoggerDefinition","greengrass:DeleteSubscriptionDefinition","greengrass:DisassociateRoleFromGroup","greengrass:DisassociateServiceRoleFromAccount","greengrass:GetAssociatedRole","greengrass:GetConnectivityInfo","greengrass:GetCoreDefinition","greengrass:GetCoreDefinitionVersion","greengrass:GetDeploymentStatus","greengrass:GetDeviceDefinition","greengrass:GetDeviceDefinitionVersion","greengrass:GetFunctionDefinition","greengrass:GetFunctionDefinitionVersion","greengrass:GetGroup","greengrass:GetGroupCertificateAuthority","greengrass:GetGroupCertificateConfiguration","greengrass:GetGroupVersion","greengrass:GetLoggerDefinition","greengrass:GetLoggerDefinitionVersion","greengrass:GetResourceDefinition","greengrass:GetServiceRoleForAccount","greengrass:GetSubscriptionDefinition","greengrass:GetSubscriptionDefinitionVersion","greengrass:ListCoreDefinitionVersions","greengrass:ListCoreDefinitions","greengrass:ListDeployments","greengrass:ListDeviceDefinitionVersions","greengrass:ListDeviceDefinitions","greengrass:ListFunctionDefinitionVersions","greengrass:ListFunctionDefinitions","greengrass:ListGroupCertificateAuthorities","greengrass:ListGroupVersions","greengrass:ListGroups","greengrass:ListLoggerDefinitionVersions","greengrass:ListLoggerDefinitions","greengrass:ListSubscriptionDefinitionVersions","greengrass:ListSubscriptionDefinitions","greengrass:ResetDeployments","greengrass:UpdateConnectivityInfo","greengrass:UpdateCoreDefinition","greengrass:UpdateDeviceDefinition","greengrass:UpdateFunctionDefinition","greengrass:UpdateGroup","greengrass:UpdateGroupCertificateConfiguration","greengrass:UpdateLoggerDefinition","greengrass:UpdateSubscriptionDefinition","greengrass:UpdateResourceDefinition"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:ListFunctions","lambda:ListVersionsByFunction","lambda:PublishVersion","lambda:UpdateFunctionCode","lambda:UpdateFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:deeplens*"]},{"Action":["lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:ListFunctions","lambda:ListVersionsByFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*"]},{"Action":["sagemaker:CreateTrainingJob","sagemaker:DescribeTrainingJob","sagemaker:StopTrainingJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:training-job/deeplens*"]},{"Action":["sagemaker:DescribeTrainingJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:training-job/*"]},{"Action":["kinesisvideo:CreateStream","kinesisvideo:DescribeStream","kinesisvideo:DeleteStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kinesisvideo:*:*:stream/deeplens*/*"]},{"Action":["kinesisvideo:GetDataEndpoint"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iot","deeplens","s3","iam","greengrass","lambda","sagemaker","kinesisvideo"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService","PolicyName":"AWSElasticBeanstalkService","PolicyId":"ANPAJKQ5SN74ZQ4WASXBM","Path":"/service-role/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-servicerole.html. AWS Elastic Beanstalk Service role policy which grants permissions to create & manage resources (i.e.: AutoScaling, EC2, S3, CloudFormation, ELB, etc.) on your behalf.","DefaultVersionId":"v16"},"document":[{"Action":["cloudformation:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awseb-*","arn:aws:cloudformation:*:*:stack/eb-*"]},{"Action":["logs:DeleteLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"]},{"Action":["s3:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*","arn:aws:s3:::elasticbeanstalk-*/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:AttachInstances","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteScheduledAction","autoscaling:DescribeAccountLimits","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeAutoScalingInstances","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLoadBalancers","autoscaling:DescribeNotificationConfigurations","autoscaling:DescribeScalingActivities","autoscaling:DescribeScheduledActions","autoscaling:DetachInstances","autoscaling:DeletePolicy","autoscaling:PutScalingPolicy","autoscaling:PutScheduledUpdateGroupAction","autoscaling:PutNotificationConfiguration","autoscaling:ResumeProcesses","autoscaling:SetDesiredCapacity","autoscaling:SuspendProcesses","autoscaling:TerminateInstanceInAutoScalingGroup","autoscaling:UpdateAutoScalingGroup","cloudwatch:PutMetricAlarm","ec2:AssociateAddress","ec2:AllocateAddress","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion","ec2:DescribeLaunchTemplates","ec2:DescribeLaunchTemplateVersions","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions","ec2:CreateSecurityGroup","ec2:DeleteSecurityGroup","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeInstanceAttribute","ec2:DescribeSpotInstanceRequests","ec2:DescribeVpcClassicLink","ec2:DisassociateAddress","ec2:ReleaseAddress","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:TerminateInstances","ecs:CreateCluster","ecs:DeleteCluster","ecs:DescribeClusters","ecs:RegisterTaskDefinition","elasticbeanstalk:*","elasticloadbalancing:ApplySecurityGroupsToLoadBalancer","elasticloadbalancing:ConfigureHealthCheck","elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetHealth","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:RegisterTargets","elasticloadbalancing:DeregisterTargets","iam:ListRoles","iam:PassRole","logs:CreateLogGroup","logs:PutRetentionPolicy","logs:DescribeLogGroups","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeOrderableDBInstanceOptions","s3:GetObject","s3:GetObjectAcl","s3:ListBucket","sns:CreateTopic","sns:GetTopicAttributes","sns:ListSubscriptionsByTopic","sns:Subscribe","sns:SetTopicAttributes","sqs:GetQueueAttributes","sqs:GetQueueUrl","codebuild:CreateProject","codebuild:DeleteProject","codebuild:BatchGetBuilds","codebuild:StartBuild"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","logs","s3","ec2","autoscaling","cloudwatch","ecs","elasticbeanstalk","elasticloadbalancing","iam","rds","sns","sqs","codebuild"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMReadOnlyAccess","PolicyName":"IAMReadOnlyAccess","PolicyId":"ANPAJKSO7NDY4T57MWDSQ","Path":"/","Description":"Provides read only access to IAM via the AWS Management Console.","DefaultVersionId":"v4"},"document":[{"Action":["iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","iam:SimulateCustomPolicy","iam:SimulatePrincipalPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonCognitoPowerUser","PolicyName":"AmazonCognitoPowerUser","PolicyId":"ANPAJKW5H2HNCPGCYGR6Y","Path":"/","Description":"Provides administrative access to existing Amazon Cognito resources. You will need AWS account admin privileges to create new Cognito resources.","DefaultVersionId":"v6"},"document":[{"Action":["cognito-identity:*","cognito-idp:*","cognito-sync:*","iam:ListRoles","iam:ListOpenIdConnectProviders","iam:GetRole","iam:ListSAMLProviders","iam:GetSAMLProvider","kinesis:ListStreams","lambda:GetPolicy","lambda:ListFunctions","sns:GetSMSSandboxAccountStatus","sns:ListPlatformApplications","ses:ListIdentities","ses:GetIdentityVerificationAttributes","mobiletargeting:GetApps","acm:ListCertificates"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdp*","arn:aws:iam::*:role/aws-service-role/email.cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdpEmail*"]}],"services":["cognito-identity","cognito-idp","cognito-sync","iam","kinesis","lambda","sns","ses","mobiletargeting","acm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderAudit","PolicyName":"AWSIoTDeviceDefenderAudit","PolicyId":"ANPAJKUN6OAGIHZ66TRKO","Path":"/service-role/","Description":"Provides read access for IoT and related resources","DefaultVersionId":"v3"},"document":[{"Action":["iot:GetLoggingOptions","iot:GetV2LoggingOptions","iot:ListCACertificates","iot:ListCertificates","iot:DescribeCACertificate","iot:DescribeCertificate","iot:ListPolicies","iot:GetPolicy","iot:GetEffectivePolicies","iot:ListRoleAliases","iot:DescribeRoleAlias","cognito-identity:GetIdentityPoolRoles","iam:ListRolePolicies","iam:ListAttachedRolePolicies","iam:GetRole","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRolePolicy","iam:GenerateServiceLastAccessedDetails","iam:GetServiceLastAccessedDetails"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iot","cognito-identity","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess","PolicyName":"AmazonElasticFileSystemFullAccess","PolicyId":"ANPAJKXTMNVQGIDNCKPBC","Path":"/","Description":"Provides full access to Amazon EFS via the AWS Management Console.","DefaultVersionId":"v7"},"document":[{"Action":["cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricData","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DescribeAvailabilityZones","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","elasticfilesystem:CreateFileSystem","elasticfilesystem:CreateMountTarget","elasticfilesystem:CreateTags","elasticfilesystem:CreateAccessPoint","elasticfilesystem:DeleteFileSystem","elasticfilesystem:DeleteMountTarget","elasticfilesystem:DeleteTags","elasticfilesystem:DeleteAccessPoint","elasticfilesystem:DeleteFileSystemPolicy","elasticfilesystem:DescribeAccountPreferences","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeTags","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:ModifyMountTargetSecurityGroups","elasticfilesystem:PutAccountPreferences","elasticfilesystem:PutBackupPolicy","elasticfilesystem:PutLifecycleConfiguration","elasticfilesystem:PutFileSystemPolicy","elasticfilesystem:UpdateFileSystem","elasticfilesystem:TagResource","elasticfilesystem:UntagResource","elasticfilesystem:ListTagsForResource","elasticfilesystem:Backup","elasticfilesystem:Restore","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ec2","elasticfilesystem","kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServerMigrationConnector","PolicyName":"ServerMigrationConnector","PolicyId":"ANPAJKZRWXIPK5HSG3QDQ","Path":"/","Description":"Permissions to allow the AWS Server Migration Connector to migrate VMs to EC2. Allows communication with the AWS Server Migration Service, read/write access to S3 buckets starting with 'sms-b-' and 'import-to-ec2-' as well as the buckets used for AWS Server Migration Connector upgrade, AWS Server Migration Connector registration with AWS, and metrics upload to AWS.","DefaultVersionId":"v1"},"document":[{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sms:SendMessage","sms:GetMessages"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteObject","s3:GetBucketLocation","s3:GetObject","s3:ListBucket","s3:PutObject","s3:PutObjectAcl","s3:PutLifecycleConfiguration","s3:AbortMultipartUpload","s3:ListBucketMultipartUploads","s3:ListMultipartUploadParts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::sms-b-*","arn:aws:s3:::import-to-ec2-*","arn:aws:s3:::server-migration-service-upgrade","arn:aws:s3:::server-migration-service-upgrade/*","arn:aws:s3:::connector-platform-upgrade-info/*","arn:aws:s3:::connector-platform-upgrade-info","arn:aws:s3:::connector-platform-upgrade-bundles/*","arn:aws:s3:::connector-platform-upgrade-bundles","arn:aws:s3:::connector-platform-release-notes/*","arn:aws:s3:::connector-platform-release-notes"]},{"Action":["awsconnector:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["SNS:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:metrics-sns-topic-for-*"]}],"services":["iam","sms","s3","awsconnector","SNS"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonESCognitoAccess","PolicyName":"AmazonESCognitoAccess","PolicyId":"ANPAJL2FUMODIGNDPTZHO","Path":"/","Description":"Provides limited access to the Amazon Cognito configuration service.","DefaultVersionId":"v1"},"document":[{"Action":["cognito-idp:DescribeUserPool","cognito-idp:CreateUserPoolClient","cognito-idp:DeleteUserPoolClient","cognito-idp:DescribeUserPoolClient","cognito-idp:AdminInitiateAuth","cognito-idp:AdminUserGlobalSignOut","cognito-idp:ListUserPoolClients","cognito-identity:DescribeIdentityPool","cognito-identity:UpdateIdentityPool","cognito-identity:SetIdentityPoolRoles","cognito-identity:GetIdentityPoolRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cognito-idp","cognito-identity","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMQFullAccess","PolicyName":"AmazonMQFullAccess","PolicyId":"ANPAJLKBROJNQYDDXOOGG","Path":"/","Description":"Provides full access to AmazonMQ via the AWS Management Console.","DefaultVersionId":"v5"},"document":[{"Action":["mq:*","cloudformation:CreateStack","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DetachNetworkInterface","ec2:DescribeInternetGateways","ec2:DescribeNetworkInterfaces","ec2:DescribeNetworkInterfacePermissions","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:CreateSecurityGroup","ec2:AuthorizeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/amazonmq/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["mq","cloudformation","ec2","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonAppStreamFullAccess","PolicyName":"AmazonAppStreamFullAccess","PolicyId":"ANPAJLZZXU2YQVGL4QDNC","Path":"/","Description":"Provides full access to Amazon AppStream via the AWS Management Console.","DefaultVersionId":"v6"},"document":[{"Action":["appstream:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","application-autoscaling:DescribeScheduledActions","application-autoscaling:PutScheduledAction","application-autoscaling:DeleteScheduledAction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/ApplicationAutoScalingForAmazonAppStreamAccess"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/appstream.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_AppStreamFleet"]}],"services":["appstream","application-autoscaling","cloudwatch","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/ApplicationDiscoveryServiceContinuousExportServiceRolePolicy","PolicyName":"ApplicationDiscoveryServiceContinuousExportServiceRolePolicy","PolicyId":"ANPAJMGMY3P6OEWOELRFE","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by Application Discovery Service Continuous Export feature","DefaultVersionId":"v2"},"document":[{"Action":["glue:CreateDatabase","glue:UpdateDatabase","glue:CreateTable","glue:UpdateTable","firehose:CreateDeliveryStream","firehose:DescribeDeliveryStream","logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["firehose:DeleteDeliveryStream","firehose:PutRecord","firehose:PutRecordBatch","firehose:UpdateDestination"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:firehose:*:*:deliverystream/aws-application-discovery-service*"]},{"Action":["s3:CreateBucket","s3:ListBucket","s3:PutBucketLogging","s3:PutEncryptionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-application-discovery-service*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-application-discovery-service*/*"]},{"Action":["logs:CreateLogStream","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/application-discovery-service/firehose*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSApplicationDiscoveryServiceFirehose"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSApplicationDiscoveryServiceFirehose"]}],"services":["glue","firehose","logs","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser","PolicyName":"AWSKeyManagementServicePowerUser","PolicyId":"ANPAJNPP7PPPPMJRV2SA4","Path":"/","Description":"Provides access to AWS Key Management Service (KMS).","DefaultVersionId":"v2"},"document":[{"Action":["kms:CreateAlias","kms:CreateKey","kms:DeleteAlias","kms:Describe*","kms:GenerateRandom","kms:Get*","kms:List*","kms:TagResource","kms:UntagResource","iam:ListGroups","iam:ListRoles","iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess","PolicyName":"AWSGlueConsoleFullAccess","PolicyId":"ANPAJNZGDEOD7MISOVSVI","Path":"/","Description":"Provides full access to AWS Glue via the AWS Management Console","DefaultVersionId":"v12"},"document":[{"Action":["glue:*","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","iam:ListRoles","iam:ListUsers","iam:ListGroups","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:DescribeVpcAttribute","ec2:DescribeKeyPairs","ec2:DescribeInstances","ec2:DescribeImages","rds:DescribeDBInstances","rds:DescribeDBClusters","rds:DescribeDBSubnetGroups","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketAcl","s3:GetBucketLocation","cloudformation:DescribeStacks","cloudformation:GetTemplateSummary","dynamodb:ListTables","kms:ListAliases","kms:DescribeKey","cloudwatch:GetMetricData","cloudwatch:ListDashboards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*","arn:aws:s3:::aws-glue-*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-glue*/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances","ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"]}],"services":["glue","redshift","iam","ec2","rds","s3","cloudformation","dynamodb","kms","cloudwatch","tag","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMarketplaceRead-only","PolicyName":"AWSMarketplaceRead-only","PolicyId":"ANPAJOOM6LETKURTJ3XZ2","Path":"/","Description":"Provides the ability to review AWS Marketplace subscriptions","DefaultVersionId":"v3"},"document":[{"Action":["aws-marketplace:ViewSubscriptions","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:ListBuilds","aws-marketplace:DescribeBuilds","iam:ListRoles","iam:ListInstanceProfiles","sns:GetTopicAttributes","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:ListPrivateMarketplaceRequests","aws-marketplace:DescribePrivateMarketplaceRequests"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["aws-marketplace","ec2","iam","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodePipelineFullAccess","PolicyName":"AWSCodePipelineFullAccess","PolicyId":"ANPAJP5LH77KSAT2KHQGG","Path":"/","Description":"Provides full access to AWS CodePipeline via the AWS Management Console.","DefaultVersionId":"v10"},"document":[{"Action":["codepipeline:*","cloudformation:DescribeStacks","cloudformation:ListChangeSets","cloudtrail:CreateTrail","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:PutEventSelectors","cloudtrail:StartLogging","codebuild:BatchGetProjects","codebuild:CreateProject","codebuild:ListCuratedEnvironmentImages","codebuild:ListProjects","codecommit:GetBranch","codecommit:GetRepositoryTriggers","codecommit:ListBranches","codecommit:ListRepositories","codecommit:PutRepositoryTriggers","codecommit:GetReferences","codedeploy:GetApplication","codedeploy:BatchGetApplications","codedeploy:GetDeploymentGroup","codedeploy:BatchGetDeploymentGroups","codedeploy:ListApplications","codedeploy:ListDeploymentGroups","devicefarm:GetDevicePool","devicefarm:GetProject","devicefarm:ListDevicePools","devicefarm:ListProjects","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ecr:DescribeRepositories","ecr:ListImages","ecs:ListClusters","ecs:ListServices","elasticbeanstalk:DescribeApplications","elasticbeanstalk:DescribeEnvironments","iam:ListRoles","iam:GetRole","lambda:GetFunctionConfiguration","lambda:ListFunctions","events:ListRules","events:ListTargetsByRule","events:DescribeRule","opsworks:DescribeApps","opsworks:DescribeLayers","opsworks:DescribeStacks","s3:GetBucketPolicy","s3:GetBucketVersioning","s3:GetObjectVersion","s3:ListAllMyBuckets","s3:ListBucket","sns:ListTopics","codestar-notifications:ListNotificationRules","codestar-notifications:ListTargets","codestar-notifications:ListTagsforResource","codestar-notifications:ListEventTypes","states:ListStateMachines"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:CreateBucket","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3::*:codepipeline-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/cwe-role-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule","events:PutTargets","events:DeleteRule","events:DisableRule","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/codepipeline-*"]},{"Action":["codestar-notifications:CreateNotificationRule","codestar-notifications:DescribeNotificationRule","codestar-notifications:UpdateNotificationRule","codestar-notifications:DeleteNotificationRule","codestar-notifications:Subscribe","codestar-notifications:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:SetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:codestar-notifications*"]},{"Action":["chatbot:DescribeSlackChannelConfigurations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["codepipeline","cloudformation","cloudtrail","codebuild","codecommit","codedeploy","devicefarm","ec2","ecr","ecs","elasticbeanstalk","iam","lambda","events","opsworks","s3","sns","codestar-notifications","states","chatbot"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCloud9User","PolicyName":"AWSCloud9User","PolicyId":"ANPAJPFGFWQF67QVARP6U","Path":"/","Description":"Provides permission to create AWS Cloud9 development environments and to manage owned environments.","DefaultVersionId":"v4"},"document":[{"Action":["cloud9:ValidateEnvironmentName","cloud9:UpdateUserSettings","cloud9:GetUserSettings","iam:GetUser","iam:ListUsers","ec2:DescribeVpcs","ec2:DescribeSubnets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloud9:CreateEnvironmentEC2","cloud9:CreateEnvironmentSSH"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloud9:GetUserPublicKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloud9:DescribeEnvironmentMemberships"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:StartSession"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:StartSession"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/*"]}],"services":["cloud9","iam","ec2","ssm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonMacieServiceRolePolicy","PolicyName":"AmazonMacieServiceRolePolicy","PolicyId":"ANPAJPLHONRH2HP2H6TNQ","Path":"/aws-service-role/","Description":"Service linked role for Amazon Macie","DefaultVersionId":"v5"},"document":[{"Action":["cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","iam:ListAccountAliases","organizations:DescribeAccount","organizations:ListAccounts","s3:GetAccountPublicAccessBlock","s3:ListAllMyBuckets","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketPolicy","s3:GetBucketPolicyStatus","s3:GetBucketPublicAccessBlock","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListBucket","s3:GetObject","s3:GetObjectAcl","s3:GetObjectTagging"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:CreateTrail","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudtrail:UpdateTrail","cloudtrail:DeleteTrail","cloudtrail:PutEventSelectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudtrail:*:*:trail/AWSMacieTrail-DO-NOT-EDIT"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteBucketPolicy","s3:DeleteBucketWebsite","s3:DeleteObject","s3:DeleteObjectTagging","s3:DeleteObjectVersion","s3:DeleteObjectVersionTagging","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awsmacie-*","arn:aws:s3:::awsmacietrail-*","arn:aws:s3:::*-awsmacietrail-*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/macie/*"]},{"Action":["logs:CreateLogStream","logs:PutLogEvents","logs:DescribeLogStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/macie/*:log-stream:*"]}],"services":["cloudtrail","iam","organizations","s3","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/NetworkAdministrator","PolicyName":"NetworkAdministrator","PolicyId":"ANPAJPNMADZFJCVPJVZA2","Path":"/job-function/","Description":"Grants full access permissions to AWS services and actions required to set up and configure AWS network resources.","DefaultVersionId":"v8"},"document":[{"Action":["autoscaling:Describe*","ec2:AcceptVpcEndpointConnections","ec2:AllocateAddress","ec2:AssignIpv6Addresses","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:AssociateDhcpOptions","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVpnGateway","ec2:CreateCarrierGateway","ec2:DeleteCarrierGateway","ec2:DescribeCarrierGateways","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateDhcpOptions","ec2:CreateEgressOnlyInternetGateway","ec2:CreateFlowLogs","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkAcl","ec2:CreateNetworkAclEntry","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:CreatePlacementGroup","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:CreateVpcEndpointConnectionNotification","ec2:CreateVpcEndpointServiceConfiguration","ec2:CreateVpnConnection","ec2:CreateVpnConnectionRoute","ec2:CreateVpnGateway","ec2:DeleteEgressOnlyInternetGateway","ec2:DeleteFlowLogs","ec2:DeleteNatGateway","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DeletePlacementGroup","ec2:DeleteSubnet","ec2:DeleteTags","ec2:DeleteVpc","ec2:DeleteVpcEndpointConnectionNotifications","ec2:DeleteVpcEndpoints","ec2:DeleteVpcEndpointServiceConfigurations","ec2:DeleteVpnConnection","ec2:DeleteVpnConnectionRoute","ec2:DeleteVpnGateway","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeClassicLinkInstances","ec2:DescribeCustomerGateways","ec2:DescribeDhcpOptions","ec2:DescribeEgressOnlyInternetGateways","ec2:DescribeFlowLogs","ec2:DescribeInstances","ec2:DescribeInternetGateways","ec2:DescribeKeyPairs","ec2:DescribeMovingAddresses","ec2:DescribeNatGateways","ec2:DescribeNetworkAcls","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeNetworkInterfacePermissions","ec2:DescribeNetworkInterfaces","ec2:DescribePlacementGroups","ec2:DescribePrefixLists","ec2:DescribeRouteTables","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeStaleSecurityGroups","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVpcAttribute","ec2:DescribeVpcClassicLink","ec2:DescribeVpcClassicLinkDnsSupport","ec2:DescribeVpcEndpointConnectionNotifications","ec2:DescribeVpcEndpointConnections","ec2:DescribeVpcEndpoints","ec2:DescribeVpcEndpointServiceConfigurations","ec2:DescribeVpcEndpointServicePermissions","ec2:DescribeVpcEndpointServices","ec2:DescribeVpcPeeringConnections","ec2:DescribeVpcs","ec2:DescribeVpnConnections","ec2:DescribeVpnGateways","ec2:DetachInternetGateway","ec2:DetachNetworkInterface","ec2:DetachVpnGateway","ec2:DisableVgwRoutePropagation","ec2:DisableVpcClassicLinkDnsSupport","ec2:DisassociateAddress","ec2:DisassociateRouteTable","ec2:DisassociateSubnetCidrBlock","ec2:DisassociateVpcCidrBlock","ec2:EnableVgwRoutePropagation","ec2:EnableVpcClassicLinkDnsSupport","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:ModifyVpcEndpoint","ec2:ModifyVpcEndpointConnectionNotification","ec2:ModifyVpcEndpointServiceConfiguration","ec2:ModifyVpcEndpointServicePermissions","ec2:ModifyVpcPeeringConnectionOptions","ec2:ModifyVpcTenancy","ec2:MoveAddressToVpc","ec2:RejectVpcEndpointConnections","ec2:ReleaseAddress","ec2:ReplaceNetworkAclAssociation","ec2:ReplaceNetworkAclEntry","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","ec2:ResetNetworkInterfaceAttribute","ec2:RestoreAddressToClassic","ec2:UnassignIpv6Addresses","ec2:UnassignPrivateIpAddresses","ec2:UpdateSecurityGroupRuleDescriptionsEgress","ec2:UpdateSecurityGroupRuleDescriptionsIngress","directconnect:*","route53:*","route53domains:*","cloudfront:ListDistributions","elasticloadbalancing:*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:RetrieveEnvironmentInfo","elasticbeanstalk:RequestEnvironmentInfo","sns:ListTopics","sns:ListSubscriptionsByTopic","sns:CreateTopic","cloudwatch:DescribeAlarms","cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms","cloudwatch:GetMetricStatistics","logs:DescribeLogGroups","logs:DescribeLogStreams","logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AcceptVpcPeeringConnection","ec2:AttachClassicLinkVpc","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateVpcPeeringConnection","ec2:DeleteCustomerGateway","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteNetworkAcl","ec2:DeleteNetworkAclEntry","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DeleteVpcPeeringConnection","ec2:DetachClassicLinkVpc","ec2:DisableVpcClassicLink","ec2:EnableVpcClassicLink","ec2:GetConsoleScreenshot","ec2:RejectVpcPeeringConnection","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListBucket","s3:GetBucketLocation","s3:GetBucketWebsite"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:ListRoles","iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/flow-logs-*"]},{"Action":["networkmanager:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AcceptTransitGatewayVpcAttachment","ec2:AssociateTransitGatewayRouteTable","ec2:CreateTransitGateway","ec2:CreateTransitGatewayRoute","ec2:CreateTransitGatewayRouteTable","ec2:CreateTransitGatewayVpcAttachment","ec2:DeleteTransitGateway","ec2:DeleteTransitGatewayRoute","ec2:DeleteTransitGatewayRouteTable","ec2:DeleteTransitGatewayVpcAttachment","ec2:DescribeTransitGatewayAttachments","ec2:DescribeTransitGatewayRouteTables","ec2:DescribeTransitGatewayVpcAttachments","ec2:DescribeTransitGateways","ec2:DisableTransitGatewayRouteTablePropagation","ec2:DisassociateTransitGatewayRouteTable","ec2:EnableTransitGatewayRouteTablePropagation","ec2:ExportTransitGatewayRoutes","ec2:GetTransitGatewayAttachmentPropagations","ec2:GetTransitGatewayRouteTableAssociations","ec2:GetTransitGatewayRouteTablePropagations","ec2:ModifyTransitGatewayVpcAttachment","ec2:RejectTransitGatewayVpcAttachment","ec2:ReplaceTransitGatewayRoute","ec2:SearchTransitGatewayRoutes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","ec2","directconnect","route53","route53domains","cloudfront","elasticloadbalancing","elasticbeanstalk","sns","cloudwatch","logs","s3","iam","networkmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKinesisAnalyticsFullAccess","PolicyName":"AmazonKinesisAnalyticsFullAccess","PolicyId":"ANPAJQOSKHTXP43R7P5AC","Path":"/","Description":"Provides full access to Amazon Kinesis Analytics via the AWS Management Console.","DefaultVersionId":"v1"},"document":[{"Action":["kinesisanalytics:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kinesis:CreateStream","kinesis:DeleteStream","kinesis:DescribeStream","kinesis:ListStreams","kinesis:PutRecord","kinesis:PutRecords"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["firehose:DescribeDeliveryStream","firehose:ListDeliveryStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListPolicyVersions","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/kinesis-analytics*"]}],"services":["kinesisanalytics","kinesis","firehose","cloudwatch","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSecurityHubServiceRolePolicy","PolicyName":"AWSSecurityHubServiceRolePolicy","PolicyId":"ANPAJQPCESDDYDLLSOGYO","Path":"/aws-service-role/","Description":"A service-linked role required for AWS Security Hub to access your resources.","DefaultVersionId":"v7"},"document":[{"Action":["cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:GetEventSelectors","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","logs:DescribeMetricFilters","sns:ListSubscriptionsByTopic","config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus","config:DescribeConfigRules","config:BatchGetResourceConfig","config:SelectResourceConfig","iam:GenerateCredentialReport","iam:GetCredentialReport","organizations:ListAccounts","organizations:DescribeAccount","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:PutConfigRule","config:DeleteConfigRule","config:GetComplianceDetailsByConfigRule","config:DescribeConfigRuleEvaluationStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"]}],"services":["cloudtrail","cloudwatch","logs","sns","config","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonWorkMailFullAccess","PolicyName":"AmazonWorkMailFullAccess","PolicyId":"ANPAJQVKNMT7SVATQ4AUY","Path":"/","Description":"Provides full access to WorkMail, Directory Service, SES, EC2 and read access to KMS metadata.","DefaultVersionId":"v10"},"document":[{"Action":["ds:AuthorizeApplication","ds:CheckAlias","ds:CreateAlias","ds:CreateDirectory","ds:CreateIdentityPoolDirectory","ds:DeleteDirectory","ds:DescribeDirectories","ds:GetDirectoryLimits","ds:ListAuthorizedApplications","ds:UnauthorizeApplication","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateNetworkInterface","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVpc","ec2:DeleteSecurityGroup","ec2:DeleteSubnet","ec2:DeleteVpc","ec2:DescribeAvailabilityZones","ec2:DescribeRouteTables","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","kms:DescribeKey","kms:ListAliases","lambda:ListFunctions","route53:ChangeResourceRecordSets","route53:ListHostedZones","route53:ListResourceRecordSets","route53:GetHostedZone","route53domains:CheckDomainAvailability","route53domains:ListDomains","ses:*","workmail:*","iam:ListRoles","logs:DescribeLogGroups","logs:CreateLogGroup","logs:PutRetentionPolicy","cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/events.workmail.amazonaws.com/AWSServiceRoleForAmazonWorkMailEvents*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*workmail*"]}],"services":["ds","ec2","kms","lambda","route53","route53domains","ses","workmail","iam","logs","cloudwatch"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataSyncReadOnlyAccess","PolicyName":"AWSDataSyncReadOnlyAccess","PolicyId":"ANPAJRYVEZEDR7ZEAGYLY","Path":"/","Description":"Provides read-only access to AWS DataSync","DefaultVersionId":"v3"},"document":[{"Action":["datasync:Describe*","datasync:List*","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargets","fsx:DescribeFileSystems","iam:GetRole","iam:ListRoles","logs:DescribeLogGroups","logs:DescribeResourcePolicies","s3:ListAllMyBuckets","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["datasync","ec2","elasticfilesystem","fsx","iam","logs","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMUserSSHKeys","PolicyName":"IAMUserSSHKeys","PolicyId":"ANPAJTSHUA4UXGXU7ANUA","Path":"/","Description":"Provides the ability for an IAM user to manage their own SSH keys.","DefaultVersionId":"v1"},"document":[{"Action":["iam:DeleteSSHPublicKey","iam:GetSSHPublicKey","iam:ListSSHPublicKeys","iam:UpdateSSHPublicKey","iam:UploadSSHPublicKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/${aws:username}"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSDeepRacerServiceRolePolicy","PolicyName":"AWSDeepRacerServiceRolePolicy","PolicyId":"ANPAJTUAQLIAVBJ7LZ32S","Path":"/service-role/","Description":"Allows DeepRacer to create required resources and call AWS services on your behalf.","DefaultVersionId":"v3"},"document":[{"Action":["deepracer:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["robomaker:*","sagemaker:*","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackResources","cloudformation:DescribeStacks","cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:DescribeStackEvents","cloudformation:DetectStackDrift","cloudformation:DescribeStackDriftDetectionStatus","cloudformation:DescribeStackResourceDrifts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSDeepRacer*","arn:aws:iam::*:role/service-role/AWSDeepRacer*"]},{"Action":["cloudwatch:GetMetricData","logs:CreateLogGroup","logs:CreateLogStream","logs:DescribeLogStreams","logs:GetLogEvents","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:InvokeFunction","lambda:UpdateFunctionCode"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*DeepRacer*","arn:aws:lambda:*:*:function:*Deepracer*","arn:aws:lambda:*:*:function:*deepracer*","arn:aws:lambda:*:*:function:*dr-*"]},{"Action":["s3:GetObject","s3:GetBucketLocation","s3:DeleteObject","s3:ListBucket","s3:PutObject","s3:PutBucketPolicy","s3:GetBucketAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*DeepRacer*","arn:aws:s3:::*Deepracer*","arn:aws:s3:::*deepracer*","arn:aws:s3:::dr-*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kinesisvideo:CreateStream","kinesisvideo:DeleteStream","kinesisvideo:DescribeStream","kinesisvideo:GetDataEndpoint","kinesisvideo:GetHLSStreamingSessionURL","kinesisvideo:GetMedia","kinesisvideo:PutMedia","kinesisvideo:TagStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kinesisvideo:*:*:stream/dr-*"]}],"services":["deepracer","robomaker","sagemaker","s3","cloudformation","iam","cloudwatch","logs","lambda","kinesisvideo"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSResourceAccessManagerServiceRolePolicy","PolicyName":"AWSResourceAccessManagerServiceRolePolicy","PolicyId":"ANPAJU667A3V5UAXC4YNE","Path":"/aws-service-role/","Description":"Policy containing Read-only AWS Resource Access Manager access to customers' Organizations structure. It also contains IAM permissions to self-delete the role.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListChildren","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/ram.amazonaws.com/*"]}],"services":["organizations","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy","PolicyName":"AWSConfigServiceRolePolicy","PolicyId":"ANPAJUCWFHNZER665LLQQ","Path":"/aws-service-role/","Description":"Allows Config to call AWS services and collect resource configurations on your behalf.","DefaultVersionId":"v25"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLexFullAccess","PolicyName":"AmazonLexFullAccess","PolicyId":"ANPAJVLXDHKVC23HRTKSI","Path":"/","Description":"Provides full access to Amazon Lex via the AWS Management Console.  Also provides access to create Lex Service Linked Roles and grant Lex permissions to invoke a limited set of Lambda functions.","DefaultVersionId":"v6"},"document":[{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","kms:DescribeKey","kms:ListAliases","lambda:GetPolicy","lambda:ListFunctions","lex:*","polly:DescribeVoices","polly:SynthesizeSpeech"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kendra:ListIndices"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:AddPermission","lambda:RemovePermission"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:AmazonLex*"]},{"Action":["iam:GetRole","iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots","arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:DetachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:DetachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]}],"services":["cloudwatch","kms","lambda","lex","polly","kendra","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess","PolicyName":"AWSServiceCatalogAdminFullAccess","PolicyId":"ANPAJWLJU4BZ7AQUJSBVM","Path":"/","Description":"Provides full access to service catalog admin capabilities","DefaultVersionId":"v5"},"document":[{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStackEvents","cloudformation:DescribeStacks","cloudformation:SetStackPolicy","cloudformation:UpdateStack","cloudformation:CreateChangeSet","cloudformation:DescribeChangeSet","cloudformation:ExecuteChangeSet","cloudformation:ListChangeSets","cloudformation:DeleteChangeSet","cloudformation:ListStackResources","cloudformation:TagResource","cloudformation:CreateStackSet","cloudformation:CreateStackInstances","cloudformation:UpdateStackSet","cloudformation:UpdateStackInstances","cloudformation:DeleteStackSet","cloudformation:DeleteStackInstances","cloudformation:DescribeStackSet","cloudformation:DescribeStackInstance","cloudformation:DescribeStackSetOperation","cloudformation:ListStackInstances","cloudformation:ListStackSetOperations","cloudformation:ListStackSetOperationResults"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/SC-*","arn:aws:cloudformation:*:*:stack/StackSet-SC-*","arn:aws:cloudformation:*:*:changeSet/SC-*","arn:aws:cloudformation:*:*:stackset/SC-*"]},{"Action":["cloudformation:CreateUploadBucket","cloudformation:GetTemplateSummary","cloudformation:ValidateTemplate","iam:GetGroup","iam:GetRole","iam:GetUser","iam:ListGroups","iam:ListRoles","iam:ListUsers","servicecatalog:*","ssm:DescribeDocument","ssm:GetAutomationExecution","ssm:ListDocuments","ssm:ListDocumentVersions","config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","iam","servicecatalog","ssm","config"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/NeptuneConsoleFullAccess","PolicyName":"NeptuneConsoleFullAccess","PolicyId":"ANPAJWTD4ELX2KRNICUVQ","Path":"/","Description":"Provides full access to manage Amazon Neptune using the AWS Console. Note this policy also grants full access to publish on all SNS topics within the account, permissions to create and edit Amazon EC2 instances and VPC configurations, permissions to view and list keys on Amazon KMS, and full access to Amazon RDS. For more information, see https://aws.amazon.com/neptune/faqs/.","DefaultVersionId":"v4"},"document":[{"Action":["rds:CreateDBCluster","rds:CreateDBInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:*"]},{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:AllocateAddress","ec2:AssignIpv6Addresses","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:CreateVpcEndpoint","ec2:DescribeAccountAttributes","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeAvailabilityZones","ec2:DescribeCustomerGateways","ec2:DescribeInstances","ec2:DescribeNatGateways","ec2:DescribeNetworkInterfaces","ec2:DescribePrefixLists","ec2:DescribeRouteTables","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:ModifyVpcEndpoint","iam:ListRoles","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","cloudwatch","ec2","iam","kms","logs","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess","PolicyName":"AWSCertificateManagerFullAccess","PolicyId":"ANPAJYCHABBP6VQIVBCBQ","Path":"/","Description":"Provides full access to AWS Certificate Manager (ACM)","DefaultVersionId":"v2"},"document":[{"Action":["acm:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/acm.amazonaws.com/AWSServiceRoleForCertificateManager*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/acm.amazonaws.com/AWSServiceRoleForCertificateManager*"]}],"services":["acm","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDeepRacerCloudFormationAccessPolicy","PolicyName":"AWSDeepRacerCloudFormationAccessPolicy","PolicyId":"ANPAJYG7FM75UF5CW5ICS","Path":"/","Description":"Allows CloudFormation to create and manage AWS stacks and resources on your behalf.","DefaultVersionId":"v2"},"document":[{"Action":["cloudformation:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AllocateAddress","ec2:AttachInternetGateway","ec2:AssociateRouteTable","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkAcl","ec2:CreateNetworkAclEntry","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:DeleteInternetGateway","ec2:DeleteNatGateway","ec2:DeleteNetworkAcl","ec2:DeleteNetworkAclEntry","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSecurityGroup","ec2:DeleteSubnet","ec2:DeleteTags","ec2:DeleteVpc","ec2:DeleteVpcEndpoints","ec2:DescribeAddresses","ec2:DescribeInternetGateways","ec2:DescribeNatGateways","ec2:DescribeNetworkAcls","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ec2:DetachInternetGateway","ec2:DisassociateRouteTable","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:ReleaseAddress","ec2:ReplaceNetworkAclAssociation","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSDeepRacerLambdaAccessRole"]},{"Action":["lambda:CreateFunction","lambda:GetFunction","lambda:DeleteFunction","lambda:TagResource","lambda:UpdateFunctionCode"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*DeepRacer*","arn:aws:lambda:*:*:function:*Deepracer*","arn:aws:lambda:*:*:function:*deepracer*"]},{"Action":["s3:PutBucketPolicy","s3:CreateBucket","s3:ListBucket","s3:GetBucketAcl","s3:DeleteBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*DeepRacer*","arn:aws:s3:::*Deepracer*","arn:aws:s3:::*deepracer*"]},{"Action":["robomaker:CreateSimulationApplication","robomaker:CreateSimulationApplicationVersion","robomaker:DeleteSimulationApplication","robomaker:DescribeSimulationApplication","robomaker:ListSimulationApplications","robomaker:TagResource","robomaker:UpdateSimulationApplication"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:robomaker:*:*:/createSimulationApplication","arn:aws:robomaker:*:*:simulation-application/deepracer*"]}],"services":["cloudformation","ec2","iam","lambda","s3","robomaker"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSRoboMakerServicePolicy","PolicyName":"AWSRoboMakerServicePolicy","PolicyId":"ANPAJYLVVUUQMAEEZ3ZNY","Path":"/aws-service-role/","Description":"RoboMaker service policy","DefaultVersionId":"v5"},"document":[{"Action":["ec2:CreateNetworkInterfacePermission","ec2:DescribeNetworkInterfaces","ec2:DeleteNetworkInterface","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","greengrass:CreateDeployment","greengrass:CreateGroupVersion","greengrass:CreateFunctionDefinition","greengrass:CreateFunctionDefinitionVersion","greengrass:GetDeploymentStatus","greengrass:GetGroup","greengrass:GetGroupVersion","greengrass:GetCoreDefinitionVersion","greengrass:GetFunctionDefinitionVersion","greengrass:GetAssociatedRole","lambda:CreateFunction","robomaker:CreateSimulationJob","robomaker:CancelSimulationJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["robomaker:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:robomaker:*:*:/createsimulationjob","arn:aws:robomaker:*:*:simulation-job/*"]},{"Action":["lambda:UpdateFunctionCode","lambda:GetFunction","lambda:UpdateFunctionConfiguration","lambda:DeleteFunction","lambda:ListVersionsByFunction","lambda:GetAlias","lambda:UpdateAlias","lambda:CreateAlias","lambda:DeleteAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:aws-robomaker-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","greengrass","lambda","robomaker","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/PowerUserAccess","PolicyName":"PowerUserAccess","PolicyId":"ANPAJYRXTHIB4FOVS3ZXS","Path":"/","Description":"Provides full access to AWS services and resources, but does not allow management of Users and groups.","DefaultVersionId":"v4"},"document":[{"Action":null,"Effect":"Allow","NotAction":["iam:*","organizations:*","account:*"],"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole","iam:DeleteServiceLinkedRole","iam:ListRoles","organizations:DescribeOrganization","account:ListRegions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations","account"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonSageMakerFullAccess","PolicyName":"AmazonSageMakerFullAccess","PolicyId":"ANPAJZ5IWYMXO5QDB4QOG","Path":"/","Description":"Provides full access to Amazon SageMaker via the AWS Management Console and SDK. Also provides select access to related services (e.g., S3, ECR, CloudWatch Logs).","DefaultVersionId":"v19"},"document":[{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":["arn:aws:sagemaker:*:*:domain/*","arn:aws:sagemaker:*:*:user-profile/*","arn:aws:sagemaker:*:*:app/*","arn:aws:sagemaker:*:*:flow-definition/*"],"Resource":null},{"Action":["sagemaker:CreatePresignedDomainUrl","sagemaker:DescribeDomain","sagemaker:ListDomains","sagemaker:DescribeUserProfile","sagemaker:ListUserProfiles","sagemaker:*App","sagemaker:ListApps"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:flow-definition/*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeleteScheduledAction","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:DescribeScheduledActions","application-autoscaling:PutScalingPolicy","application-autoscaling:PutScheduledAction","application-autoscaling:RegisterScalableTarget","aws-marketplace:ViewSubscriptions","cloudformation:GetTemplateSummary","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:PutMetricData","codecommit:BatchGetRepositories","codecommit:CreateRepository","codecommit:GetRepository","codecommit:List*","cognito-idp:AdminAddUserToGroup","cognito-idp:AdminCreateUser","cognito-idp:AdminDeleteUser","cognito-idp:AdminDisableUser","cognito-idp:AdminEnableUser","cognito-idp:AdminRemoveUserFromGroup","cognito-idp:CreateGroup","cognito-idp:CreateUserPool","cognito-idp:CreateUserPoolClient","cognito-idp:CreateUserPoolDomain","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:List*","cognito-idp:UpdateUserPool","cognito-idp:UpdateUserPoolClient","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:CreateVpcEndpoint","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DescribeDhcpOptions","ec2:DescribeNetworkInterfaces","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ecr:BatchCheckLayerAvailability","ecr:BatchGetImage","ecr:CreateRepository","ecr:Describe*","ecr:GetAuthorizationToken","ecr:GetDownloadUrlForLayer","ecr:StartImageScan","elastic-inference:Connect","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargets","fsx:DescribeFileSystems","glue:CreateJob","glue:DeleteJob","glue:GetJob*","glue:GetTable*","glue:GetWorkflowRun","glue:ResetJobBookmark","glue:StartJobRun","glue:StartWorkflowRun","glue:UpdateJob","groundtruthlabeling:*","iam:ListRoles","kms:DescribeKey","kms:ListAliases","lambda:ListFunctions","logs:CreateLogDelivery","logs:CreateLogGroup","logs:CreateLogStream","logs:DeleteLogDelivery","logs:Describe*","logs:GetLogDelivery","logs:GetLogEvents","logs:ListLogDeliveries","logs:PutLogEvents","logs:PutResourcePolicy","logs:UpdateLogDelivery","robomaker:CreateSimulationApplication","robomaker:DescribeSimulationApplication","robomaker:DeleteSimulationApplication","robomaker:CreateSimulationJob","robomaker:DescribeSimulationJob","robomaker:CancelSimulationJob","secretsmanager:ListSecrets","servicecatalog:Describe*","servicecatalog:List*","servicecatalog:ScanProvisionedProducts","servicecatalog:SearchProducts","servicecatalog:SearchProvisionedProducts","sns:ListTopics","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecr:SetRepositoryPolicy","ecr:CompleteLayerUpload","ecr:BatchDeleteImage","ecr:UploadLayerPart","ecr:DeleteRepositoryPolicy","ecr:InitiateLayerUpload","ecr:DeleteRepository","ecr:PutImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecr:*:*:repository/*sagemaker*"]},{"Action":["codecommit:GitPull","codecommit:GitPush"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codecommit:*:*:*sagemaker*","arn:aws:codecommit:*:*:*SageMaker*","arn:aws:codecommit:*:*:*Sagemaker*"]},{"Action":["codebuild:BatchGetBuilds","codebuild:StartBuild"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codebuild:*:*:project/sagemaker*","arn:aws:codebuild:*:*:build/*"]},{"Action":["states:DescribeExecution","states:GetExecutionHistory","states:StartExecution","states:StopExecution","states:UpdateStateMachine"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:statemachine:*sagemaker*","arn:aws:states:*:*:execution:*sagemaker*:*"]},{"Action":["secretsmanager:DescribeSecret","secretsmanager:GetSecretValue","secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"]},{"Action":["secretsmanager:DescribeSecret","secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicecatalog:ProvisionProduct"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicecatalog:TerminateProvisionedProduct","servicecatalog:UpdateProvisionedProduct"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject","s3:AbortMultipartUpload"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*","arn:aws:s3:::*aws-glue*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets","s3:GetBucketCors","s3:PutBucketCors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetBucketAcl","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*SageMaker*","arn:aws:lambda:*:*:function:*sagemaker*","arn:aws:lambda:*:*:function:*Sagemaker*","arn:aws:lambda:*:*:function:*LabelingFunction*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Subscribe","sns:CreateTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:*SageMaker*","arn:aws:sns:*:*:*Sagemaker*","arn:aws:sns:*:*:*sagemaker*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["athena:ListDataCatalogs","athena:ListDatabases","athena:ListTableMetadata","athena:GetQueryExecution","athena:GetQueryResults","athena:StartQueryExecution","athena:StopQueryExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:CreateTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*/sagemaker_tmp_*","arn:aws:glue:*:*:table/sagemaker_featurestore/*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:DeleteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*/sagemaker_tmp_*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:GetDatabases","glue:GetTable","glue:GetTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:CreateDatabase","glue:GetDatabase"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/sagemaker_featurestore","arn:aws:glue:*:*:database/sagemaker_processing","arn:aws:glue:*:*:database/default","arn:aws:glue:*:*:database/sagemaker_data_wrangler"]},{"Action":["redshift-data:ExecuteStatement","redshift-data:DescribeStatement","redshift-data:CancelStatement","redshift-data:GetStatementResult","redshift-data:ListSchemas","redshift-data:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["redshift:GetClusterCredentials"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:redshift:*:*:dbuser:*/sagemaker_access*","arn:aws:redshift:*:*:dbname:*"]}],"services":["sagemaker","application-autoscaling","aws-marketplace","cloudformation","cloudwatch","codecommit","cognito-idp","ec2","ecr","elastic-inference","elasticfilesystem","fsx","glue","groundtruthlabeling","iam","kms","lambda","logs","robomaker","secretsmanager","servicecatalog","sns","tag","codebuild","states","s3","athena","redshift-data","redshift"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudWatchEventsFullAccess","PolicyName":"CloudWatchEventsFullAccess","PolicyId":"ANPAJZLOYLNHESMYOJAFU","Path":"/","Description":"Provides full access to Amazon CloudWatch Events.","DefaultVersionId":"v1"},"document":[{"Action":["events:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWS_Events_Invoke_Targets"]}],"services":["events","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess","PolicyName":"AWSCodePipeline_FullAccess","PolicyId":"ANPAZKAPJZG4A6ZKP3LKA","Path":"/","Description":"Provides full access to AWS CodePipeline via the AWS Management Console.","DefaultVersionId":"v1"},"document":[{"Action":["codepipeline:*","cloudformation:DescribeStacks","cloudformation:ListChangeSets","cloudtrail:DescribeTrails","codebuild:BatchGetProjects","codebuild:CreateProject","codebuild:ListCuratedEnvironmentImages","codebuild:ListProjects","codecommit:ListBranches","codecommit:GetReferences","codecommit:ListRepositories","codedeploy:BatchGetDeploymentGroups","codedeploy:ListApplications","codedeploy:ListDeploymentGroups","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ecr:DescribeRepositories","ecr:ListImages","ecs:ListClusters","ecs:ListServices","elasticbeanstalk:DescribeApplications","elasticbeanstalk:DescribeEnvironments","iam:ListRoles","iam:GetRole","lambda:ListFunctions","events:ListRules","events:ListTargetsByRule","events:DescribeRule","opsworks:DescribeApps","opsworks:DescribeLayers","opsworks:DescribeStacks","s3:ListAllMyBuckets","sns:ListTopics","codestar-notifications:ListNotificationRules","codestar-notifications:ListTargets","codestar-notifications:ListTagsforResource","codestar-notifications:ListEventTypes","states:ListStateMachines"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:ListBucket","s3:GetBucketPolicy","s3:GetBucketVersioning","s3:GetObjectVersion","s3:CreateBucket","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3::*:codepipeline-*"]},{"Action":["cloudtrail:PutEventSelectors","cloudtrail:CreateTrail","cloudtrail:GetEventSelectors","cloudtrail:StartLogging"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudtrail:*:*:trail/codepipeline-source-trail"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/cwe-role-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule","events:PutTargets","events:DeleteRule","events:DisableRule","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/codepipeline-*"]},{"Action":["codestar-notifications:CreateNotificationRule","codestar-notifications:DescribeNotificationRule","codestar-notifications:UpdateNotificationRule","codestar-notifications:DeleteNotificationRule","codestar-notifications:Subscribe","codestar-notifications:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:SetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:codestar-notifications*"]},{"Action":["chatbot:DescribeSlackChannelConfigurations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["codepipeline","cloudformation","cloudtrail","codebuild","codecommit","codedeploy","ec2","ecr","ecs","elasticbeanstalk","iam","lambda","events","opsworks","s3","sns","codestar-notifications","states","chatbot"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonAugmentedAIIntegratedAPIAccess","PolicyName":"AmazonAugmentedAIIntegratedAPIAccess","PolicyId":"ANPAZKAPJZG4A7KC4RFTV","Path":"/","Description":"Provides access to perform all operations Amazon Augmented AI resources, including FlowDefinitions, HumanTaskUis and HumanLoops. Also provides access to those operations of services that are integrated with Amazon Augmented AI. ","DefaultVersionId":"v1"},"document":[{"Action":["sagemaker:*HumanLoop","sagemaker:*HumanLoops","sagemaker:*FlowDefinition","sagemaker:*FlowDefinitions","sagemaker:*HumanTaskUi","sagemaker:*HumanTaskUis"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["textract:AnalyzeDocument"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rekognition:DetectModerationLabels"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["sagemaker","textract","rekognition","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonFraudDetectorFullAccessPolicy","PolicyName":"AmazonFraudDetectorFullAccessPolicy","PolicyId":"ANPAZKAPJZG4AAPDEABT6","Path":"/","Description":"Gives access to all actions for Amazon Fraud Detector","DefaultVersionId":"v1"},"document":[{"Action":["frauddetector:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:ListEndpoints","sagemaker:DescribeEndpoint"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["frauddetector","sagemaker","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLaunchWizard_Fullaccess","PolicyName":"AmazonLaunchWizard_Fullaccess","PolicyId":"ANPAZKAPJZG4ABPQ7BLC2","Path":"/","Description":"Full access to AWS Launch wizard and other required services.","DefaultVersionId":"v10"},"document":[{"Action":["applicationinsights:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["resource-groups:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53:ChangeResourceRecordSets","route53:GetChange","route53:ListResourceRecordSets","route53:ListHostedZones","route53:ListHostedZonesByName"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:List*","cloudwatch:Get*","cloudwatch:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateVpc","ec2:CreateKeyPair","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSubnet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AllocateAddress","ec2:AllocateHosts","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:CreateDhcpOptions","ec2:CreateEgressOnlyInternetGateway","ec2:CreateNetworkInterface","ec2:CreateVolume","ec2:CreateVpcEndpoint","ec2:CreateTags","ec2:DeleteTags","ec2:RunInstances","ec2:StartInstances","ec2:ModifyInstanceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVolumeAttribute","ec2:ModifyVpcAttribute","ec2:AssociateDhcpOptions","ec2:AssociateSubnetCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVolume","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteKeyPair","ec2:DeleteNatGateway","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DeleteVpc","ec2:DetachInternetGateway","ec2:DetachVolume","ec2:DeleteSnapshot","ec2:AssociateRouteTable","ec2:AssociateVpcCidrBlock","ec2:DeleteNetworkAcl","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSubnet","ec2:DetachNetworkInterface","ec2:DisassociateAddress","ec2:DisassociateVpcCidrBlock","ec2:GetLaunchTemplateData","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifyVolume","ec2:AuthorizeSecurityGroupEgress","ec2:GetConsoleOutput","ec2:GetPasswordData","ec2:ReleaseAddress","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:DisassociateIamInstanceProfile","ec2:DisassociateRouteTable","ec2:DisassociateSubnetCidrBlock","ec2:ModifyInstancePlacement","ec2:DeletePlacementGroup","ec2:CreatePlacementGroup","elasticfilesystem:DeleteFileSystem","elasticfilesystem:DeleteMountTarget","ds:AddIpRoutes","ds:CreateComputer","ds:CreateMicrosoftAD","ds:DeleteDirectory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStack*","cloudformation:Get*","cloudformation:ListStacks","cloudformation:SignalResource","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LaunchWizard*/*","arn:aws:cloudformation:*:*:stack/ApplicationInsights*/*"]},{"Action":["ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateInstanceProfile","iam:DeleteInstanceProfile","iam:RemoveRoleFromInstanceProfile","iam:AddRoleToInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*","arn:aws:iam::*:role/service-role/AmazonLambdaRoleForLaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["autoscaling:AttachInstances","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteLaunchConfiguration","autoscaling:UpdateAutoScalingGroup","logs:CreateLogStream","logs:DeleteLogGroup","logs:DeleteLogStream","logs:DescribeLog*","logs:PutLogEvents","resource-groups:CreateGroup","resource-groups:DeleteGroup","sns:ListSubscriptionsByTopic","sns:Publish","ssm:DeleteDocument","ssm:DeleteParameter*","ssm:DescribeDocument*","ssm:GetDocument","ssm:PutParameter"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:resource-groups:*:*:group/LaunchWizard*","arn:aws:sns:*:*:*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/LaunchWizard*","arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/LaunchWizard*","arn:aws:ssm:*:*:parameter/LaunchWizard*","arn:aws:ssm:*:*:document/LaunchWizard*","arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DeleteLogStream","logs:GetLogEvents","logs:PutLogEvents","ssm:AddTagsToResource","ssm:DescribeDocument","ssm:GetDocument","ssm:ListTagsForResource","ssm:RemoveTagsFromResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*","arn:aws:ssm:*:*:parameter/LaunchWizard*","arn:aws:ssm:*:*:document/LaunchWizard*"]},{"Action":["autoscaling:Describe*","cloudformation:DescribeAccountLimits","cloudformation:DescribeStackDriftDetectionStatus","cloudformation:List*","ds:Describe*","ds:ListAuthorizedApplications","ec2:Describe*","ec2:Get*","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetPolicyVersion","iam:GetPolicy","iam:List*","logs:CreateLogGroup","logs:GetLogDelivery","logs:GetLogRecord","logs:ListLogDeliveries","resource-groups:Get*","resource-groups:List*","servicequotas:GetServiceQuota","servicequotas:ListServiceQuotas","sns:ListSubscriptions","sns:ListTopics","ssm:CreateDocument","ssm:DescribeAutomation*","ssm:DescribeInstanceInformation","ssm:DescribeParameters","ssm:GetAutomationExecution","ssm:GetCommandInvocation","ssm:GetParameter*","ssm:GetConnectionStatus","ssm:ListCommand*","ssm:ListDocument*","ssm:ListInstanceAssociations","ssm:SendAutomationSignal","ssm:StartAutomationExecution","ssm:StopAutomationExecution","tag:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:GetLog*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*"]},{"Action":["cloudformation:List*","cloudformation:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LaunchWizard*/"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["launchwizard:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sqs:TagQueue","sqs:GetQueueUrl","sqs:AddPermission","sqs:ListQueues","sqs:DeleteQueue","sqs:GetQueueAttributes","sqs:ListQueueTags","sqs:CreateQueue","sqs:SetQueueAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sqs:*:*:LaunchWizard*"]},{"Action":["cloudwatch:PutMetricAlarm","iam:GetInstanceProfile","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:LaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["cloudformation:CreateStack","route53:ListHostedZones","ec2:CreateSecurityGroup","ec2:AuthorizeSecurityGroupIngress","elasticfilesystem:DescribeFileSystems","elasticfilesystem:CreateFileSystem","elasticfilesystem:CreateMountTarget","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::launchwizard*","arn:aws:s3:::launchwizard*/*","arn:aws:s3:::aws-sap-data-provider/config.properties"]},{"Action":["cloudformation:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketVersioning","s3:DeleteBucket","lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:LaunchWizard*","arn:aws:s3:::launchwizard*"]},{"Action":["dynamodb:CreateTable","dynamodb:DescribeTable","dynamodb:DeleteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/LaunchWizard*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:DeleteSecret","secretsmanager:TagResource","secretsmanager:UntagResource","secretsmanager:PutResourcePolicy","secretsmanager:DeleteResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:LaunchWizard*"]},{"Action":["secretsmanager:GetRandomPassword","secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CreateOpsMetadata"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DeleteOpsMetadata"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:opsmetadata/aws/ssm/LaunchWizard*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:LaunchWizard*"]},{"Action":["fsx:UntagResource","fsx:TagResource","fsx:DeleteFileSystem","fsx:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:CreateFileSystem"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["applicationinsights","resource-groups","route53","s3","kms","cloudwatch","ec2","elasticfilesystem","ds","cloudformation","iam","autoscaling","logs","sns","ssm","servicequotas","tag","launchwizard","sqs","lambda","dynamodb","secretsmanager","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AwsGlueDataBrewFullAccessPolicy","PolicyName":"AwsGlueDataBrewFullAccessPolicy","PolicyId":"ANPAZKAPJZG4ACNRIK7M3","Path":"/","Description":"Provides full access to AWS Glue DataBrew via the AWS Management Console. Also provides select access to related services (e.g., S3, KMS, Glue).","DefaultVersionId":"v4"},"document":[{"Action":["appflow:DescribeFlow","appflow:DescribeFlowExecutionRecords","appflow:ListFlows","databrew:*","glue:GetConnection","glue:GetConnections","glue:GetDatabases","glue:GetPartitions","glue:GetTable","glue:GetTables","glue:GetDataCatalogEncryptionSettings","dataexchange:ListDataSets","dataexchange:ListDataSetRevisions","dataexchange:ListRevisionAssets","dataexchange:CreateJob","dataexchange:StartJob","dataexchange:GetJob","ec2:DescribeSecurityGroups","ec2:DescribeVpcs","ec2:DescribeSubnets","kms:DescribeKey","kms:ListKeys","kms:ListAliases","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","redshift-data:ListDatabases","redshift-data:ListSchemas","redshift-data:ListTables","s3:ListAllMyBuckets","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetEncryptionConfiguration","secretsmanager:ListSecrets","secretsmanager:DescribeSecret","sts:GetCallerIdentity","cloudtrail:LookupEvents","iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:CreateConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:connection/AwsGlueDataBrew-*"]},{"Action":["s3:ListBucket","s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::databrew-public-datasets-*"]},{"Action":["kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["appflow","databrew","glue","dataexchange","ec2","kms","redshift","redshift-data","s3","secretsmanager","sts","cloudtrail","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSIoTDeviceTesterForFreeRTOSFullAccess","PolicyName":"AWSIoTDeviceTesterForFreeRTOSFullAccess","PolicyId":"ANPAZKAPJZG4ADNJ2YUUH","Path":"/","Description":"Allows AWS IoT Device Tester to run the FreeRTOS qualification suite by allowing access to services including IoT, S3, and IAM","DefaultVersionId":"v5"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/idt-*"]},{"Action":["iot:DeleteThing","iot:AttachThingPrincipal","iot:DeleteCertificate","iot:GetRegistrationCode","iot:CreatePolicy","iot:UpdateCACertificate","s3:ListBucket","iot:DescribeEndpoint","iot:CreateOTAUpdate","iot:CreateStream","signer:ListSigningJobs","acm:ListCertificates","iot:CreateKeysAndCertificate","iot:UpdateCertificate","iot:CreateCertificateFromCsr","iot:DetachThingPrincipal","iot:RegisterCACertificate","iot:CreateThing","freertos:ListHardwarePlatforms","iam:ListRoles","iot:RegisterCertificate","iot:DeleteCACertificate","signer:PutSigningProfile","s3:ListAllMyBuckets","signer:ListSigningPlatforms","iot-device-tester:SendMetrics","iot-device-tester:SupportedVersion","iot-device-tester:LatestIdt","iot-device-tester:CheckVersion","iot-device-tester:DownloadTestSuite"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","signer:StartSigningJob","acm:GetCertificate","signer:DescribeSigningJob","s3:CreateBucket","execute-api:Invoke","s3:DeleteBucket","s3:PutBucketVersioning","signer:CancelSigningProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:execute-api:us-east-1:098862408343:9xpmnvs5h4/prod/POST/metrics","arn:aws:signer:*:*:/signing-profiles/*","arn:aws:signer:*:*:/signing-jobs/*","arn:aws:iam::*:role/idt-*","arn:aws:acm:*:*:certificate/*","arn:aws:s3:::idt-*","arn:aws:s3:::afr-ota*"]},{"Action":["iot:DeleteStream","iot:DeleteCertificate","iot:AttachPolicy","iot:DetachPolicy","iot:DeletePolicy","s3:ListBucketVersions","iot:UpdateCertificate","iot:GetOTAUpdate","iot:DeleteOTAUpdate","iot:DescribeJobExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::afr-ota*","arn:aws:iot:*:*:thinggroup/idt*","arn:aws:iam::*:role/idt-*"]},{"Action":["iot:DeleteCertificate","iot:AttachPolicy","iot:DetachPolicy","s3:DeleteObjectVersion","iot:DeleteOTAUpdate","s3:PutObject","s3:GetObject","iot:DeleteStream","iot:DeletePolicy","s3:DeleteObject","iot:UpdateCertificate","iot:GetOTAUpdate","s3:GetObjectVersion","iot:DescribeJobExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::afr-ota*/*","arn:aws:s3:::idt-*/*","arn:aws:iot:*:*:policy/idt*","arn:aws:iam::*:role/idt-*","arn:aws:iot:*:*:otaupdate/idt*","arn:aws:iot:*:*:thing/idt*","arn:aws:iot:*:*:cert/*","arn:aws:iot:*:*:job/*","arn:aws:iot:*:*:stream/*"]},{"Action":["s3:PutObject","s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::afr-ota*/*","arn:aws:s3:::idt-*/*"]},{"Action":["iot:CancelJobExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:job/*","arn:aws:iot:*:*:thing/idt*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:AuthorizeSecurityGroupIngress","ec2:DeleteSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:placement-group/*","arn:aws:ec2:*:*:snapshot/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:DescribeInstances","ec2:DescribeSecurityGroups","ssm:DescribeParameters","ssm:GetParameters"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:instance/*"]}],"services":["iam","iot","s3","signer","acm","freertos","iot-device-tester","execute-api","ec2","ssm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBudgetsActionsWithAWSResourceControlAccess","PolicyName":"AWSBudgetsActionsWithAWSResourceControlAccess","PolicyId":"ANPAZKAPJZG4AHTKKGHHS","Path":"/","Description":"Provides full access to AWS Budgets Actions including using Budgets Actions to control states of running AWS resources via AWS Management Console","DefaultVersionId":"v1"},"document":[{"Action":["budgets:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-portal:ViewBilling"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-portal:ModifyBilling","ec2:DescribeInstances","iam:ListGroups","iam:ListPolicies","iam:ListRoles","iam:ListUsers","organizations:ListAccounts","organizations:ListOrganizationalUnitsForParent","organizations:ListPolicies","organizations:ListRoots","rds:DescribeDBInstances","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["budgets","aws-portal","iam","ec2","organizations","rds","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy","PolicyName":"AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy","PolicyId":"ANPAZKAPJZG4AKB7QD2CZ","Path":"/","Description":"This policy is for the AWS Elastic Beanstalk service role used to perform managed updates of Elastic Beanstalk environments. This policy should not be attached to other users or roles. The policy grants broad permissions to create and manage resources across a number of AWS services including AutoScaling, EC2, ECS, Elastic Load Balancing and CloudFormation.  This policy also allows passing of any IAM role usable with those services.","DefaultVersionId":"v2"},"document":[{"Action":["elasticbeanstalk:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["autoscaling:DescribeAccountLimits","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeAutoScalingInstances","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLoadBalancers","autoscaling:DescribeNotificationConfigurations","autoscaling:DescribeScalingActivities","autoscaling:DescribeScheduledActions","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeLaunchTemplates","ec2:DescribeLaunchTemplateVersions","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSpotInstanceRequests","ec2:DescribeSubnets","ec2:DescribeVpcClassicLink","ec2:DescribeVpcs","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeTargetHealth","logs:DescribeLogGroups","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeOrderableDBInstanceOptions","sns:ListSubscriptionsByTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AllocateAddress","ec2:AssociateAddress","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion","ec2:CreateSecurityGroup","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions","ec2:DeleteSecurityGroup","ec2:DisassociateAddress","ec2:ReleaseAddress","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ecs:CreateCluster","ecs:DescribeClusters","ecs:RegisterTaskDefinition"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecs:DeleteCluster"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecs:*:*:cluster/awseb-*"]},{"Action":["autoscaling:AttachInstances","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteScheduledAction","autoscaling:DetachInstances","autoscaling:DeletePolicy","autoscaling:PutScalingPolicy","autoscaling:PutScheduledUpdateGroupAction","autoscaling:PutNotificationConfiguration","autoscaling:ResumeProcesses","autoscaling:SetDesiredCapacity","autoscaling:SuspendProcesses","autoscaling:TerminateInstanceInAutoScalingGroup","autoscaling:UpdateAutoScalingGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*","arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/eb-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/eb-*"]},{"Action":["cloudformation:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awseb-*","arn:aws:cloudformation:*:*:stack/eb-*"]},{"Action":["elasticloadbalancing:ApplySecurityGroupsToLoadBalancer","elasticloadbalancing:ConfigureHealthCheck","elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DeregisterTargets","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:RegisterTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*","arn:aws:elasticloadbalancing:*:*:targetgroup/eb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/eb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/*/awseb-*/*","arn:aws:elasticloadbalancing:*:*:loadbalancer/*/eb-*/*"]},{"Action":["logs:CreateLogGroup","logs:DeleteLogGroup","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*"]},{"Action":["s3:DeleteObject","s3:GetObject","s3:GetObjectAcl","s3:GetObjectVersion","s3:GetObjectVersionAcl","s3:PutObject","s3:PutObjectAcl","s3:PutObjectVersionAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*/*"]},{"Action":["s3:GetBucketLocation","s3:GetBucketPolicy","s3:ListBucket","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*"]},{"Action":["sns:CreateTopic","sns:GetTopicAttributes","sns:SetTopicAttributes","sns:Subscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:ElasticBeanstalkNotifications-*"]},{"Action":["sqs:GetQueueAttributes","sqs:GetQueueUrl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sqs:*:*:awseb-e-*","arn:aws:sqs:*:*:eb-*"]},{"Action":["cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:awseb-*","arn:aws:cloudwatch:*:*:alarm:eb-*"]}],"services":["elasticbeanstalk","iam","autoscaling","ec2","elasticloadbalancing","logs","rds","sns","ecs","cloudformation","s3","sqs","cloudwatch"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AdministratorAccess-Amplify","PolicyName":"AdministratorAccess-Amplify","PolicyId":"ANPAZKAPJZG4AML23RALR","Path":"/","Description":"Grants account administrative permissions while explicitly allowing direct access to resources needed by Amplify applications.","DefaultVersionId":"v2"},"document":[{"Action":["cloudformation:CreateChangeSet","cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeChangeSet","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:ExecuteChangeSet","cloudformation:GetTemplate","cloudformation:UpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/amplify-*"]},{"Action":["iam:CreateRole","iam:ListRoleTags","iam:TagRole","iam:AttachRolePolicy","iam:CreatePolicy","iam:DeletePolicy","iam:DeleteRole","iam:DeleteRolePolicy","iam:DetachRolePolicy","iam:PutRolePolicy","iam:UpdateRole","iam:GetRole","iam:GetPolicy","iam:GetRolePolicy","iam:PassRole","iam:ListPolicyVersions","appsync:CreateApiKey","appsync:CreateDataSource","appsync:CreateFunction","appsync:CreateResolver","appsync:CreateType","appsync:DeleteApiKey","appsync:DeleteDataSource","appsync:DeleteFunction","appsync:DeleteResolver","appsync:DeleteType","appsync:GetDataSource","appsync:GetFunction","appsync:GetIntrospectionSchema","appsync:GetResolver","appsync:GetSchemaCreationStatus","appsync:GetType","appsync:GraphQL","appsync:ListApiKeys","appsync:ListDataSources","appsync:ListFunctions","appsync:ListGraphqlApis","appsync:ListResolvers","appsync:ListResolversByFunction","appsync:ListTypes","appsync:StartSchemaCreation","appsync:UpdateApiKey","appsync:UpdateDataSource","appsync:UpdateFunction","appsync:UpdateResolver","appsync:UpdateType","appsync:TagResource","appsync:CreateGraphqlApi","appsync:DeleteGraphqlApi","appsync:GetGraphqlApi","appsync:ListTagsForResource","appsync:UpdateGraphqlApi","apigateway:DELETE","apigateway:GET","apigateway:PATCH","apigateway:POST","apigateway:PUT","cognito-idp:CreateUserPool","cognito-identity:CreateIdentityPool","cognito-identity:DeleteIdentityPool","cognito-identity:DescribeIdentity","cognito-identity:DescribeIdentityPool","cognito-identity:SetIdentityPoolRoles","cognito-identity:GetIdentityPoolRoles","cognito-identity:UpdateIdentityPool","cognito-idp:CreateUserPoolClient","cognito-idp:DeleteGroup","cognito-idp:DeleteUserPool","cognito-idp:DeleteUserPoolClient","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:ListTagsForResource","cognito-idp:ListUserPoolClients","cognito-idp:UpdateUserPoolClient","cognito-idp:CreateGroup","cognito-idp:DeleteGroup","cognito-identity:TagResource","cognito-idp:TagResource","cognito-idp:UpdateUserPool","lambda:AddPermission","lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:InvokeAsync","lambda:InvokeFunction","lambda:RemovePermission","lambda:UpdateFunctionCode","lambda:UpdateFunctionConfiguration","lambda:ListTags","lambda:TagResource","lambda:UntagResource","lambda:DeleteFunction","lambda:AddLayerVersionPermission","lambda:CreateEventSourceMapping","lambda:DeleteEventSourceMapping","lambda:DeleteLayerVersion","lambda:GetEventSourceMapping","lambda:GetLayerVersion","lambda:ListEventSourceMappings","lambda:ListLayerVersions","lambda:PublishLayerVersion","lambda:RemoveLayerVersionPermission","dynamodb:CreateTable","dynamodb:DeleteItem","dynamodb:DeleteTable","dynamodb:DescribeContinuousBackups","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListStreams","dynamodb:PutItem","dynamodb:TagResource","dynamodb:ListTagsOfResource","dynamodb:UpdateContinuousBackups","dynamodb:UpdateItem","dynamodb:UpdateTable","dynamodb:UpdateTimeToLive","s3:CreateBucket","s3:ListBucket","s3:PutBucketAcl","s3:PutBucketCORS","s3:PutBucketNotification","s3:PutBucketPolicy","s3:PutBucketWebsite","s3:PutObjectAcl","cloudfront:CreateCloudFrontOriginAccessIdentity","cloudfront:CreateDistribution","cloudfront:DeleteCloudFrontOriginAccessIdentity","cloudfront:DeleteDistribution","cloudfront:GetCloudFrontOriginAccessIdentity","cloudfront:GetCloudFrontOriginAccessIdentityConfig","cloudfront:GetDistribution","cloudfront:GetDistributionConfig","cloudfront:TagResource","cloudfront:UntagResource","cloudfront:UpdateCloudFrontOriginAccessIdentity","cloudfront:UpdateDistribution","events:DeleteRule","events:DescribeRule","events:ListRuleNamesByTarget","events:PutRule","events:PutTargets","events:RemoveTargets","mobiletargeting:GetApp","kinesis:AddTagsToStream","kinesis:CreateStream","kinesis:DeleteStream","kinesis:DescribeStream","kinesis:PutRecords"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["appsync:GetIntrospectionSchema","appsync:GraphQL","appsync:UpdateApiKey","appsync:ListApiKeys","s3:PutObject","s3:GetObject","s3:ListBucket","s3:ListBucketVersions","s3:DeleteBucket","s3:DeleteBucketPolicy","s3:DeleteBucketWebsite","s3:DeleteObject","s3:GetBucketLocation","s3:ListAllMyBuckets","sts:AssumeRole","iam:PutRolePolicy","iam:CreatePolicy","iam:AttachRolePolicy","mobiletargeting:*","amplify:CreateApp","amplify:CreateBackendEnvironment","amplify:GetApp","amplify:GetBackendEnvironment","amplify:ListApps","amplify:ListBackendEnvironments","amplify:CreateBranch","amplify:GetBranch","amplify:UpdateApp","amplify:ListBranches","amplify:ListDomainAssociations","amplify:DeleteBranch","amplify:DeleteApp","amplify:DeleteBackendEnvironment","amplifybackend:*","cognito-idp:AdminAddUserToGroup","cognito-idp:AdminCreateUser","cognito-idp:CreateGroup","cognito-idp:DeleteGroup","cognito-idp:DeleteUser","cognito-idp:ListUsers","cognito-idp:AdminGetUser","cognito-idp:ListUsersInGroup","cognito-idp:AdminDisableUser","cognito-idp:AdminRemoveUserFromGroup","cognito-idp:AdminResetUserPassword","cognito-idp:AdminListGroupsForUser","cognito-idp:ListGroups","cognito-idp:AdminDeleteUser","cognito-idp:AdminListUserAuthEvents","cognito-idp:AdminDeleteUser","cognito-idp:AdminConfirmSignUp","cognito-idp:AdminEnableUser","cognito-idp:AdminUpdateUserAttributes","cognito-idp:DescribeIdentityProvider"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","iam","appsync","apigateway","cognito-idp","cognito-identity","lambda","dynamodb","s3","cloudfront","events","mobiletargeting","kinesis","sts","amplify","amplifybackend"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSNetworkManagerFullAccess","PolicyName":"AWSNetworkManagerFullAccess","PolicyId":"ANPAZKAPJZG4ARXJ4NU7I","Path":"/","Description":"Provides full access to Amazon NetworkManager via the AWS Management Console.","DefaultVersionId":"v1"},"document":[{"Action":["networkmanager:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["networkmanager","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk","PolicyName":"AdministratorAccess-AWSElasticBeanstalk","PolicyId":"ANPAZKAPJZG4AX52KWGWY","Path":"/","Description":"Grants account administrative permissions. Explicitly allows developers and administrators to gain direct access to resources they need to manage AWS Elastic Beanstalk applications","DefaultVersionId":"v2"},"document":[{"Action":["acm:Describe*","acm:List*","autoscaling:Describe*","cloudformation:Describe*","cloudformation:Estimate*","cloudformation:Get*","cloudformation:List*","cloudformation:Validate*","cloudtrail:LookupEvents","cloudwatch:DescribeAlarms","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","codecommit:Get*","codecommit:UploadArchive","ec2:AllocateAddress","ec2:AssociateAddress","ec2:AuthorizeSecurityGroup*","ec2:CreateLaunchTemplate*","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:DeleteLaunchTemplate*","ec2:DeleteSecurityGroup","ec2:DeleteTags","ec2:Describe*","ec2:DisassociateAddress","ec2:ReleaseAddress","ec2:RevokeSecurityGroup*","ecs:CreateCluster","ecs:DeRegisterTaskDefinition","ecs:Describe*","ecs:List*","ecs:RegisterTaskDefinition","elasticbeanstalk:*","elasticloadbalancing:Describe*","iam:GetRole","iam:ListAttachedRolePolicies","iam:ListInstanceProfiles","iam:ListRolePolicies","iam:ListRoles","iam:ListServerCertificates","logs:Describe*","rds:Describe*","s3:ListAllMyBuckets","sns:ListSubscriptionsByTopic","sns:ListTopics","sqs:ListQueues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*","arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/eb-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/eb-*"]},{"Action":["cloudformation:CancelUpdateStack","cloudformation:ContinueUpdateRollback","cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:GetTemplate","cloudformation:ListStackResources","cloudformation:SignalResource","cloudformation:TagResource","cloudformation:UntagResource","cloudformation:UpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awseb-*","arn:aws:cloudformation:*:*:stack/eb-*"]},{"Action":["cloudwatch:DeleteAlarms","cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:awseb-*","arn:aws:cloudwatch:*:*:alarm:eb-*"]},{"Action":["codebuild:BatchGetBuilds","codebuild:CreateProject","codebuild:DeleteProject","codebuild:StartBuild"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codebuild:*:*:project/Elastic-Beanstalk-*"]},{"Action":["dynamodb:CreateTable","dynamodb:DeleteTable","dynamodb:DescribeTable","dynamodb:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/awseb-e-*","arn:aws:dynamodb:*:*:table/eb-*"]},{"Action":["ec2:RebootInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecs:DeleteCluster"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecs:*:*:cluster/awseb-*"]},{"Action":["elasticloadbalancing:*Rule","elasticloadbalancing:*Tags","elasticloadbalancing:SetRulePriorities","elasticloadbalancing:SetSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*","arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*","arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*/*"]},{"Action":["elasticloadbalancing:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*","arn:aws:elasticloadbalancing:*:*:targetgroup/eb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/eb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/*/awseb-*/*","arn:aws:elasticloadbalancing:*:*:loadbalancer/*/eb-*/*","arn:aws:elasticloadbalancing:*:*:listener/awseb-*","arn:aws:elasticloadbalancing:*:*:listener/eb-*","arn:aws:elasticloadbalancing:*:*:listener/*/awseb-*/*/*","arn:aws:elasticloadbalancing:*:*:listener/*/eb-*/*/*","arn:aws:elasticloadbalancing:*:*:listener-rule/app/awseb-*/*/*/*","arn:aws:elasticloadbalancing:*:*:listener-rule/app/eb-*/*/*/*"]},{"Action":["iam:AddRoleToInstanceProfile","iam:CreateInstanceProfile","iam:CreateRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-elasticbeanstalk*","arn:aws:iam::*:instance-profile/aws-elasticbeanstalk*"]},{"Action":["iam:AttachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-elasticbeanstalk*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling*","arn:aws:iam::*:role/aws-service-role/elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*","arn:aws:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing*","arn:aws:iam::*:role/aws-service-role/managedupdates.elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*","arn:aws:iam::*:role/aws-service-role/maintenance.elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*"]},{"Action":["logs:CreateLogGroup","logs:DeleteLogGroup","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*"]},{"Action":["rds:*DBSubnetGroup","rds:AuthorizeDBSecurityGroupIngress","rds:CreateDBInstance","rds:CreateDBSecurityGroup","rds:DeleteDBInstance","rds:DeleteDBSecurityGroup","rds:ModifyDBInstance","rds:RestoreDBInstanceFromDBSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:db:*","arn:aws:rds:*:*:secgrp:awseb-e-*","arn:aws:rds:*:*:secgrp:eb-*","arn:aws:rds:*:*:snapshot:*","arn:aws:rds:*:*:subgrp:awseb-e-*","arn:aws:rds:*:*:subgrp:eb-*"]},{"Action":["s3:Delete*","s3:Get*","s3:Put*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*/*"]},{"Action":["s3:CreateBucket","s3:GetBucket*","s3:ListBucket","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:GetTopicAttributes","sns:Publish","sns:SetTopicAttributes","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:ElasticBeanstalkNotifications-*"]},{"Action":["sqs:*QueueAttributes","sqs:CreateQueue","sqs:DeleteQueue","sqs:SendMessage","sqs:TagQueue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sqs:*:*:awseb-e-*","arn:aws:sqs:*:*:eb-*"]}],"services":["acm","autoscaling","cloudformation","cloudtrail","cloudwatch","codecommit","ec2","ecs","elasticbeanstalk","elasticloadbalancing","iam","logs","rds","s3","sns","sqs","codebuild","dynamodb"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/ConfigConformsServiceRolePolicy","PolicyName":"ConfigConformsServiceRolePolicy","PolicyId":"ANPAZKAPJZG4BCH3IIJPN","Path":"/aws-service-role/","Description":"Policy needed for AWSConfig to create conformance packs","DefaultVersionId":"v4"},"document":[{"Action":["config:PutConfigRule","config:DeleteConfigRule","config:DescribeConfigRules"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/config-conforms.amazonaws.com*"]},{"Action":["config:DescribeRemediationConfigurations","config:DeleteRemediationConfiguration","config:PutRemediationConfigurations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:remediation-configuration/aws-service-remediation-configuration/config-conforms.amazonaws.com*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DescribeDocument","ssm:GetDocument"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutObject","s3:PutObjectAcl","s3:GetObject","s3:GetBucketAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awsconfigconforms*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:GetStackPolicy","cloudformation:SetStackPolicy","cloudformation:UpdateStack","cloudformation:UpdateTerminationProtection","cloudformation:ValidateTemplate","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awsconfigconforms-*"]}],"services":["config","iam","ssm","s3","cloudformation"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigRemediationServiceRolePolicy","PolicyName":"AWSConfigRemediationServiceRolePolicy","PolicyId":"ANPAZKAPJZG4BC7ZOM6NP","Path":"/aws-service-role/","Description":"Allows AWS Config to remediate noncompliant resources on your behalf.","DefaultVersionId":"v1"},"document":[{"Action":["ssm:GetDocument","ssm:DescribeDocument","ssm:StartAutomationExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKendraFullAccess","PolicyName":"AmazonKendraFullAccess","PolicyId":"ANPAZKAPJZG4BK2ALV3AM","Path":"/","Description":"Provides full access to Amazon Kendra via the AWS Management Console.","DefaultVersionId":"v1"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeSecurityGroups","ec2:DescribeVpcs","ec2:DescribeSubnets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:DescribeSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:AmazonKendra-*"]},{"Action":["kendra:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ec2","kms","s3","secretsmanager","cloudwatch","kendra"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEMRFullAccessPolicy_v2","PolicyName":"AmazonEMRFullAccessPolicy_v2","PolicyId":"ANPAZKAPJZG4BK4MMWW4W","Path":"/","Description":"Provides full access to Amazon EMR","DefaultVersionId":"v2"},"document":[{"Action":["elasticmapreduce:RunJobFlow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticmapreduce:AddInstanceFleet","elasticmapreduce:AddInstanceGroups","elasticmapreduce:AddJobFlowSteps","elasticmapreduce:AddTags","elasticmapreduce:CancelSteps","elasticmapreduce:CreateEditor","elasticmapreduce:CreateSecurityConfiguration","elasticmapreduce:DeleteEditor","elasticmapreduce:DeleteSecurityConfiguration","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeEditor","elasticmapreduce:DescribeJobFlows","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListBootstrapActions","elasticmapreduce:ListClusters","elasticmapreduce:ListEditors","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","elasticmapreduce:ModifyCluster","elasticmapreduce:ModifyInstanceFleet","elasticmapreduce:ModifyInstanceGroups","elasticmapreduce:OpenEditorInConsole","elasticmapreduce:PutAutoScalingPolicy","elasticmapreduce:PutBlockPublicAccessConfiguration","elasticmapreduce:PutManagedScalingPolicy","elasticmapreduce:RemoveAutoScalingPolicy","elasticmapreduce:RemoveManagedScalingPolicy","elasticmapreduce:RemoveTags","elasticmapreduce:SetTerminationProtection","elasticmapreduce:StartEditor","elasticmapreduce:StopEditor","elasticmapreduce:TerminateJobFlows","elasticmapreduce:ViewEventsFromAllClustersInConsole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EMR_DefaultRole"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EMR_EC2_DefaultRole"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EMR_AutoScaling_DefaultRole"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/elasticmapreduce.amazonaws.com*/AWSServiceRoleForEMRCleanup*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeImages","ec2:DescribeKeyPairs","ec2:DescribeNatGateways","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","s3:ListAllMyBuckets","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["elasticmapreduce","cloudwatch","iam","ec2","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDevOpsGuruFullAccess","PolicyName":"AmazonDevOpsGuruFullAccess","PolicyId":"ANPAZKAPJZG4BQEAUGTMM","Path":"/","Description":"Provides full access to Amazon DevOps Guru.","DefaultVersionId":"v1"},"document":[{"Action":["devops-guru:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStacks","cloudformation:ListStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:GetTopicAttributes","sns:SetTopicAttributes","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:DevOps-Guru-*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/devops-guru.amazonaws.com/AWSServiceRoleForDevOpsGuru"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/devops-guru.amazonaws.com/AWSServiceRoleForDevOpsGuru"]}],"services":["devops-guru","cloudformation","cloudwatch","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess","PolicyName":"AmazonEventBridgeFullAccess","PolicyId":"ANPAZKAPJZG4BUM4GCASI","Path":"/","Description":"Provides full access to Amazon EventBridge.","DefaultVersionId":"v2"},"document":[{"Action":["events:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/AmazonEventBridgeApiDestinationsServiceRolePolicy"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:UpdateSecret","secretsmanager:DeleteSecret","secretsmanager:GetSecretValue","secretsmanager:PutSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:events!*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["events","iam","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSThinkboxAWSPortalAdminPolicy","PolicyName":"AWSThinkboxAWSPortalAdminPolicy","PolicyId":"ANPAZKAPJZG4BVM3T5TP2","Path":"/","Description":"This policy grants AWS Thinkbox's Deadline software full access to multiple AWS services as required for AWS Portal administration. This includes access to create arbitrary tags on several EC2 resource types.","DefaultVersionId":"v4"},"document":[{"Action":["ec2:AttachInternetGateway","ec2:AssociateAddress","ec2:AssociateRouteTable","ec2:AllocateAddress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateFleet","ec2:CreateLaunchTemplate","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreatePlacementGroup","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:DescribeAvailabilityZones","ec2:DescribeAddresses","ec2:DescribeFleets","ec2:DescribeFleetHistory","ec2:DescribeFleetInstances","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInternetGateways","ec2:DescribeLaunchTemplates","ec2:DescribeRouteTables","ec2:DescribeNatGateways","ec2:DescribeTags","ec2:DescribeKeyPairs","ec2:DescribePlacementGroups","ec2:DescribeInstanceTypeOfferings","ec2:DescribeRegions","ec2:DescribeSpotFleetRequestHistory","ec2:DescribeSecurityGroups","ec2:DescribeSpotFleetInstances","ec2:DescribeSpotFleetRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:GetConsoleOutput","ec2:ImportKeyPair","ec2:ReleaseAddress","ec2:RequestSpotFleet","ec2:CancelSpotFleetRequests","ec2:DisassociateAddress","ec2:DeleteFleets","ec2:DeleteLaunchTemplate","ec2:DeleteVpc","ec2:DeletePlacementGroup","ec2:DeleteVpcEndpoints","ec2:DeleteInternetGateway","ec2:DeleteSecurityGroup","ec2:RevokeSecurityGroupIngress","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DisassociateRouteTable","ec2:DeleteSubnet","ec2:DeleteNatGateway","ec2:DetachInternetGateway","ec2:ModifyInstanceAttribute","ec2:ModifyFleet","ec2:ModifySpotFleetRequest","ec2:ModifyVpcAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:launch-template/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:placement-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*::image/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:internet-gateway/*","arn:aws:ec2:*:*:route-table/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:vpc/*","arn:aws:ec2:*:*:natgateway/*"]},{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/AWSPortal*"]},{"Action":["iam:GetPolicy","iam:ListEntitiesForPolicy","iam:ListPolicyVersions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:policy/AWSPortal*"]},{"Action":["iam:GetRole","iam:GetRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPortal*","arn:aws:iam::*:role/DeadlineSpot*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPortal*","arn:aws:iam::*:role/DeadlineSpot*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/*"]},{"Action":["s3:CreateBucket","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketVersioning","s3:PutBucketAcl","s3:PutBucketCORS","s3:PutBucketVersioning","s3:GetBucketAcl","s3:GetObject","s3:PutBucketLogging","s3:PutBucketTagging","s3:PutObject","s3:ListBucket","s3:ListBucketVersions","s3:PutEncryptionConfiguration","s3:PutLifecycleConfiguration","s3:DeleteBucket","s3:DeleteObject","s3:DeleteBucketPolicy","s3:DeleteObjectVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3::*:awsportal*","arn:aws:s3::*:stack*","arn:aws:s3::*:aws-portal-cache*","arn:aws:s3::*:logs-for-aws-portal-cache*","arn:aws:s3::*:logs-for-stack*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:Scan"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"]},{"Action":["cloudformation:CreateStack","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResources","cloudformation:DeleteStack","cloudformation:DeleteChangeSet","cloudformation:ListStackResources","cloudformation:CreateChangeSet","cloudformation:DescribeChangeSet","cloudformation:ExecuteChangeSet","cloudformation:UpdateTerminationProtection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/stack*/*","arn:aws:cloudformation:*:*:stack/Deadline*/*"]},{"Action":["cloudformation:EstimateTemplateCost","cloudformation:DescribeStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:PutRetentionPolicy","logs:DeleteRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/thinkbox*"]},{"Action":["logs:DescribeLogGroups","logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:Encrypt","kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:DeleteSecret","secretsmanager:UpdateSecret","secretsmanager:DescribeSecret","secretsmanager:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:rcs-tls-pw*"]}],"services":["ec2","iam","s3","dynamodb","cloudformation","logs","kms","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSElasticBeanstalkReadOnly","PolicyName":"AWSElasticBeanstalkReadOnly","PolicyId":"ANPAZKAPJZG4BYFSOYIWH","Path":"/","Description":"Grants read-only permissions. Explicitly allows operators to gain direct access to retrieve information about resources related to AWS Elastic Beanstalk applications.","DefaultVersionId":"v1"},"document":[{"Action":["acm:ListCertificates","autoscaling:DescribeAccountLimits","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeAutoScalingInstances","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribePolicies","autoscaling:DescribeLoadBalancers","autoscaling:DescribeNotificationConfigurations","autoscaling:DescribeScalingActivities","autoscaling:DescribeScheduledActions","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:GetTemplate","cloudformation:ListStackResources","cloudformation:ListStacks","cloudformation:ValidateTemplate","cloudtrail:LookupEvents","cloudwatch:DescribeAlarms","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstances","ec2:DescribeInstanceStatus","ec2:DescribeKeyPairs","ec2:DescribeLaunchTemplateVersions","ec2:DescribeLaunchTemplates","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSpotInstanceRequests","ec2:DescribeAvailabilityZones","ec2:DescribeSubnets","ec2:DescribeVpcs","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:RequestEnvironmentInfo","elasticbeanstalk:RetrieveEnvironmentInfo","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeSSLPolicies","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeTargetHealth","iam:GetRole","iam:ListAttachedRolePolicies","iam:ListInstanceProfiles","iam:ListRolePolicies","iam:ListRoles","iam:ListServerCertificates","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeOrderableDBInstanceOptions","rds:DescribeDBSnapshots","s3:ListAllMyBuckets","sns:ListSubscriptionsByTopic","sns:ListTopics","sqs:ListQueues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:GetObjectAcl","s3:GetObjectVersion","s3:GetObjectVersionAcl","s3:GetBucketLocation","s3:GetBucketPolicy","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*"]}],"services":["acm","autoscaling","cloudformation","cloudtrail","cloudwatch","ec2","elasticbeanstalk","elasticloadbalancing","iam","rds","s3","sns","sqs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSAuditManagerServiceRolePolicy","PolicyName":"AWSAuditManagerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4C5N52UWST","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by AWS Audit Manager","DefaultVersionId":"v1"},"document":[{"Action":["license-manager:ListLicenseConfigurations","license-manager:ListAssociationsForLicenseConfiguration","license-manager:ListUsageForLicenseConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GenerateCredentialReport","iam:GetAccountSummary","iam:ListPolicies","iam:GetAccountPasswordPolicy","iam:ListUsers","iam:ListUserPolicies","iam:ListRoles","iam:ListRolePolicies","iam:ListGroups","iam:ListGroupPolicies","iam:ListEntitiesForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","ec2:DescribeFlowLogs","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","ec2:DescribeNetworkAcls","ec2:DescribeRouteTables","ec2:DescribeSnapshots","ec2:DescribeVpcEndpoints"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:DescribeTrails"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeDeliveryChannels","config:ListDiscoveredResources","config:DescribeConfigRules"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["securityhub:DescribeStandards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetLifecycleConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["waf:ListActivatedRulesInRuleGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["guardduty:ListDetectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53:GetQueryLoggingConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cognito-idp:DescribeUserPool"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]}],"services":["license-manager","iam","ec2","cloudtrail","config","securityhub","kms","cloudwatch","s3","events","waf","guardduty","route53","organizations","cognito-idp","elasticfilesystem"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess","PolicyName":"AWSCloudTrail_FullAccess","PolicyId":"ANPAZKAPJZG4CA4SIJQAM","Path":"/","Description":"Provides full access to AWS CloudTrail.","DefaultVersionId":"v3"},"document":[{"Action":["sns:AddPermission","sns:CreateTopic","sns:SetTopicAttributes","sns:GetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:aws-cloudtrail-logs*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketPolicy","s3:PutBucketPublicAccessBlock"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-cloudtrail-logs*"]},{"Action":["s3:ListAllMyBuckets","s3:GetBucketLocation","s3:GetBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:aws-cloudtrail-logs*"]},{"Action":["iam:ListRoles","iam:GetRolePolicy","iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateKey","kms:CreateAlias","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListGlobalTables","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["sns","s3","cloudtrail","logs","iam","kms","lambda","dynamodb"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AccessAnalyzerServiceRolePolicy","PolicyName":"AccessAnalyzerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4CAIXDDRI2","Path":"/aws-service-role/","Description":"Allow Access Analyzer to analyze resource metadata","DefaultVersionId":"v5"},"document":[{"Action":["ec2:DescribeAddresses","ec2:DescribeByoipCidrs","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:GetKeyPolicy","kms:ListGrants","kms:ListKeyPolicies","kms:ListKeys","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListLayers","lambda:ListLayerVersions","lambda:ListVersionsByFunction","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListDelegatedAdministrators","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetBucketPolicyStatus","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:ListAccessPoints","s3:ListAllMyBuckets","sns:GetTopicAttributes","sns:ListTopics","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecrets","sqs:GetQueueAttributes","sqs:ListQueues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","kms","lambda","organizations","s3","sns","secretsmanager","sqs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServiceQuotasFullAccess","PolicyName":"ServiceQuotasFullAccess","PolicyId":"ANPAZKAPJZG4CGHQWENW3","Path":"/","Description":"Provides full access to Service Quotas","DefaultVersionId":"v4"},"document":[{"Action":["autoscaling:DescribeAccountLimits","cloudformation:DescribeAccountLimits","cloudwatch:DescribeAlarmsForMetric","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm","dynamodb:DescribeLimits","elasticloadbalancing:DescribeAccountLimits","iam:GetAccountSummary","kinesis:DescribeLimits","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","rds:DescribeAccountAttributes","route53:GetAccountLimit","tag:GetTagKeys","tag:GetTagValues","servicequotas:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudwatch","dynamodb","elasticloadbalancing","iam","kinesis","organizations","rds","route53","tag","servicequotas"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/BatchServiceRolePolicy","PolicyName":"BatchServiceRolePolicy","PolicyId":"ANPAZKAPJZG4COHHXEWBT","Path":"/aws-service-role/","Description":"Provides access for the AWS Batch service to manage the required resources, including Amazon EC2 and Amazon ECS resources.","DefaultVersionId":"v3"},"document":[{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeInstances","ec2:DescribeInstanceAttribute","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","ec2:DescribeKeyPairs","ec2:DescribeImages","ec2:DescribeImageAttribute","ec2:DescribeSpotInstanceRequests","ec2:DescribeSpotFleetInstances","ec2:DescribeSpotFleetRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeVpcClassicLink","ec2:DescribeLaunchTemplateVersions","ec2:RequestSpotFleet","autoscaling:DescribeAccountLimits","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeAutoScalingInstances","ecs:DescribeClusters","ecs:DescribeContainerInstances","ecs:DescribeTaskDefinition","ecs:DescribeTasks","ecs:ListClusters","ecs:ListContainerInstances","ecs:ListTaskDefinitionFamilies","ecs:ListTaskDefinitions","ecs:ListTasks","ecs:DeregisterTaskDefinition","ecs:TagResource","ecs:ListAccountSettings","logs:DescribeLogGroups","iam:GetInstanceProfile","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup","logs:CreateLogStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/batch/job*"]},{"Action":["logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/batch/job*:log-stream:*"]},{"Action":["autoscaling:CreateOrUpdateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances","ec2:CancelSpotFleetRequests","ec2:ModifySpotFleetRequest","ec2:DeleteLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:CreateLaunchConfiguration","autoscaling:DeleteLaunchConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/AWSBatch*"]},{"Action":["autoscaling:CreateAutoScalingGroup","autoscaling:UpdateAutoScalingGroup","autoscaling:SetDesiredCapacity","autoscaling:DeleteAutoScalingGroup","autoscaling:SuspendProcesses","autoscaling:PutNotificationConfiguration","autoscaling:TerminateInstanceInAutoScalingGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/AWSBatch*"]},{"Action":["ecs:DeleteCluster","ecs:DeregisterContainerInstance","ecs:RunTask","ecs:StartTask","ecs:StopTask"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecs:*:*:cluster/AWSBatch*"]},{"Action":["ecs:RunTask","ecs:StartTask","ecs:StopTask"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecs:*:*:task-definition/*"]},{"Action":["ecs:StopTask"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecs:*:*:task/*/*"]},{"Action":["ecs:CreateCluster","ecs:RegisterTaskDefinition"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:launch-template/*","arn:aws:ec2:*:*:placement-group/*","arn:aws:ec2:*:*:capacity-reservation/*","arn:aws:ec2:*:*:elastic-gpu/*","arn:aws:elastic-inference:*:*:elastic-inference-accelerator/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","autoscaling","ecs","logs","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonSageMakerEdgeDeviceFleetPolicy","PolicyName":"AmazonSageMakerEdgeDeviceFleetPolicy","PolicyId":"ANPAZKAPJZG4CPENAJLBT","Path":"/service-role/","Description":"Provides permissions necessary for SageMaker Edge to create and manage a device fleet for the customer using the default cloud connection.","DefaultVersionId":"v1"},"document":[{"Action":["s3:PutObject","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*"]},{"Action":["sagemaker:SendHeartbeat","sagemaker:GetDeviceRegistration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iot:CreateRoleAlias","iot:DescribeRoleAlias","iot:UpdateRoleAlias","iot:ListTagsForResource","iot:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:rolealias/SageMakerEdge*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*SageMaker*","arn:aws:iam::*:role/*Sagemaker*","arn:aws:iam::*:role/*sagemaker*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*SageMaker*","arn:aws:iam::*:role/*Sagemaker*","arn:aws:iam::*:role/*sagemaker*"]}],"services":["s3","sagemaker","iot","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLookoutMetricsFullAccess","PolicyName":"AmazonLookoutMetricsFullAccess","PolicyId":"ANPAZKAPJZG4CYQN5ZMMA","Path":"/","Description":"Gives access to all actions for Amazon Lookout for Metrics","DefaultVersionId":"v1"},"document":[{"Action":["lookoutmetrics:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*LookoutMetrics*"]}],"services":["lookoutmetrics","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSOpsWorks_FullAccess","PolicyName":"AWSOpsWorks_FullAccess","PolicyId":"ANPAZKAPJZG4D626GOURR","Path":"/","Description":"Provides full access to AWS OpsWorks.","DefaultVersionId":"v1"},"document":[{"Action":["cloudwatch:GetMetricStatistics","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeLoadBalancers","iam:GetRolePolicy","iam:ListInstanceProfiles","iam:ListRoles","iam:ListUsers","opsworks:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ec2","elasticloadbalancing","iam","opsworks"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMarketplaceSellerProductsFullAccess","PolicyName":"AWSMarketplaceSellerProductsFullAccess","PolicyId":"ANPAZKAPJZG4DS2YFEG4N","Path":"/","Description":"Provides sellers full access to AWS Marketplace Management Products page and other AWS services such as AMI management.","DefaultVersionId":"v3"},"document":[{"Action":["aws-marketplace:ListChangeSets","aws-marketplace:DescribeChangeSet","aws-marketplace:StartChangeSet","aws-marketplace:CancelChangeSet","aws-marketplace:ListEntities","aws-marketplace:DescribeEntity","aws-marketplace:ListTasks","aws-marketplace:DescribeTask","aws-marketplace:UpdateTask","aws-marketplace:CompleteTask","ec2:DescribeImages","ec2:DescribeSnapshots","ec2:ModifyImageAttribute","ec2:ModifySnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["aws-marketplace","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess","PolicyName":"AWSAuditManagerAdministratorAccess","PolicyId":"ANPAZKAPJZG4EBAFCQQJX","Path":"/","Description":"Provides administrative access to enable or disable AWS Audit Manager, update settings, and manage assessments, controls, and frameworks","DefaultVersionId":"v1"},"document":[{"Action":["auditmanager:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAccountsForParent","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:ListParents","organizations:ListChildren"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:RegisterDelegatedAdministrator","organizations:DeregisterDelegatedAdministrator","organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetUser","iam:ListUsers","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:UpdateRoleDescription","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["auditmanager","organizations","iam","s3","kms","sns","events","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonCodeGuruReviewerFullAccess","PolicyName":"AmazonCodeGuruReviewerFullAccess","PolicyId":"ANPAZKAPJZG4ENLFBTHWM","Path":"/","Description":"Grants full access to Amazon CodeGuru Reviewer and scoped access to required dependencies.","DefaultVersionId":"v3"},"document":[{"Action":["codeguru-reviewer:*","codeguru:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer"]},{"Action":["codecommit:ListRepositories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codecommit:TagResource","codecommit:UntagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:TagResource","codestar-connections:UntagResource","codestar-connections:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:UseConnection","codestar-connections:ListConnections","codestar-connections:PassConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule","events:PutTargets","events:DeleteRule","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["codeguru-reviewer","codeguru","iam","codecommit","codestar-connections","events"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSImageBuilderFullAccess","PolicyName":"AWSImageBuilderFullAccess","PolicyId":"ANPAZKAPJZG4EO4HCSNZH","Path":"/","Description":"Provides full access to all AWS Image Builder actions and resource scoped access to related AWS services.","DefaultVersionId":"v2"},"document":[{"Action":["imagebuilder:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:*imagebuilder*"]},{"Action":["license-manager:ListLicenseConfigurations","license-manager:ListLicenseSpecificationsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/imagebuilder.amazonaws.com/AWSServiceRoleForImageBuilder"]},{"Action":["iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/*imagebuilder*"]},{"Action":["iam:ListInstanceProfiles","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/*imagebuilder*","arn:aws:iam::*:role/*imagebuilder*"]},{"Action":["s3:ListAllMyBuckets","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3::*:*imagebuilder*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/imagebuilder.amazonaws.com/AWSServiceRoleForImageBuilder"]},{"Action":["ec2:DescribeImages","ec2:DescribeSnapshots","ec2:DescribeVpcs","ec2:DescribeRegions","ec2:DescribeVolumes","ec2:DescribeSubnets","ec2:DescribeKeyPairs","ec2:DescribeSecurityGroups","ec2:DescribeInstanceTypeOfferings","ec2:DescribeLaunchTemplates"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["imagebuilder","sns","license-manager","iam","s3","ec2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI_OnPremises","PolicyName":"AWSOpsWorksRegisterCLI_OnPremises","PolicyId":"ANPAZKAPJZG4EZJ5DYEPG","Path":"/","Description":"Policy to enable registration of On-Premises instances via the OpsWorks CLI","DefaultVersionId":"v1"},"document":[{"Action":["opsworks:AssignInstance","opsworks:CreateLayer","opsworks:DeregisterInstance","opsworks:DescribeInstances","opsworks:DescribeStackProvisioningParameters","opsworks:DescribeStacks","opsworks:UnassignInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateGroup","iam:AddUserToGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:group/AWS/OpsWorks/OpsWorks-*"]},{"Action":["iam:CreateUser","iam:CreateAccessKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/AWS/OpsWorks/OpsWorks-*"]},{"Action":["iam:AttachUserPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:user/AWS/OpsWorks/OpsWorks-*"]}],"services":["opsworks","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSRoboMaker_FullAccess","PolicyName":"AWSRoboMaker_FullAccess","PolicyId":"ANPAZKAPJZG4FACURHLCA","Path":"/","Description":"Provides full access to AWS RoboMaker via the AWS Management Console and SDK. Also provides select access to related services (e.g., S3, IAM).","DefaultVersionId":"v1"},"document":[{"Action":["robomaker:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["robomaker","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSThinkboxDeadlineResourceTrackerAdminPolicy","PolicyName":"AWSThinkboxDeadlineResourceTrackerAdminPolicy","PolicyId":"ANPAZKAPJZG4FKWWNUOP2","Path":"/","Description":"Grants permissions required to create, destroy, and administer AWS Thinkbox's Deadline Resource Tracker.","DefaultVersionId":"v2"},"document":[{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:UpdateStack","cloudformation:DescribeStacks","cloudformation:UpdateTerminationProtection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/DeadlineResourceTracker*"]},{"Action":["dynamodb:CreateTable","dynamodb:DeleteTable","dynamodb:DescribeTable","dynamodb:ListTagsOfResource","dynamodb:TagResource","dynamodb:UntagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/DeadlineEC2ComputeNodeHealth*","arn:aws:dynamodb:*:*:table/DeadlineEC2ComputeNodeInfo*","arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"]},{"Action":["dynamodb:BatchWriteItem","dynamodb:Scan"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:PutRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/DeadlineResourceTracker*"]},{"Action":["iam:GetRole","iam:ListAttachedRolePolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/DeadlineResourceTracker*"]},{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/DeadlineResourceTrackerAccess*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"]},{"Action":["lambda:GetEventSourceMapping"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:CreateEventSourceMapping","lambda:DeleteEventSourceMapping"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:AddPermission","lambda:RemovePermission"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:DeadlineResourceTracker*"]},{"Action":["lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:DeadlineResourceTracker*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*/deadline_aws_resource_tracker-*.zip","arn:aws:s3:::*/DeadlineAWSResourceTrackerTemplate-*.yaml"]},{"Action":["sqs:CreateQueue","sqs:DeleteQueue","sqs:GetQueueAttributes","sqs:ListQueueTags","sqs:TagQueue","sqs:UntagQueue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sqs:*:*:DeadlineAWSComputeNodeState*","arn:aws:sqs:*:*:DeadlineResourceTracker*"]}],"services":["application-autoscaling","cloudformation","dynamodb","events","iam","lambda","s3","sqs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMAccessAdvisorReadOnly","PolicyName":"IAMAccessAdvisorReadOnly","PolicyId":"ANPAZKAPJZG4FNDX5PG6Z","Path":"/","Description":"This policy grants access to read all access information provided by IAM access advisor such as service last accessed information.","DefaultVersionId":"v1"},"document":[{"Action":["iam:ListRoles","iam:ListUsers","iam:ListGroups","iam:ListPolicies","iam:ListPoliciesGrantingServiceAccess","iam:GenerateServiceLastAccessedDetails","iam:GenerateOrganizationsAccessReport","iam:GenerateCredentialReport","iam:GetRole","iam:GetPolicy","iam:GetServiceLastAccessedDetails","iam:GetServiceLastAccessedDetailsWithEntities","iam:GetOrganizationsAccessReport","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribePolicy","organizations:ListChildren","organizations:ListParents","organizations:ListPoliciesForTarget","organizations:ListRoots","organizations:ListPolicies","organizations:ListTargetsForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonCodeGuruProfilerFullAccess","PolicyName":"AmazonCodeGuruProfilerFullAccess","PolicyId":"ANPAZKAPJZG4FVCBNS424","Path":"/","Description":"Provides full access to Amazon CodeGuru Profiler.","DefaultVersionId":"v4"},"document":[{"Action":["codeguru-profiler:*","iam:ListRoles","iam:ListUsers","sns:ListTopics","codeguru:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AWSServiceRoleForCodeGuruProfiler*"]}],"services":["codeguru-profiler","iam","sns","codeguru"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonElasticFileSystemServiceRolePolicy","PolicyName":"AmazonElasticFileSystemServiceRolePolicy","PolicyId":"ANPAZKAPJZG4FXCJYWBN7","Path":"/aws-service-role/","Description":"Allows Amazon Elastic File System to manage AWS resources on your behalf","DefaultVersionId":"v3"},"document":[{"Action":["backup-storage:MountCapsule","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeNetworkInterfaceAttribute","ec2:ModifyNetworkInterfaceAttribute","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kms:*:*:key/*"]},{"Action":["backup:CreateBackupVault","backup:PutBackupVaultAccessPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-vault:aws/efs/automatic-backup-vault"]},{"Action":["backup:CreateBackupPlan","backup:CreateBackupSelection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-plan:*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/backup.amazonaws.com/AWSServiceRoleForBackup"]}],"services":["backup-storage","ec2","tag","kms","backup","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction","PolicyName":"AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction","PolicyId":"ANPAZKAPJZG4G34KP2NLZ","Path":"/service-role/","Description":"Provides access for enabling IoT logging for execution of ENABLE_IOT_LOGGING mitigation action","DefaultVersionId":"v1"},"document":[{"Action":["iot:SetV2LoggingOptions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iot","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSPanoramaServiceRolePolicy","PolicyName":"AWSPanoramaServiceRolePolicy","PolicyId":"ANPAZKAPJZG4G7G35B6C5","Path":"/service-role/","Description":"Allows AWS Panorama to manage resources in Amazon S3, AWS IoT, AWS IoT GreenGrass, AWS Lambda, Amazon SageMaker, and Amazon CloudWatch Logs, and to pass service roles to AWS IoT, AWS IoT GreenGrass, and Amazon SageMaker.","DefaultVersionId":"v1"},"document":[{"Action":["iot:CreateThing","iot:DeleteThing","iot:DeleteThingShadow","iot:DescribeThing","iot:GetThingShadow","iot:UpdateThing","iot:UpdateThingShadow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/panorama*"]},{"Action":["iot:AttachThingPrincipal","iot:DetachThingPrincipal","iot:UpdateCertificate","iot:DeleteCertificate","iot:AttachPrincipalPolicy","iot:DetachPrincipalPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/panorama*","arn:aws:iot:*:*:cert/*"]},{"Action":["iot:CreateKeysAndCertificate","iot:CreatePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iot:CreatePolicyVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:policy/panorama*"]},{"Action":["iot:DescribeJobExecution","iot:CreateJob","iot:DeleteJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:job/panorama*","arn:aws:iot:*:*:thing/panorama*"]},{"Action":["iot:DescribeEndpoint"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["panorama:Describe*","panorama:List*","panorama:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject","s3:DeleteBucket","s3:ListBucket","s3:GetBucket*","s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-panorama*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPanoramaSageMakerRole","arn:aws:iam::*:role/service-role/AWSPanoramaSageMakerRole"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPanoramaGreengrassGroupRole","arn:aws:iam::*:role/service-role/AWSPanoramaGreengrassGroupRole","arn:aws:iam::*:role/AWSPanoramaGreengrassRole","arn:aws:iam::*:role/service-role/AWSPanoramaGreengrassRole"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPanoramaApplianceRole","arn:aws:iam::*:role/service-role/AWSPanoramaApplianceRole"]},{"Action":["greengrass:AssociateRoleToGroup","greengrass:AssociateServiceRoleToAccount","greengrass:CreateResourceDefinition","greengrass:CreateResourceDefinitionVersion","greengrass:CreateCoreDefinition","greengrass:CreateCoreDefinitionVersion","greengrass:CreateDeployment","greengrass:CreateFunctionDefinition","greengrass:CreateFunctionDefinitionVersion","greengrass:CreateGroup","greengrass:CreateGroupCertificateAuthority","greengrass:CreateGroupVersion","greengrass:CreateLoggerDefinition","greengrass:CreateLoggerDefinitionVersion","greengrass:CreateSubscriptionDefinition","greengrass:CreateSubscriptionDefinitionVersion","greengrass:DeleteCoreDefinition","greengrass:DeleteFunctionDefinition","greengrass:DeleteResourceDefinition","greengrass:DeleteGroup","greengrass:DeleteLoggerDefinition","greengrass:DeleteSubscriptionDefinition","greengrass:DisassociateRoleFromGroup","greengrass:DisassociateServiceRoleFromAccount","greengrass:GetAssociatedRole","greengrass:GetConnectivityInfo","greengrass:GetCoreDefinition","greengrass:GetCoreDefinitionVersion","greengrass:GetDeploymentStatus","greengrass:GetDeviceDefinition","greengrass:GetDeviceDefinitionVersion","greengrass:GetFunctionDefinition","greengrass:GetFunctionDefinitionVersion","greengrass:GetGroup","greengrass:GetGroupCertificateAuthority","greengrass:GetGroupCertificateConfiguration","greengrass:GetGroupVersion","greengrass:GetLoggerDefinition","greengrass:GetLoggerDefinitionVersion","greengrass:GetResourceDefinition","greengrass:GetServiceRoleForAccount","greengrass:GetSubscriptionDefinition","greengrass:GetSubscriptionDefinitionVersion","greengrass:ListCoreDefinitionVersions","greengrass:ListCoreDefinitions","greengrass:ListDeployments","greengrass:ListDeviceDefinitionVersions","greengrass:ListDeviceDefinitions","greengrass:ListFunctionDefinitionVersions","greengrass:ListFunctionDefinitions","greengrass:ListGroupCertificateAuthorities","greengrass:ListGroupVersions","greengrass:ListGroups","greengrass:ListLoggerDefinitionVersions","greengrass:ListLoggerDefinitions","greengrass:ListSubscriptionDefinitionVersions","greengrass:ListSubscriptionDefinitions","greengrass:ResetDeployments","greengrass:UpdateConnectivityInfo","greengrass:UpdateCoreDefinition","greengrass:UpdateDeviceDefinition","greengrass:UpdateFunctionDefinition","greengrass:UpdateGroup","greengrass:UpdateGroupCertificateConfiguration","greengrass:UpdateLoggerDefinition","greengrass:UpdateSubscriptionDefinition","greengrass:UpdateResourceDefinition"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:ListFunctions","lambda:ListVersionsByFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*"]},{"Action":["sagemaker:CreateTrainingJob","sagemaker:StopTrainingJob","sagemaker:CreateCompilationJob","sagemaker:DescribeCompilationJob","sagemaker:StopCompilationJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:training-job/panorama*","arn:aws:sagemaker:*:*:compilation-job/panorama*"]},{"Action":["sagemaker:ListCompilationJobs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:DescribeTrainingJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:training-job/*"]},{"Action":["iot:AttachPolicy","iot:CreateRoleAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:policy/panorama*","arn:aws:iot:*:*:rolealias/panorama*"]}],"services":["iot","panorama","s3","iam","greengrass","lambda","sagemaker"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonAugmentedAIFullAccess","PolicyName":"AmazonAugmentedAIFullAccess","PolicyId":"ANPAZKAPJZG4HJOEBWQWI","Path":"/","Description":"Provides access to perform all operations Amazon Augmented AI resources, including FlowDefinitions, HumanTaskUis and HumanLoops. Does not allow access for creating FlowDefinitions against the public-crowd Workteam.","DefaultVersionId":"v1"},"document":[{"Action":["sagemaker:*HumanLoop","sagemaker:*HumanLoops","sagemaker:*FlowDefinition","sagemaker:*FlowDefinitions","sagemaker:*HumanTaskUi","sagemaker:*HumanTaskUis"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["sagemaker","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKeyspacesFullAccess","PolicyName":"AmazonKeyspacesFullAccess","PolicyId":"ANPAZKAPJZG4HMS72N6JG","Path":"/","Description":"Provide full access to Amazon Keyspaces","DefaultVersionId":"v2"},"document":[{"Action":["cassandra:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeleteScheduledAction","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:DescribeScheduledActions","application-autoscaling:PutScheduledAction","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable"]}],"services":["cassandra","application-autoscaling","kms","cloudwatch","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonBraketFullAccess","PolicyName":"AmazonBraketFullAccess","PolicyId":"ANPAZKAPJZG4HUAKO7NZO","Path":"/","Description":"Provides full access to Amazon Braket via the AWS Management Console and SDK. Also provides access to related services (e.g., S3, logs).","DefaultVersionId":"v2"},"document":[{"Action":["s3:GetObject","s3:PutObject","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::amazon-braket-*"]},{"Action":["logs:Describe*","logs:Get*","logs:List*","logs:StartQuery","logs:StopQuery","logs:TestMetricFilter","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/braket:*"]},{"Action":["iam:ListRoles","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:ListNotebookInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:CreatePresignedNotebookInstanceUrl","sagemaker:CreateNotebookInstance","sagemaker:DeleteNotebookInstance","sagemaker:DescribeNotebookInstance","sagemaker:StartNotebookInstance","sagemaker:StopNotebookInstance","sagemaker:UpdateNotebookInstance","sagemaker:ListTags","sagemaker:AddTags","sagemaker:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance/amazon-braket-*"]},{"Action":["sagemaker:DescribeNotebookInstanceLifecycleConfig","sagemaker:CreateNotebookInstanceLifecycleConfig","sagemaker:DeleteNotebookInstanceLifecycleConfig","sagemaker:ListNotebookInstanceLifecycleConfigs","sagemaker:UpdateNotebookInstanceLifecycleConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/amazon-braket-*"]},{"Action":["braket:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/braket.amazonaws.com/AWSServiceRoleForAmazonBraket*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonBraketServiceSageMakerNotebookRole*"]}],"services":["s3","logs","iam","sagemaker","braket"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkManagedUpdatesServiceRolePolicy","PolicyName":"AWSElasticBeanstalkManagedUpdatesServiceRolePolicy","PolicyId":"ANPAZKAPJZG4HVFNJB4NR","Path":"/aws-service-role/","Description":"AWS Elastic Beanstalk Service Role policy that grants limited permissions to managed updates.","DefaultVersionId":"v5"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:releaseAddress","ec2:allocateAddress","ec2:DisassociateAddress","ec2:AssociateAddress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecs:RegisterTaskDefinition","ecs:DeRegisterTaskDefinition","ecs:List*","ecs:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticbeanstalk:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:Describe*","cloudformation:List*","ec2:Describe*","autoscaling:Describe*","elasticloadbalancing:Describe*","logs:DescribeLogGroups","sns:GetTopicAttributes","sns:ListSubscriptionsByTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:AttachInstances","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteLaunchConfiguration","autoscaling:DeleteScheduledAction","autoscaling:DetachInstances","autoscaling:PutNotificationConfiguration","autoscaling:PutScalingPolicy","autoscaling:PutScheduledUpdateGroupAction","autoscaling:ResumeProcesses","autoscaling:SuspendProcesses","autoscaling:TerminateInstanceInAutoScalingGroup","autoscaling:UpdateAutoScalingGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*","arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/eb-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/eb-*"]},{"Action":["cloudformation:CreateStack","cloudformation:CancelUpdateStack","cloudformation:DeleteStack","cloudformation:GetTemplate","cloudformation:UpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awseb-e-*","arn:aws:cloudformation:*:*:stack/eb-*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["s3:DeleteObject","s3:GetObject","s3:GetObjectAcl","s3:GetObjectVersion","s3:GetObjectVersionAcl","s3:PutObject","s3:PutObjectAcl","s3:PutObjectVersionAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*/*"]},{"Action":["s3:GetBucketLocation","s3:GetBucketPolicy","s3:ListBucket","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*"]},{"Action":["logs:CreateLogGroup","logs:DeleteLogGroup","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*"]},{"Action":["elasticloadbalancing:RegisterTargets","elasticloadbalancing:DeRegisterTargets","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:RegisterInstancesWithLoadBalancer"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-e-*","arn:aws:elasticloadbalancing:*:*:targetgroup/eb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/eb-*"]},{"Action":["sns:CreateTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:ElasticBeanstalkNotifications-Environment-*"]}],"services":["iam","ec2","ecs","elasticbeanstalk","cloudformation","autoscaling","elasticloadbalancing","logs","sns","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess","PolicyName":"AWSLambda_ReadOnlyAccess","PolicyId":"ANPAZKAPJZG4IERNVMNPE","Path":"/","Description":"Grants read-only access to AWS Lambda service, AWS Lambda console features, and other related AWS services.","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources","cloudwatch:GetMetricData","cloudwatch:ListMetrics","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:ListAliases","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","logs:DescribeLogGroups","lambda:Get*","lambda:List*","states:DescribeStateMachine","states:ListStateMachines","tag:GetResources","xray:GetTraceSummaries","xray:BatchGetTraces"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/lambda/*"]}],"services":["cloudformation","cloudwatch","ec2","kms","iam","logs","lambda","states","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServerMigrationServiceConsoleFullAccess","PolicyName":"ServerMigrationServiceConsoleFullAccess","PolicyId":"ANPAZKAPJZG4IIEMRGEYB","Path":"/","Description":"Required permissions to use all features of the Server Migration Service Console","DefaultVersionId":"v2"},"document":[{"Action":["sms:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStacks","cloudformation:DescribeStacks","cloudformation:DescribeStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::sms-app-*/*"]},{"Action":["ec2:DescribeKeyPairs","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["sms","cloudformation","s3","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAppMeshFullAccess","PolicyName":"AWSAppMeshFullAccess","PolicyId":"ANPAZKAPJZG4ILVZ5BWFU","Path":"/","Description":"Provides full access to the AWS App Mesh APIs and Management Console.","DefaultVersionId":"v6"},"document":[{"Action":["appmesh:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/appmesh.amazonaws.com/AWSServiceRoleForAppMesh"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStack*","cloudformation:UpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/AWSAppMesh-GettingStarted-*"]},{"Action":["acm:ListCertificates","acm:DescribeCertificate","acm-pca:DescribeCertificateAuthority","acm-pca:ListCertificateAuthorities"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicediscovery:ListNamespaces","servicediscovery:ListServices","servicediscovery:ListInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["appmesh","iam","cloudformation","acm","acm-pca","servicediscovery"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSProtonFullAccess","PolicyName":"AWSProtonFullAccess","PolicyId":"ANPAZKAPJZG4IOK6P734E","Path":"/","Description":"Provides full access to the AWS Proton APIs and Management Console. In addition to these permissions, access to Amazon S3 is also needed to register template bundles from your S3 buckets, as well as access to Amazon IAM to create and manage the service roles for Proton.","DefaultVersionId":"v1"},"document":[{"Action":["proton:*","codestar-connections:ListConnections","kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:PassConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codestar-connections:*:*:connection/*"]}],"services":["proton","codestar-connections","kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServiceQuotasReadOnlyAccess","PolicyName":"ServiceQuotasReadOnlyAccess","PolicyId":"ANPAZKAPJZG4ITU2HGGUJ","Path":"/","Description":"Provides read only access to Service Quotas","DefaultVersionId":"v2"},"document":[{"Action":["autoscaling:DescribeAccountLimits","cloudformation:DescribeAccountLimits","cloudwatch:DescribeAlarmsForMetric","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","dynamodb:DescribeLimits","elasticloadbalancing:DescribeAccountLimits","iam:GetAccountSummary","kinesis:DescribeLimits","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","rds:DescribeAccountAttributes","route53:GetAccountLimit","tag:GetTagKeys","tag:GetTagValues","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServices","servicequotas:ListServiceQuotas","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudwatch","dynamodb","elasticloadbalancing","iam","kinesis","organizations","rds","route53","tag","servicequotas"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/EC2FleetTimeShiftableServiceRolePolicy","PolicyName":"EC2FleetTimeShiftableServiceRolePolicy","PolicyId":"ANPAZKAPJZG4IU3TFNWBH","Path":"/aws-service-role/","Description":"Policy granting permissions to EC2 Fleet to launch instances in the future.","DefaultVersionId":"v1"},"document":[{"Action":["ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribeInstances","ec2:RunInstances","ec2:CreateFleet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:spot-instances-request/*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSIQPermissionServiceRolePolicy","PolicyName":"AWSIQPermissionServiceRolePolicy","PolicyId":"ANPAZKAPJZG4J77DMGFZ5","Path":"/aws-service-role/","Description":"Allows AWS IQ to manage the role assumed by AWS IQ experts.","DefaultVersionId":"v1"},"document":[{"Action":["iam:DeleteRole","iam:ListAttachedRolePolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSIQPermission-*"]},{"Action":["iam:AttachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSIQPermission-*"]},{"Action":["iam:DetachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSIQPermission-*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEventBridgeSchemasFullAccess","PolicyName":"AmazonEventBridgeSchemasFullAccess","PolicyId":"ANPAZKAPJZG4JF3KP3V5J","Path":"/","Description":"Provides full access to Amazon EventBridge Schemas.","DefaultVersionId":"v1"},"document":[{"Action":["schemas:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule","events:PutTargets","events:EnableRule","events:DisableRule","events:DeleteRule","events:RemoveTargets","events:ListTargetsByRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/*Schemas*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/schemas.amazonaws.com/AWSServiceRoleForSchemas"]}],"services":["schemas","events","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMarketplaceSellerFullAccess","PolicyName":"AWSMarketplaceSellerFullAccess","PolicyId":"ANPAZKAPJZG4JF7OFUANW","Path":"/","Description":"Provides full access to all seller operations on the AWS Marketplace and other AWS services such as AMI management.","DefaultVersionId":"v4"},"document":[{"Action":["aws-marketplace-management:uploadFiles","aws-marketplace-management:viewMarketing","aws-marketplace-management:viewReports","aws-marketplace-management:viewSupport","aws-marketplace-management:viewSettings","aws-marketplace:ListChangeSets","aws-marketplace:DescribeChangeSet","aws-marketplace:StartChangeSet","aws-marketplace:CancelChangeSet","aws-marketplace:ListEntities","aws-marketplace:DescribeEntity","aws-marketplace:ListTasks","aws-marketplace:DescribeTask","aws-marketplace:UpdateTask","aws-marketplace:CompleteTask","ec2:DescribeImages","ec2:DescribeSnapshots","ec2:ModifyImageAttribute","ec2:ModifySnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:SearchAgreements","aws-marketplace:DescribeAgreement","aws-marketplace:GetAgreementTerms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["aws-marketplace-management","aws-marketplace","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonFISServiceRolePolicy","PolicyName":"AmazonFISServiceRolePolicy","PolicyId":"ANPAZKAPJZG4JLZR2TQJD","Path":"/aws-service-role/","Description":"Policy to enable AWS FIS to manage monitoring and resource selection for experiments.","DefaultVersionId":"v2"},"document":[{"Action":["events:PutRule","events:DeleteRule","events:DescribeRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","iam:GetUser","iam:GetRole","iam:ListUsers","iam:ListRoles","rds:DescribeDBClusters","rds:DescribeDBInstances","ecs:DescribeClusters","eks:DescribeNodegroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["events","tag","cloudwatch","ec2","iam","rds","ecs","eks"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonConnect_FullAccess","PolicyName":"AmazonConnect_FullAccess","PolicyId":"ANPAZKAPJZG4JXAE7KLRO","Path":"/","Description":"The purpose of this policy is to grant permissions to AWS Connect users required to use Connect resources. This policy provides full access to AWS Connect resources via the Connect Console and public APIs","DefaultVersionId":"v1"},"document":[{"Action":["connect:*","ds:CreateAlias","ds:AuthorizeApplication","ds:CreateIdentityPoolDirectory","ds:DeleteDirectory","ds:DescribeDirectories","ds:UnauthorizeApplication","firehose:DescribeDeliveryStream","firehose:ListDeliveryStreams","kinesis:DescribeStream","kinesis:ListStreams","kms:DescribeKey","kms:ListAliases","lex:GetBots","logs:CreateLogGroup","s3:GetBucketLocation","s3:ListAllMyBuckets","lambda:ListFunctions","ds:CheckAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:GetBucketAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::amazon-connect-*"]},{"Action":["servicequotas:GetServiceQuota"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:servicequotas:*:*:connect/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/connect.amazonaws.com/AWSServiceRoleForAmazonConnect*"]}],"services":["connect","ds","firehose","kinesis","kms","lex","logs","s3","lambda","servicequotas","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMCSFullAccess","PolicyName":"AmazonMCSFullAccess","PolicyId":"ANPAZKAPJZG4K6JRQY7NV","Path":"/","Description":"Provide full access to Amazon Managed Apache Cassandra Service","DefaultVersionId":"v2"},"document":[{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","application-autoscaling:PutScheduledAction","application-autoscaling:DeleteScheduledAction","application-autoscaling:DescribeScheduledActions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cassandra:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable"]}],"services":["application-autoscaling","cassandra","cloudwatch","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSIoTSiteWiseConsoleFullAccess","PolicyName":"AWSIoTSiteWiseConsoleFullAccess","PolicyId":"ANPAZKAPJZG4K7KP5VA7F","Path":"/","Description":"Provides full access to manage AWS IoT SiteWise using the AWS Management Console. Note this policy also grants access to create and list data stores used with AWS IoT SiteWise (e.g. AWS IoT Analytics), access to list and view AWS IoT Greengrass resources, list and modify AWS Secrets Manager secrets, retrieve AWS IoT thing shadows, list resources with specific tags, and create and use a service-linked role for AWS IoT SiteWise.","DefaultVersionId":"v1"},"document":[{"Action":["iotsitewise:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iotanalytics:List*","iotanalytics:Describe*","iotanalytics:Create*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iot:DescribeEndpoint","iot:GetThingShadow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["greengrass:GetGroup","greengrass:GetGroupVersion","greengrass:GetCoreDefinitionVersion","greengrass:ListGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:ListSecrets","secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:UpdateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:greengrass-*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/iotsitewise.amazonaws.com/AWSServiceRoleForIoTSiteWise*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/iotsitewise.amazonaws.com/AWSServiceRoleForIoTSiteWise*"]}],"services":["iotsitewise","iotanalytics","iot","greengrass","secretsmanager","tag","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSTransferFullAccess","PolicyName":"AWSTransferFullAccess","PolicyId":"ANPAZKAPJZG4KGELFKPYK","Path":"/","Description":"Provides full access to AWS Transfer Service.","DefaultVersionId":"v1"},"document":[{"Action":["transfer:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeVpcEndpoints","ec2:DescribeNetworkInterfaces","ec2:DescribeAddresses"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["transfer","iam","ec2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForAmazonEKSNodegroup","PolicyName":"AWSServiceRoleForAmazonEKSNodegroup","PolicyId":"ANPAZKAPJZG4KH2AAMJJG","Path":"/aws-service-role/","Description":"Permissions required for managing nodegroups in the customer's account. These policies related to management of the following resources: AutoscalingGroups, SecurityGroups, LaunchTemplates and InstanceProfiles.","DefaultVersionId":"v5"},"document":[{"Action":["ec2:RevokeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:DescribeInstances","ec2:RevokeSecurityGroupEgress","ec2:DeleteSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RevokeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:DescribeInstances","ec2:RevokeSecurityGroupEgress","ec2:DeleteSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteLaunchTemplate","ec2:CreateLaunchTemplateVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:UpdateAutoScalingGroup","autoscaling:DeleteAutoScalingGroup","autoscaling:TerminateInstanceInAutoScalingGroup","autoscaling:CompleteLifecycleAction","autoscaling:PutLifecycleHook","autoscaling:PutNotificationConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:*:autoScalingGroupName/eks-*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:CreateOrUpdateTags","autoscaling:CreateAutoScalingGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","ec2:CreateLaunchTemplate","ec2:DescribeInstances","iam:GetInstanceProfile","ec2:DescribeLaunchTemplates","autoscaling:DescribeAutoScalingGroups","ec2:CreateSecurityGroup","ec2:DescribeLaunchTemplateVersions","ec2:RunInstances","ec2:DescribeSecurityGroups","ec2:GetConsoleOutput","ec2:DescribeRouteTables","ec2:DescribeSubnets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateInstanceProfile","iam:DeleteInstanceProfile","iam:RemoveRoleFromInstanceProfile","iam:AddRoleToInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/eks-*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","autoscaling","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGrafanaAccountAdministrator","PolicyName":"AWSGrafanaAccountAdministrator","PolicyId":"ANPAZKAPJZG4KHVCM25DH","Path":"/","Description":"Provides access within Amazon Grafana to create and manage workspaces for the entire organization.","DefaultVersionId":"v1"},"document":[{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["grafana:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:grafana:*:*:/workspaces*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"]}],"services":["iam","grafana"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupOperatorAccess","PolicyName":"AWSBackupOperatorAccess","PolicyId":"ANPAZKAPJZG4KHXVYMY4O","Path":"/","Description":"This policy grants users permissions to assign AWS resources to backup plans, create on-demand backups, and restore backups. This policy does not allow the user to create or edit backup plans or to delete scheduled backups after they are created.","DefaultVersionId":"v7"},"document":[{"Action":["backup:Get*","backup:List*","backup:Describe*","backup:CreateBackupSelection","backup:DeleteBackupSelection","backup:GetRecoveryPointRestoreMetadata","backup:StartBackupJob","backup:StartRestoreJob","backup:StartCopyJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBSnapshots","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLookoutEquipmentFullAccess","PolicyName":"AmazonLookoutEquipmentFullAccess","PolicyId":"ANPAZKAPJZG4KPPCPGNJA","Path":"/","Description":"Provides full access to Amazon Lookout for Equipment operations","DefaultVersionId":"v2"},"document":[{"Action":["lookoutequipment:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:RetireGrant","kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["lookoutequipment","iam","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSTransferConsoleFullAccess","PolicyName":"AWSTransferConsoleFullAccess","PolicyId":"ANPAZKAPJZG4KYSTLCO3J","Path":"/","Description":"Provides full access to AWS Transfer via the AWS Management Console","DefaultVersionId":"v1"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["acm:ListCertificates","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","health:DescribeEventAggregates","iam:GetPolicyVersion","iam:ListPolicies","iam:ListRoles","route53:ListHostedZones","s3:ListAllMyBuckets","transfer:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","acm","ec2","health","route53","s3","transfer"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonEKSServiceRolePolicy","PolicyName":"AmazonEKSServiceRolePolicy","PolicyId":"ANPAZKAPJZG4KZBLSP26Y","Path":"/aws-service-role/","Description":"A Service-Linked Role required for Amazon EKS to call AWS services on your behalf.","DefaultVersionId":"v2"},"document":[{"Action":["ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DetachNetworkInterface","ec2:ModifyNetworkInterfaceAttribute","ec2:DescribeInstances","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:CreateNetworkInterfacePermission","iam:ListAttachedRolePolicies","ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSecurityGroup","ec2:RevokeSecurityGroupIngress","ec2:AuthorizeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:vpc/*","arn:aws:ec2:*:*:subnet/*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["route53:AssociateVPCWithHostedZone"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:route53:::hostedzone/*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/eks/*"]},{"Action":["logs:CreateLogStream","logs:DescribeLogStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/eks/*:*"]},{"Action":["logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/eks/*:*:*"]}],"services":["ec2","iam","route53","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigMultiAccountSetupPolicy","PolicyName":"AWSConfigMultiAccountSetupPolicy","PolicyId":"ANPAZKAPJZG4L5NAGNGTD","Path":"/aws-service-role/","Description":"Allows Config to call AWS services and deploy config resources across organization","DefaultVersionId":"v4"},"document":[{"Action":["config:PutConfigRule","config:DeleteConfigRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/config-multiaccountsetup.amazonaws.com/*"]},{"Action":["config:DescribeConfigurationRecorders"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAccounts","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","organizations:DescribeAccount"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:PutConformancePack","config:DeleteConformancePack","config:DescribeConformancePackStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:conformance-pack/aws-service-conformance-pack/config-multiaccountsetup.amazonaws.com/*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["config","organizations","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSApplicationMigrationServiceRolePolicy","PolicyName":"AWSApplicationMigrationServiceRolePolicy","PolicyId":"ANPAZKAPJZG4LGJRHTEPG","Path":"/aws-service-role/","Description":"Allows AWS application Migration Service to create and manage AWS resources on your behalf.","DefaultVersionId":"v1"},"document":[{"Action":["mgn:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListRetirableGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["mgh:AssociateCreatedArtifact","mgh:CreateProgressUpdateStream","mgh:DisassociateCreatedArtifact","mgh:GetHomeRegion","mgh:ImportMigrationTask","mgh:NotifyMigrationTaskState","mgh:PutResourceAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInstanceTypes","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeLaunchTemplateVersions","ec2:DescribeLaunchTemplates","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DescribeVolumes","ec2:GetEbsDefaultKmsKeyId","ec2:GetEbsEncryptionByDefault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RegisterImage","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CreateLaunchTemplateVersion","ec2:ModifyLaunchTemplate","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:DeleteVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","ec2:ModifyInstanceAttribute","ec2:GetConsoleOutput","ec2:GetConsoleScreenshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RevokeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:vpc/*"]},{"Action":["ec2:CreateLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:CreateSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:CreateSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:DetachVolume","ec2:AttachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:AttachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:DetachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:launch-template/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSApplicationMigrationReplicationServerRole","arn:aws:iam::*:role/service-role/AWSApplicationMigrationConversionServerRole"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:snapshot/*","arn:aws:ec2:*:*:instance/*"]}],"services":["mgn","kms","mgh","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/CloudFormationStackSetsOrgMemberServiceRolePolicy","PolicyName":"CloudFormationStackSetsOrgMemberServiceRolePolicy","PolicyId":"ANPAZKAPJZG4LHV6H6QDU","Path":"/aws-service-role/","Description":"Service Role for CloudFormation StackSets (Organization Member Account)","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateRole","iam:DeleteRole","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/stacksets-exec-*"]},{"Action":["iam:DetachRolePolicy","iam:AttachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/stacksets-exec-*"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupFullAccess","PolicyName":"AWSBackupFullAccess","PolicyId":"ANPAZKAPJZG4LL52EIPJX","Path":"/","Description":"This policy is for backup administrators, granting full access to AWS Backup operations, including creating or editing backup plans, assigning AWS resources to backup plans, deleting backups, and restoring backups.","DefaultVersionId":"v7"},"document":[{"Action":["backup:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["backup-storage:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:describeDBClusterSnapshots","rds:describeDBClusters","rds:describeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DeleteDBSnapshot","rds:DeleteDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSnapshot","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:GenerateDataKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","backup-storage","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","kms","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonCodeGuruProfilerReadOnlyAccess","PolicyName":"AmazonCodeGuruProfilerReadOnlyAccess","PolicyId":"ANPAZKAPJZG4LUSUINUHE","Path":"/","Description":"Provides read only access to Amazon CodeGuru Profiler.","DefaultVersionId":"v3"},"document":[{"Action":["codeguru:Get*","codeguru-profiler:BatchGet*","codeguru-profiler:Describe*","codeguru-profiler:Get*","codeguru-profiler:List*","iam:ListRoles","iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["codeguru","codeguru-profiler","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonEMRServicePolicy_v2","PolicyName":"AmazonEMRServicePolicy_v2","PolicyId":"ANPAZKAPJZG4M2DU3H3GW","Path":"/service-role/","Description":"This policy is used for the Amazon EMR Service Role and should NOT be used for any other IAM users or roles in your account. The policy grants permissions to create and manage resources associated with EMR and related services necessary for the operation of your EMR cluster.","DefaultVersionId":"v1"},"document":[{"Action":["ec2:CreateNetworkInterface","ec2:RunInstances","ec2:CreateFleet","ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateFleet","ec2:RunInstances","ec2:CreateLaunchTemplateVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:CreateLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:RunInstances","ec2:CreateFleet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:RunInstances","ec2:CreateFleet","ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*::image/ami-*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:capacity-reservation/*","arn:aws:ec2:*:*:placement-group/EMR_*","arn:aws:ec2:*:*:fleet/*","arn:aws:ec2:*:*:dedicated-host/*","arn:aws:resource-groups:*:*:group/*"]},{"Action":["ec2:CreateLaunchTemplateVersion","ec2:DeleteLaunchTemplate","ec2:DeleteNetworkInterface","ec2:ModifyInstanceAttribute","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:CreateNetworkInterface"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:placement-group/EMR_*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeCapacityReservations","ec2:DescribeDhcpOptions","ec2:DescribeInstances","ec2:DescribeLaunchTemplates","ec2:DescribeNetworkAcls","ec2:DescribeNetworkInterfaces","ec2:DescribePlacementGroups","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVolumes","ec2:DescribeVolumeStatus","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:vpc/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreatePlacementGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:placement-group/EMR_*"]},{"Action":["ec2:DeletePlacementGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["resource-groups:ListGroupResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:*_EMR_Auto_Scaling"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EMR_AutoScaling_DefaultRole"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EMR_EC2_DefaultRole"]}],"services":["ec2","application-autoscaling","resource-groups","cloudwatch","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudWatchSyntheticsFullAccess","PolicyName":"CloudWatchSyntheticsFullAccess","PolicyId":"ANPAZKAPJZG4MAGQWEZP4","Path":"/","Description":"Provides full access to CloudWatch Synthetics.","DefaultVersionId":"v6"},"document":[{"Action":["synthetics:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutEncryptionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::cw-syn-results-*"]},{"Action":["iam:ListRoles","s3:ListAllMyBuckets","s3:GetBucketLocation","xray:GetTraceSummaries","xray:BatchGetTraces","apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::cw-syn-*"]},{"Action":["s3:GetObjectVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-synthetics-library-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/CloudWatchSyntheticsRole*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/CloudWatchSyntheticsRole*"]},{"Action":["cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:Synthetics-*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:*"]},{"Action":["lambda:CreateFunction","lambda:AddPermission","lambda:PublishVersion","lambda:UpdateFunctionConfiguration","lambda:GetFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:cwsyn-*"]},{"Action":["lambda:GetLayerVersion","lambda:PublishLayerVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:layer:cwsyn-*","arn:aws:lambda:*:*:layer:Synthetics:*"]},{"Action":["ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:Subscribe","sns:ListSubscriptionsByTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:*:sns:*:*:Synthetics-*"]}],"services":["synthetics","s3","iam","xray","apigateway","cloudwatch","lambda","ec2","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMAccessAnalyzerFullAccess","PolicyName":"IAMAccessAnalyzerFullAccess","PolicyId":"ANPAZKAPJZG4MAZGHIYZN","Path":"/","Description":"Provides full access to IAM Access Analyzer","DefaultVersionId":"v1"},"document":[{"Action":["access-analyzer:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListDelegatedAdministrators","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSServiceCatalogAdminReadOnlyAccess","PolicyName":"AWSServiceCatalogAdminReadOnlyAccess","PolicyId":"ANPAZKAPJZG4MC6ZR7YFX","Path":"/","Description":"Provides read-only access to Service Catalog admin capabilities ","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStackEvents","cloudformation:DescribeStacks","cloudformation:DescribeChangeSet","cloudformation:ListChangeSets","cloudformation:ListStackResources","cloudformation:DescribeStackSet","cloudformation:DescribeStackInstance","cloudformation:DescribeStackSetOperation","cloudformation:ListStackInstances","cloudformation:ListStackSetOperations","cloudformation:ListStackSetOperationResults"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/SC-*","arn:aws:cloudformation:*:*:stack/StackSet-SC-*","arn:aws:cloudformation:*:*:changeSet/SC-*","arn:aws:cloudformation:*:*:stackset/SC-*"]},{"Action":["cloudformation:GetTemplateSummary","iam:GetGroup","iam:GetRole","iam:GetUser","iam:ListGroups","iam:ListRoles","iam:ListUsers","servicecatalog:Get*","servicecatalog:List*","servicecatalog:Describe*","servicecatalog:ScanProvisionedProducts","servicecatalog:Search*","ssm:DescribeDocument","ssm:GetAutomationExecution","ssm:ListDocuments","ssm:ListDocumentVersions","config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","iam","servicecatalog","ssm","config"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMonitronFullAccess","PolicyName":"AmazonMonitronFullAccess","PolicyId":"ANPAZKAPJZG4MHDVZEITQ","Path":"/","Description":"Provides full access to manage Amazon Monitron","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["monitron:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","ds:DescribeDirectories","ds:DescribeTrusts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","monitron","kms","organizations","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSThinkboxDeadlineSpotEventPluginAdminPolicy","PolicyName":"AWSThinkboxDeadlineSpotEventPluginAdminPolicy","PolicyId":"ANPAZKAPJZG4MNSGMZZZZ","Path":"/","Description":"Grants permissions required for AWS Thinkbox's Deadline Spot Event Plugin.  This includes permission to request, modify, and cancel a spot fleet, as well as limited PassRole permission.","DefaultVersionId":"v1"},"document":[{"Action":["ec2:CancelSpotFleetRequests","ec2:DescribeSpotFleetInstances","ec2:DescribeSpotFleetRequests","ec2:ModifySpotFleetRequest","ec2:RequestSpotFleet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/*"]},{"Action":["iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-ec2-spot-fleet-tagging-role","arn:aws:iam::*:role/DeadlineSpot*"]},{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-ec2-spot-fleet-tagging-role","arn:aws:iam::*:role/DeadlineSpot*"]}],"services":["ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudWatchApplicationInsightsFullAccess","PolicyName":"CloudWatchApplicationInsightsFullAccess","PolicyId":"ANPAZKAPJZG4MSQN23AKX","Path":"/","Description":"Provides full access to CloudWatch Application Insights and required dependencies. ","DefaultVersionId":"v1"},"document":[{"Action":["applicationinsights:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/application-insights.amazonaws.com/AWSServiceRoleForApplicationInsights"]}],"services":["applicationinsights","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSControlTowerServiceRolePolicy","PolicyName":"AWSControlTowerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4MW35THVLF","Path":"/service-role/","Description":"Provides access to AWS Resources managed or used by AWS Control Tower ","DefaultVersionId":"v7"},"document":[{"Action":["cloudformation:CreateStack","cloudformation:CreateStackInstances","cloudformation:CreateStackSet","cloudformation:DeleteStack","cloudformation:DeleteStackInstances","cloudformation:DeleteStackSet","cloudformation:DescribeStackInstance","cloudformation:DescribeStacks","cloudformation:DescribeStackSet","cloudformation:DescribeStackSetOperation","cloudformation:ListStackInstances","cloudformation:UpdateStack","cloudformation:UpdateStackInstances","cloudformation:UpdateStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:type/resource/AWS-IAM-Role"]},{"Action":["cloudformation:CreateStack","cloudformation:CreateStackInstances","cloudformation:CreateStackSet","cloudformation:DeleteStack","cloudformation:DeleteStackInstances","cloudformation:DeleteStackSet","cloudformation:DescribeStackInstance","cloudformation:DescribeStacks","cloudformation:DescribeStackSet","cloudformation:DescribeStackSetOperation","cloudformation:GetTemplate","cloudformation:ListStackInstances","cloudformation:UpdateStack","cloudformation:UpdateStackInstances","cloudformation:UpdateStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/AWSControlTower*/*","arn:aws:cloudformation:*:*:stack/StackSet-AWSControlTower*/*","arn:aws:cloudformation:*:*:stackset/AWSControlTower*:*","arn:aws:cloudformation:*:*:stackset-target/AWSControlTower*/*"]},{"Action":["cloudtrail:CreateTrail","cloudtrail:DeleteTrail","cloudtrail:GetTrailStatus","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudtrail:UpdateTrail","cloudtrail:PutEventSelectors","logs:CreateLogStream","logs:PutLogEvents","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:aws-controltower/CloudTrailLogs:*","arn:aws:cloudtrail:*:*:trail/aws-controltower*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-controltower*/*"]},{"Action":["sts:AssumeRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSControlTowerExecution"]},{"Action":["cloudtrail:DescribeTrails","ec2:DescribeAvailabilityZones","iam:ListRoles","logs:CreateLogGroup","logs:DescribeLogGroups","organizations:CreateAccount","organizations:DescribeAccount","organizations:DescribeCreateAccountStatus","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribePolicy","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListPoliciesForTarget","organizations:ListTargetsForPolicy","organizations:ListRoots","organizations:MoveAccount","servicecatalog:AssociatePrincipalWithPortfolio"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:GetUser","iam:ListAttachedRolePolicies","iam:GetRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSControlTowerStackSetRole","arn:aws:iam::*:role/service-role/AWSControlTowerCloudTrailRole","arn:aws:iam::*:role/service-role/AWSControlTowerConfigAggregatorRoleForOrganizations"]},{"Action":["config:DeleteConfigurationAggregator","config:PutConfigurationAggregator","config:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","cloudtrail","logs","s3","sts","ec2","iam","organizations","servicecatalog","config"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSystemsManagerChangeManagementServicePolicy","PolicyName":"AWSSystemsManagerChangeManagementServicePolicy","PolicyId":"ANPAZKAPJZG4MZTL6DXTC","Path":"/aws-service-role/","Description":"Provides access to AWS resources managed or used by the AWS Systems Manager change management framework.","DefaultVersionId":"v1"},"document":[{"Action":["ssm:CreateAssociation","ssm:DeleteAssociation","ssm:CreateOpsItem","ssm:GetOpsItem","ssm:UpdateOpsItem","ssm:StartAutomationExecution","ssm:StopAutomationExecution","ssm:GetAutomationExecution","ssm:GetCalendarState","ssm:GetDocument"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sso:ListDirectoryAssociations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sso-directory:DescribeUsers","sso-directory:IsMemberInGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","cloudwatch","sso","sso-directory","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonChimeServiceRolePolicy","PolicyName":"AmazonChimeServiceRolePolicy","PolicyId":"ANPAZKAPJZG4NA5XMV3PI","Path":"/aws-service-role/","Description":"Enables access to AWS Resources used or managed by Amazon Chime","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/chime.amazonaws.com/AWSServiceRoleForAmazonChime"]}],"services":["iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy","PolicyName":"AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy","PolicyId":"ANPAZKAPJZG4NAOSKQH4V","Path":"/","Description":"Service role policy used by the AWS Service Catalog service to provision products from Amazon SageMaker portfolio of products. Grants permissions to a set of related services including CodePipeline, CodeBuild, CodeCommit, Glue, CloudFormation, etc,.","DefaultVersionId":"v1"},"document":[{"Action":["apigateway:GET","apigateway:POST","apigateway:PUT","apigateway:PATCH","apigateway:DELETE"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:POST"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:PATCH"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/account"]},{"Action":["cloudformation:CreateStack","cloudformation:UpdateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/SC-*"]},{"Action":["cloudformation:DescribeStackEvents","cloudformation:DescribeStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/SC-*"]},{"Action":["cloudformation:GetTemplateSummary","cloudformation:ValidateTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codebuild:CreateProject","codebuild:DeleteProject","codebuild:UpdateProject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codebuild:*:*:project/sagemaker-*"]},{"Action":["codecommit:CreateCommit","codecommit:CreateRepository","codecommit:DeleteRepository","codecommit:GetRepository","codecommit:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codecommit:*:*:sagemaker-*"]},{"Action":["codecommit:ListRepositories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codepipeline:CreatePipeline","codepipeline:DeletePipeline","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:StartPipelineExecution","codepipeline:TagResource","codepipeline:UpdatePipeline"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codepipeline:*:*:sagemaker-*"]},{"Action":["cognito-idp:CreateUserPool"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cognito-idp:CreateGroup","cognito-idp:CreateUserPoolDomain","cognito-idp:CreateUserPoolClient","cognito-idp:DeleteGroup","cognito-idp:DeleteUserPool","cognito-idp:DeleteUserPoolClient","cognito-idp:DeleteUserPoolDomain","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:UpdateUserPool","cognito-idp:UpdateUserPoolClient"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecr:CreateRepository","ecr:DeleteRepository"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecr:*:*:repository/sagemaker-*"]},{"Action":["events:DescribeRule","events:DeleteRule","events:DisableRule","events:EnableRule","events:PutRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/sagemaker-*"]},{"Action":["firehose:CreateDeliveryStream","firehose:DeleteDeliveryStream","firehose:DescribeDeliveryStream","firehose:StartDeliveryStreamEncryption","firehose:StopDeliveryStreamEncryption","firehose:UpdateDestination"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:firehose:*:*:deliverystream/sagemaker-*"]},{"Action":["glue:CreateDatabase","glue:DeleteDatabase"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/sagemaker-*","arn:aws:glue:*:*:table/sagemaker-*","arn:aws:glue:*:*:userDefinedFunction/sagemaker-*"]},{"Action":["glue:CreateClassifier","glue:DeleteClassifier","glue:DeleteCrawler","glue:DeleteJob","glue:DeleteTrigger","glue:DeleteWorkflow","glue:StopCrawler"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:CreateWorkflow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:workflow/sagemaker-*"]},{"Action":["glue:CreateJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:job/sagemaker-*"]},{"Action":["glue:CreateCrawler","glue:GetCrawler"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:crawler/sagemaker-*"]},{"Action":["glue:CreateTrigger","glue:GetTrigger"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:trigger/sagemaker-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalog*"]},{"Action":["lambda:AddPermission","lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:InvokeFunction","lambda:RemovePermission"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:sagemaker-*"]},{"Action":["logs:CreateLogGroup","logs:CreateLogStream","logs:DeleteLogGroup","logs:DeleteLogStream","logs:DescribeLogGroups","logs:DescribeLogStreams","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/apigateway/AccessLogs/*","arn:aws:logs:*:*:log-group::log-stream:*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::sagemaker-*"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteBucketPolicy","s3:GetBucketPolicy","s3:PutBucketAcl","s3:PutBucketNotification","s3:PutBucketPolicy","s3:PutBucketPublicAccessBlock","s3:PutBucketLogging","s3:PutEncryptionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::sagemaker-*"]},{"Action":["sagemaker:CreateEndpoint","sagemaker:CreateEndpointConfig","sagemaker:CreateModel","sagemaker:CreateWorkteam","sagemaker:DeleteEndpoint","sagemaker:DeleteEndpointConfig","sagemaker:DeleteModel","sagemaker:DeleteWorkteam","sagemaker:DescribeModel","sagemaker:DescribeEndpointConfig","sagemaker:DescribeEndpoint","sagemaker:DescribeWorkteam"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:*"]},{"Action":["states:CreateStateMachine","states:DeleteStateMachine","states:UpdateStateMachine"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:stateMachine:sagemaker-*"]}],"services":["apigateway","cloudformation","codebuild","codecommit","codepipeline","cognito-idp","ecr","events","firehose","glue","iam","lambda","logs","s3","sagemaker","states"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForImageBuilder","PolicyName":"AWSServiceRoleForImageBuilder","PolicyId":"ANPAZKAPJZG4NE22WISEW","Path":"/aws-service-role/","Description":"Allows EC2ImageBuilder to call AWS services on your behalf.","DefaultVersionId":"v12"},"document":[{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:key-pair/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CopyImage","ec2:CreateImage","ec2:CreateLaunchTemplate","ec2:DeregisterImage","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstances","ec2:DescribeInstanceTypeOfferings","ec2:DescribeInstanceTypes","ec2:DescribeSubnets","ec2:DescribeTags","ec2:ModifyImageAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:ModifySnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["license-manager:UpdateLicenseSpecificationsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:ListCommands","ssm:ListCommandInvocations","ssm:AddTagsToResource","ssm:DescribeInstanceInformation","ssm:GetAutomationExecution","ssm:StopAutomationExecution","ssm:ListInventoryEntries","ssm:SendAutomationSignal","ssm:DescribeInstanceAssociationsStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWS-RunPowerShellScript","arn:aws:ssm:*:*:document/AWS-RunShellScript","arn:aws:ssm:*:*:document/AWSEC2-RunSysprep","arn:aws:s3:::*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:StartAutomationExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:automation-definition/ImageBuilder*"]},{"Action":["ssm:CreateAssociation","ssm:DeleteAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory","arn:aws:ssm:*:*:association/*","arn:aws:ec2:*:*:instance/*"]},{"Action":["kms:Encrypt","kms:Decrypt","kms:ReEncryptFrom","kms:ReEncryptTo","kms:GenerateDataKeyWithoutPlaintext","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sts:AssumeRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"]},{"Action":["logs:CreateLogStream","logs:CreateLogGroup","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"]},{"Action":["ec2:CreateLaunchTemplateVersion","ec2:DescribeLaunchTemplates","ec2:ModifyLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","license-manager","sns","ssm","kms","sts","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/ServerMigration_ServiceRole","PolicyName":"ServerMigration_ServiceRole","PolicyId":"ANPAZKAPJZG4NKLZNDFDI","Path":"/service-role/","Description":"Permissions to allow the AWS Server Migration Service to migrate VMs to EC2: allows the Server Migration Service to place the migrated resources into the customer's EC2 account.","DefaultVersionId":"v2"},"document":[{"Action":["cloudformation:CreateChangeSet","cloudformation:CreateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/sms-app-*/*"]},{"Action":["cloudformation:DeleteStack","cloudformation:ExecuteChangeSet","cloudformation:DeleteChangeSet","cloudformation:DescribeChangeSet","cloudformation:DescribeStacks","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:GetTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/sms-app-*/*"]},{"Action":["cloudformation:ValidateTemplate","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteObject","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetObject","s3:ListBucket","s3:PutObject","s3:PutObjectAcl","s3:PutLifecycleConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::sms-app-*"]},{"Action":["sms:CreateReplicationJob","sms:DeleteReplicationJob","sms:GetReplicationJobs","sms:GetReplicationRuns","sms:GetServers","sms:ImportServerCatalog","sms:StartOnDemandReplicationRun","sms:UpdateReplicationJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*::document/AWS-RunRemoteScript","arn:aws:s3:::sms-app-*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CopySnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:ModifySnapshotAttribute","ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CopyImage","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeSnapshots","ec2:DescribeSnapshotAttribute","ec2:DeregisterImage","ec2:ImportImage","ec2:DescribeImportImageTasks","ec2:GetEbsEncryptionByDefault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DisassociateIamInstanceProfile","ec2:AssociateIamInstanceProfile","ec2:ReplaceIamInstanceProfileAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","s3","sms","ssm","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSApplicationMigrationEC2Access","PolicyName":"AWSApplicationMigrationEC2Access","PolicyId":"ANPAZKAPJZG4OBKWG2D2O","Path":"/","Description":"This policy provides Amazon EC2 operations required to use Application Migration Service (MGN) to launch the migrated servers as EC2 instances. Attach this policy to your IAM users or roles.","DefaultVersionId":"v1"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSApplicationMigrationConversionServerRole"]},{"Action":["ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CreateLaunchTemplateVersion","ec2:ModifyLaunchTemplate","ec2:DeleteLaunchTemplateVersions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:DeleteVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","ec2:ModifyInstanceAttribute","ec2:GetConsoleOutput","ec2:GetConsoleScreenshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RevokeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:vpc/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:CreateSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:DetachVolume","ec2:AttachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:AttachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:DetachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:snapshot/*","arn:aws:ec2:*:*:instance/*"]}],"services":["iam","ec2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSImageBuilderReadOnlyAccess","PolicyName":"AWSImageBuilderReadOnlyAccess","PolicyId":"ANPAZKAPJZG4OD5TC5BXP","Path":"/","Description":"Provides read only access to all AWS Image Builder actions.","DefaultVersionId":"v1"},"document":[{"Action":["imagebuilder:Get*","imagebuilder:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/imagebuilder.amazonaws.com/AWSServiceRoleForImageBuilder"]}],"services":["imagebuilder","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonHealthLakeFullAccess","PolicyName":"AmazonHealthLakeFullAccess","PolicyId":"ANPAZKAPJZG4OMJS7NARX","Path":"/","Description":"Provides full access to Amazon HealthLake service.","DefaultVersionId":"v1"},"document":[{"Action":["healthlake:*","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["healthlake","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSIoTDeviceTesterForGreengrassFullAccess","PolicyName":"AWSIoTDeviceTesterForGreengrassFullAccess","PolicyId":"ANPAZKAPJZG4ORKVZSPY7","Path":"/","Description":"Allows AWS IoT Device Tester to run the AWS Greengrass qualification suite by allowing access to related services including Lambda, IoT, API Gateway, IAM","DefaultVersionId":"v4"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/idt-*"]},{"Action":["lambda:CreateFunction","iot:DeleteCertificate","lambda:DeleteFunction","execute-api:Invoke","iot:UpdateCertificate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:execute-api:us-east-1:098862408343:9xpmnvs5h4/prod/POST/metrics","arn:aws:lambda:*:*:function:idt-*","arn:aws:iot:*:*:cert/*"]},{"Action":["iot:CreateThing","iot:DeleteThing"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/idt-*","arn:aws:iot:*:*:cert/*"]},{"Action":["iot:AttachPolicy","iot:DetachPolicy","iot:DeletePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:policy/idt-*","arn:aws:iot:*:*:cert/*"]},{"Action":["iot:CreateJob","iot:DescribeJob","iot:DescribeJobExecution","iot:DeleteJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/idt-*","arn:aws:iot:*:*:job/*"]},{"Action":["iot:DescribeEndpoint","greengrass:*","iam:ListAttachedRolePolicies","iot:CreatePolicy","iot:GetThingShadow","iot:CreateKeysAndCertificate","iot:ListThings","iot:UpdateThingShadow","iot:CreateCertificateFromCsr","iot-device-tester:SendMetrics","iot-device-tester:SupportedVersion","iot-device-tester:LatestIdt","iot-device-tester:CheckVersion","iot-device-tester:DownloadTestSuite"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iot:DetachThingPrincipal","iot:AttachThingPrincipal"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iot:*:*:thing/idt-*","arn:aws:iot:*:*:cert/*"]},{"Action":["s3:PutObject","s3:DeleteObjectVersion","s3:ListBucketVersions","s3:CreateBucket","s3:DeleteObject","s3:DeleteBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::idt*"]}],"services":["iam","lambda","iot","execute-api","greengrass","iot-device-tester","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForSMS","PolicyName":"AWSServiceRoleForSMS","PolicyId":"ANPAZKAPJZG4OSYRD2VJZ","Path":"/aws-service-role/","Description":"Provides access to AWS services and resources necessary to migrate service instances into AWS including EC2, S3 and Cloudformation.","DefaultVersionId":"v10"},"document":[{"Action":["cloudformation:CreateChangeSet","cloudformation:CreateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/sms-app-*/*"]},{"Action":["cloudformation:DeleteStack","cloudformation:ExecuteChangeSet","cloudformation:DeleteChangeSet","cloudformation:DescribeChangeSet","cloudformation:DescribeStacks","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResource","cloudformation:DescribeStackResources","cloudformation:GetTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/sms-app-*/*"]},{"Action":["cloudformation:ValidateTemplate","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteObject","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetObject","s3:ListBucket","s3:PutObject","s3:PutObjectAcl","s3:PutLifecycleConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::sms-app-*"]},{"Action":["sms:CreateReplicationJob","sms:DeleteReplicationJob","sms:GetReplicationJobs","sms:GetReplicationRuns","sms:GetServers","sms:ImportServerCatalog","sms:StartOnDemandReplicationRun","sms:UpdateReplicationJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*::document/AWS-RunRemoteScript","arn:aws:s3:::sms-app-*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CopySnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:ModifySnapshotAttribute","ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CopyImage","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeSnapshots","ec2:DescribeSnapshotAttribute","ec2:DeregisterImage","ec2:ImportImage","ec2:DescribeImportImageTasks","ec2:GetEbsEncryptionByDefault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DisassociateIamInstanceProfile","ec2:AssociateIamInstanceProfile","ec2:ReplaceIamInstanceProfileAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:ModifyInstanceAttribute","ec2:StopInstances","ec2:StartInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["applicationinsights:Describe*","applicationinsights:List*","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["applicationinsights:CreateApplication","applicationinsights:CreateComponent","applicationinsights:UpdateApplication","applicationinsights:DeleteApplication","applicationinsights:UpdateComponentConfiguration","applicationinsights:DeleteComponent"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:applicationinsights:*:*:application/resource-group/sms-app-*"]},{"Action":["resource-groups:CreateGroup","resource-groups:GetGroup","resource-groups:UpdateGroup","resource-groups:DeleteGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:resource-groups:*:*:group/sms-app-*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/application-insights.amazonaws.com/AWSServiceRoleForApplicationInsights"]}],"services":["cloudformation","s3","sms","ssm","ec2","iam","applicationinsights","resource-groups"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin","PolicyName":"AWSLakeFormationDataAdmin","PolicyId":"ANPAZKAPJZG4OWCH3ENIA","Path":"/","Description":"Grants administrative access to AWS Lake Formation and related services, such as AWS Glue, to manage data lakes","DefaultVersionId":"v2"},"document":[{"Action":["lakeformation:*","cloudtrail:DescribeTrails","cloudtrail:LookupEvents","glue:GetDatabase","glue:GetDatabases","glue:CreateDatabase","glue:UpdateDatabase","glue:DeleteDatabase","glue:GetConnections","glue:SearchTables","glue:GetTable","glue:CreateTable","glue:UpdateTable","glue:DeleteTable","glue:GetTableVersions","glue:GetPartitions","glue:GetTables","glue:GetWorkflow","glue:ListWorkflows","glue:BatchGetWorkflows","glue:DeleteWorkflow","glue:GetWorkflowRuns","glue:StartWorkflowRun","glue:GetWorkflow","s3:ListBucket","s3:GetBucketLocation","s3:ListAllMyBuckets","s3:GetBucketAcl","iam:ListUsers","iam:ListRoles","iam:GetRole","iam:GetRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lakeformation:PutDataLakeSettings"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["lakeformation","cloudtrail","glue","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleCore","PolicyName":"AWSElasticBeanstalkRoleCore","PolicyId":"ANPAZKAPJZG4OXQ5DMW6K","Path":"/service-role/","Description":"AWSElasticBeanstalkRoleCore (Elastic Beanstalk operations role) Allows core operation of a web service environment.","DefaultVersionId":"v2"},"document":[{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:ReleaseAddress","ec2:AllocateAddress","ec2:DisassociateAddress","ec2:AssociateAddress","ec2:CreateTags","ec2:DeleteTags","ec2:CreateSecurityGroup","ec2:DeleteSecurityGroup","ec2:AuthorizeSecurityGroup*","ec2:RevokeSecurityGroup*","ec2:CreateLaunchTemplate*","ec2:DeleteLaunchTemplate*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:AttachInstances","autoscaling:*LoadBalancer*","autoscaling:*AutoScalingGroup","autoscaling:*LaunchConfiguration","autoscaling:DeleteScheduledAction","autoscaling:DetachInstances","autoscaling:PutNotificationConfiguration","autoscaling:PutScalingPolicy","autoscaling:PutScheduledUpdateGroupAction","autoscaling:ResumeProcesses","autoscaling:SuspendProcesses","autoscaling:*Tags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*"]},{"Action":["autoscaling:DeletePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*"]},{"Action":["s3:Delete*","s3:Get*","s3:Put*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*/*","arn:aws:s3:::elasticbeanstalk-env-resources-*/*"]},{"Action":["s3:GetBucket*","s3:ListBucket","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::elasticbeanstalk-*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:GetTemplate","cloudformation:ListStackResources","cloudformation:UpdateStack","cloudformation:ContinueUpdateRollback","cloudformation:CancelUpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/awseb-e-*"]},{"Action":["cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:awseb-*"]},{"Action":["elasticloadbalancing:Create*","elasticloadbalancing:Delete*","elasticloadbalancing:Modify*","elasticloadbalancing:RegisterTargets","elasticloadbalancing:DeRegisterTargets","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:*Tags","elasticloadbalancing:ConfigureHealthCheck","elasticloadbalancing:SetRulePriorities","elasticloadbalancing:SetLoadBalancerPoliciesOfListener"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-*","arn:aws:elasticloadbalancing:*:*:loadbalancer/app/awseb-*/*","arn:aws:elasticloadbalancing:*:*:loadbalancer/net/awseb-*/*","arn:aws:elasticloadbalancing:*:*:listener/awseb-*","arn:aws:elasticloadbalancing:*:*:listener/app/awseb-*","arn:aws:elasticloadbalancing:*:*:listener/net/awseb-*","arn:aws:elasticloadbalancing:*:*:listener-rule/app/awseb-*/*/*/*"]},{"Action":["autoscaling:Describe*","cloudformation:Describe*","logs:Describe*","ec2:Describe*","ecs:Describe*","ecs:List*","elasticloadbalancing:Describe*","rds:Describe*","sns:List*","iam:List*","acm:Describe*","acm:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-elasticbeanstalk-*"]}],"services":["ec2","autoscaling","iam","s3","cloudformation","cloudwatch","elasticloadbalancing","logs","ecs","rds","sns","acm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambda_FullAccess","PolicyName":"AWSLambda_FullAccess","PolicyId":"ANPAZKAPJZG4OXQPYWZ5D","Path":"/","Description":"Grants full access to AWS Lambda service, AWS Lambda console features, and other related AWS services.","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources","cloudwatch:ListMetrics","cloudwatch:GetMetricData","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:ListAliases","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","lambda:*","logs:DescribeLogGroups","states:DescribeStateMachine","states:ListStateMachines","tag:GetResources","xray:GetTraceSummaries","xray:BatchGetTraces"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/lambda/*"]}],"services":["cloudformation","cloudwatch","ec2","kms","iam","lambda","logs","states","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSIQFullAccess","PolicyName":"AWSIQFullAccess","PolicyId":"ANPAZKAPJZG4P4TAHETXT","Path":"/","Description":"Provides full access to AWS IQ","DefaultVersionId":"v2"},"document":[{"Action":["iq:*","iq-permission:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iq","iq-permission","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantineV2","PolicyName":"AWSCompromisedKeyQuarantineV2","PolicyId":"ANPAZKAPJZG4PFYMROIMI","Path":"/","Description":"Denies access to certain actions, applied by the AWS team in the event that an IAM user's credentials have been compromised or exposed publicly. Do NOT remove this policy. Instead, please follow the instructions specified in the support case created for you regarding this event.","DefaultVersionId":"v1"},"document":[{"Action":["ec2:RequestSpotInstances","ec2:RunInstances","ec2:StartInstances","iam:AddUserToGroup","iam:AttachGroupPolicy","iam:AttachRolePolicy","iam:AttachUserPolicy","iam:ChangePassword","iam:CreateAccessKey","iam:CreateInstanceProfile","iam:CreateLoginProfile","iam:CreatePolicyVersion","iam:CreateRole","iam:CreateUser","iam:DetachUserPolicy","iam:PassRole","iam:PutGroupPolicy","iam:PutRolePolicy","iam:PutUserPermissionsBoundary","iam:PutUserPolicy","iam:SetDefaultPolicyVersion","iam:UpdateAccessKey","iam:UpdateAccountPasswordPolicy","iam:UpdateAssumeRolePolicy","iam:UpdateLoginProfile","iam:UpdateUser","lambda:AddLayerVersionPermission","lambda:AddPermission","lambda:CreateFunction","lambda:GetPolicy","lambda:ListTags","lambda:PutProvisionedConcurrencyConfig","lambda:TagResource","lambda:UntagResource","lambda:UpdateFunctionCode","lightsail:Create*","lightsail:Delete*","lightsail:DownloadDefaultKeyPair","lightsail:GetInstanceAccessDetails","lightsail:Start*","lightsail:Update*","organizations:CreateAccount","organizations:CreateOrganization","organizations:InviteAccountToOrganization","s3:DeleteBucket","s3:DeleteObject","s3:DeleteObjectVersion","s3:PutLifecycleConfiguration","s3:PutBucketAcl","s3:DeleteBucketOwnershipControls","s3:DeleteBucketPolicy","s3:ObjectOwnerOverrideToBucketOwner","s3:PutAccountPublicAccessBlock","s3:PutBucketPolicy","s3:ListAllMyBuckets"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","lambda","lightsail","organizations","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonAppFlowFullAccess","PolicyName":"AmazonAppFlowFullAccess","PolicyId":"ANPAZKAPJZG4PGBU2ALC4","Path":"/","Description":"Provides full access to Amazon AppFlow and access to AWS services supported as flow source or destination (S3 and Redshift). Also provides access to KMS for encryption","DefaultVersionId":"v2"},"document":[{"Action":["appflow:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation","s3:GetBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::appflow-*"]},{"Action":["secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:PutResourcePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["appflow","iam","kms","s3","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantine","PolicyName":"AWSCompromisedKeyQuarantine","PolicyId":"ANPAZKAPJZG4PLD3NKX4L","Path":"/","Description":"Denies access to certain actions, applied by the AWS team in the event that an IAM user's credentials have been compromised or exposed publicly.  Do NOT remove this policy.  Instead, please follow the instructions specified in the email sent to you regarding this event.","DefaultVersionId":"v1"},"document":[{"Action":["iam:AttachGroupPolicy","iam:AttachRolePolicy","iam:AttachUserPolicy","iam:ChangePassword","iam:CreateAccessKey","iam:CreateInstanceProfile","iam:CreateLoginProfile","iam:CreateRole","iam:CreateUser","iam:DetachUserPolicy","iam:PutUserPermissionsBoundary","iam:PutUserPolicy","iam:UpdateAccessKey","iam:UpdateAccountPasswordPolicy","iam:UpdateUser","ec2:RequestSpotInstances","ec2:RunInstances","ec2:StartInstances","organizations:CreateAccount","organizations:CreateOrganization","organizations:InviteAccountToOrganization","lambda:CreateFunction","lightsail:Create*","lightsail:Start*","lightsail:Delete*","lightsail:Update*","lightsail:GetInstanceAccessDetails","lightsail:DownloadDefaultKeyPair"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ec2","organizations","lambda","lightsail"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWS_ConfigRole","PolicyName":"AWS_ConfigRole","PolicyId":"ANPAZKAPJZG4PP7QZ4FBG","Path":"/service-role/","Description":"Default policy for AWS Config service role. Provides permissions required for AWS Config to track changes to your AWS resources.","DefaultVersionId":"v6"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonRedshiftDataFullAccess","PolicyName":"AmazonRedshiftDataFullAccess","PolicyId":"ANPAZKAPJZG4PX5LA5SG6","Path":"/","Description":"This policy provides full access to Amazon Redshift Data APIs. This policy also grants scoped access to other required services.","DefaultVersionId":"v1"},"document":[{"Action":["redshift-data:ExecuteStatement","redshift-data:CancelStatement","redshift-data:ListStatements","redshift-data:GetStatementResult","redshift-data:DescribeStatement","redshift-data:ListDatabases","redshift-data:ListSchemas","redshift-data:ListTables","redshift-data:DescribeTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["redshift:GetClusterCredentials"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:redshift:*:*:dbname:*/*","arn:aws:redshift:*:*:dbuser:*/redshift_data_api_user"]},{"Action":["redshift:CreateClusterUser"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["arn:aws:redshift:*:*:dbuser:*/redshift_data_api_user"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/redshift-data.amazonaws.com/AWSServiceRoleForRedshift"]}],"services":["redshift-data","secretsmanager","redshift","iam"]}]}},"staticQueryHashes":["256249292"]}
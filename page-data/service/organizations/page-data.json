{"componentChunkName":"component---src-templates-service-detail-page-tsx","path":"/service/organizations/","result":{"pageContext":{"service":"organizations","policyData":[{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSHealthFullAccess","PolicyName":"AWSHealthFullAccess","PolicyId":"ANPAI3CUMPCPEUPCSXC4Y","Path":"/","Description":"Allows full access to the AWS Health Apis and Notifications and the Personal Health Dashboard","DefaultVersionId":"v3"},"document":[{"Action":["organizations:EnableAWSServiceAccess","organizations:DisableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["health:*","organizations:ListAccounts","organizations:ListParents","organizations:DescribeAccount","organizations:ListDelegatedAdministrators"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations","health","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/FMSServiceRolePolicy","PolicyName":"FMSServiceRolePolicy","PolicyId":"ANPAI62NTGYJB446ACUEA","Path":"/aws-service-role/","Description":"Access policy to allow FM service linked role to perform FM-related actions on FM-managed resources within a customer AWS Organization account.","DefaultVersionId":"v18"},"document":[{"Action":["waf:UpdateWebACL","waf:DeleteWebACL","waf:GetWebACL","waf:GetRuleGroup","waf:ListSubscribedRuleGroups","waf-regional:UpdateWebACL","waf-regional:DeleteWebACL","waf-regional:GetWebACL","waf-regional:GetRuleGroup","waf-regional:ListSubscribedRuleGroups","waf-regional:ListResourcesForWebACL","waf-regional:AssociateWebACL","waf-regional:DisassociateWebACL","elasticloadbalancing:SetWebACL","apigateway:SetWebACL","elasticloadbalancing:SetSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:waf:*:*:webacl/*","arn:aws:waf-regional:*:*:webacl/*","arn:aws:waf:*:*:rulegroup/*","arn:aws:waf-regional:*:*:rulegroup/*","arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*","arn:aws:apigateway:*::/restapis/*/stages/*"]},{"Action":["wafv2:PutLoggingConfiguration","wafv2:GetLoggingConfiguration","wafv2:ListLoggingConfigurations","wafv2:DeleteLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:regional/webacl/*","arn:aws:wafv2:*:*:global/webacl/*"]},{"Action":["waf:CreateWebACL","waf-regional:CreateWebACL","waf:GetChangeToken","waf-regional:GetChangeToken"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:waf:*","arn:aws:waf-regional:*"]},{"Action":["elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["waf:PutPermissionPolicy","waf:GetPermissionPolicy","waf:DeletePermissionPolicy","waf-regional:PutPermissionPolicy","waf-regional:GetPermissionPolicy","waf-regional:DeletePermissionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:waf:*:*:webacl/*","arn:aws:waf:*:*:rulegroup/*","arn:aws:waf-regional:*:*:webacl/*","arn:aws:waf-regional:*:*:rulegroup/*"]},{"Action":["cloudfront:GetDistribution","cloudfront:UpdateDistribution","cloudfront:ListDistributionsByWebACLId","cloudfront:ListDistributions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DeleteConfigRule","config:DescribeComplianceByConfigRule","config:DescribeConfigRuleEvaluationStatus","config:DescribeConfigRules","config:GetComplianceDetailsByConfigRule","config:PutConfigRule","config:StartConfigRulesEvaluation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/fms.amazonaws.com/*"]},{"Action":["config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus","config:PutConfigurationRecorder","config:StartConfigurationRecorder","config:PutDeliveryChannel","config:DescribeDeliveryChannels","config:DescribeDeliveryChannelStatus","config:GetComplianceSummaryByConfigRule","config:GetDiscoveredResourceCounts","config:PutEvaluations","config:SelectResourceConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/fms.amazonaws.com/AWSServiceRoleForFMS"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAccounts","organizations:DescribeOrganizationalUnit","organizations:ListChildren","organizations:ListRoots","organizations:ListParents","organizations:ListOrganizationalUnitsForParent","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["shield:CreateProtection","shield:DeleteProtection","shield:DescribeProtection","shield:ListProtections","shield:ListAttacks","shield:CreateSubscription","shield:DescribeSubscription","shield:GetSubscriptionState","shield:DescribeDRTAccess","shield:DescribeEmergencyContactSettings","shield:UpdateEmergencyContactSettings","elasticloadbalancing:DescribeLoadBalancers","ec2:DescribeAddresses"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:DeleteSecurityGroup","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:UpdateSecurityGroupRuleDescriptionsEgress","ec2:UpdateSecurityGroupRuleDescriptionsIngress","ec2:DescribeNetworkInterfaceAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateSecurityGroup","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeStaleSecurityGroups","ec2:DescribeNetworkInterfaces","ec2:ModifyNetworkInterfaceAttribute","ec2:DescribeVpcs","ec2:DescribeVpcPeeringConnections"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["wafv2:TagResource","wafv2:ListResourcesForWebACL","wafv2:AssociateWebACL","wafv2:ListTagsForResource","wafv2:UntagResource","wafv2:GetWebACL","wafv2:DisassociateFirewallManager","wafv2:DeleteWebACL","wafv2:DisassociateWebACL"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:global/webacl/*","arn:aws:wafv2:*:*:regional/webacl/*"]},{"Action":["wafv2:UpdateWebACL","wafv2:CreateWebACL","wafv2:DeleteFirewallManagerRuleGroups","wafv2:PutFirewallManagerRuleGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:global/webacl/*","arn:aws:wafv2:*:*:regional/webacl/*","arn:aws:wafv2:*:*:global/rulegroup/*","arn:aws:wafv2:*:*:regional/rulegroup/*","arn:aws:wafv2:*:*:global/managedruleset/*","arn:aws:wafv2:*:*:regional/managedruleset/*","arn:aws:wafv2:*:*:global/ipset/*","arn:aws:wafv2:*:*:regional/ipset/*","arn:aws:wafv2:*:*:global/regexpatternset/*","arn:aws:wafv2:*:*:regional/regexpatternset/*"]},{"Action":["wafv2:PutPermissionPolicy","wafv2:GetPermissionPolicy","wafv2:DeletePermissionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:global/rulegroup/*","arn:aws:wafv2:*:*:regional/rulegroup/*"]},{"Action":["cloudfront:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["wafv2:GetWebACLForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:wafv2:*:*:regional/webacl/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:route-table/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*"]},{"Action":["ec2:DeleteRouteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:route-table/*"]},{"Action":["ec2:AssociateRouteTable","ec2:CreateSubnet","ec2:CreateRouteTable","ec2:DeleteSubnet","ec2:DisassociateRouteTable","ec2:ReplaceRouteTableAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInternetGateways","ec2:DescribeRouteTables","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVpcEndpoints"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ram:*:*:resource-share/*"]},{"Action":["ram:AssociateResourceShare","ram:UpdateResourceShare","ram:DeleteResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ram:*:*:resource-share/*"]},{"Action":["ram:CreateResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:GetResourceShareAssociations","ram:GetResourceShares"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["network-firewall:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["network-firewall:AssociateSubnets","network-firewall:CreateFirewall","network-firewall:CreateFirewallPolicy","network-firewall:DisassociateSubnets","network-firewall:UpdateFirewallDeleteProtection","network-firewall:UpdateFirewallPolicy","network-firewall:UpdateFirewallPolicyChangeProtection","network-firewall:UpdateSubnetChangeProtection","network-firewall:AssociateFirewallPolicy","network-firewall:DescribeFirewall","network-firewall:DescribeFirewallPolicy","network-firewall:DescribeRuleGroup","network-firewall:ListFirewallPolicies","network-firewall:ListFirewalls","network-firewall:ListRuleGroups","network-firewall:PutResourcePolicy","network-firewall:DescribeResourcePolicy","network-firewall:DeleteResourcePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["network-firewall:DeleteFirewallPolicy","network-firewall:DeleteFirewall"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:ListLogDeliveries"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53resolver:ListFirewallRuleGroupAssociations","route53resolver:ListTagsForResource","route53resolver:ListFirewallRuleGroups","route53resolver:GetFirewallRuleGroupAssociation","route53resolver:GetFirewallRuleGroup","route53resolver:GetFirewallRuleGroupPolicy","route53resolver:PutFirewallRuleGroupPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53resolver:UpdateFirewallRuleGroupAssociation","route53resolver:DisassociateFirewallRuleGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:route53resolver:*:*:firewall-rule-group-association/*"]},{"Action":["route53resolver:AssociateFirewallRuleGroup","route53resolver:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:route53resolver:*:*:firewall-rule-group-association/*"]}],"services":["waf","waf-regional","elasticloadbalancing","apigateway","wafv2","cloudfront","config","iam","organizations","shield","ec2","ram","network-firewall","logs","route53resolver"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMFullAccess","PolicyName":"IAMFullAccess","PolicyId":"ANPAI7XKCFMBPM3QQRRVQ","Path":"/","Description":"Provides full access to IAM via the AWS Management Console.","DefaultVersionId":"v2"},"document":[{"Action":["iam:*","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribePolicy","organizations:ListChildren","organizations:ListParents","organizations:ListPoliciesForTarget","organizations:ListRoots","organizations:ListPolicies","organizations:ListTargetsForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSFMMemberReadOnlyAccess","PolicyName":"AWSFMMemberReadOnlyAccess","PolicyId":"ANPAIB2IVAQ4XXNHHA3DW","Path":"/","Description":"Provides read only access to AWS WAF actions for AWS Firewall Manager member accounts","DefaultVersionId":"v1"},"document":[{"Action":["fms:GetAdminAccount","waf:Get*","waf:List*","waf-regional:Get*","waf-regional:List*","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["fms","waf","waf-regional","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/ViewOnlyAccess","PolicyName":"ViewOnlyAccess","PolicyId":"ANPAID22R6XPJATWOFDK6","Path":"/job-function/","Description":"This policy grants permissions to view resources and basic metadata across all AWS services. ","DefaultVersionId":"v11"},"document":[{"Action":["acm:ListCertificates","athena:List*","aws-marketplace:ViewSubscriptions","autoscaling:Describe*","batch:ListJobs","clouddirectory:ListAppliedSchemaArns","clouddirectory:ListDevelopmentSchemaArns","clouddirectory:ListDirectories","clouddirectory:ListPublishedSchemaArns","cloudformation:List*","cloudformation:DescribeStacks","cloudfront:List*","cloudhsm:ListAvailableZones","cloudhsm:ListLunaClients","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudsearch:List*","cloudsearch:DescribeDomains","cloudtrail:DescribeTrails","cloudtrail:LookupEvents","cloudwatch:List*","cloudwatch:Get*","codebuild:ListBuilds*","codebuild:ListProjects","codecommit:List*","codedeploy:List*","codedeploy:Get*","codepipeline:ListPipelines","codestar:List*","cognito-idp:List*","cognito-identity:ListIdentities","cognito-identity:ListIdentityPools","cognito-sync:ListDatasets","connect:List*","config:List*","config:Describe*","datapipeline:ListPipelines","datapipeline:DescribePipelines","datapipeline:GetAccountLimits","dax:DescribeClusters","dax:DescribeDefaultParameters","dax:DescribeEvents","dax:DescribeParameterGroups","dax:DescribeParameters","dax:DescribeSubnetGroups","dax:ListTags","devicefarm:List*","directconnect:Describe*","discovery:List*","dms:List*","ds:DescribeDirectories","dynamodb:DescribeBackup","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeGlobalTableSettings","dynamodb:DescribeLimits","dynamodb:DescribeReservedCapacity","dynamodb:DescribeReservedCapacityOfferings","dynamodb:DescribeStream","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeBundleTasks","ec2:DescribeClassicLinkInstances","ec2:DescribeConversionTasks","ec2:DescribeCustomerGateways","ec2:DescribeDhcpOptions","ec2:DescribeExportTasks","ec2:DescribeFlowLogs","ec2:DescribeHost*","ec2:DescribeIdentityIdFormat","ec2:DescribeIdFormat","ec2:DescribeImage*","ec2:DescribeImport*","ec2:DescribeInstance*","ec2:DescribeInternetGateways","ec2:DescribeKeyPairs","ec2:DescribeMovingAddresses","ec2:DescribeNatGateways","ec2:DescribeNetwork*","ec2:DescribePlacementGroups","ec2:DescribePrefixLists","ec2:DescribeRegions","ec2:DescribeReserved*","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSnapshot*","ec2:DescribeSpot*","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVolume*","ec2:DescribeVpc*","ec2:DescribeVpnGateways","ecr:DescribeRepositories","ecr:ListImages","ecs:List*","ecs:Describe*","elasticache:Describe*","elasticbeanstalk:DescribeApplicationVersions","elasticbeanstalk:DescribeApplications","elasticbeanstalk:DescribeEnvironments","elasticbeanstalk:ListAvailableSolutionStacks","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroups","elasticfilesystem:DescribeFileSystems","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeTargetHealth","elasticmapreduce:List*","elastictranscoder:List*","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","events:ListRuleNamesByTarget","events:ListRules","events:ListTargetsByRule","firehose:List*","firehose:DescribeDeliveryStream","fsx:DescribeFileSystems","gamelift:List*","glacier:List*","greengrass:List*","iam:List*","iam:GetAccountSummary","iam:GetLoginProfile","importexport:ListJobs","inspector:List*","iot:List*","kinesis:ListStreams","kinesisanalytics:ListApplications","kms:ListKeys","lambda:List*","lex:GetBotAliases","lex:GetBotChannelAssociations","lex:GetBots","lex:GetBotVersions","lex:GetIntents","lex:GetIntentVersions","lex:GetSlotTypes","lex:GetSlotTypeVersions","lex:GetUtterancesView","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetInstances","lightsail:GetInstanceSnapshots","lightsail:GetKeyPair","lightsail:GetRegions","lightsail:GetStaticIps","lightsail:IsVpcPeered","logs:Describe*","machinelearning:Describe*","mobilehub:ListAvailableFeatures","mobilehub:ListAvailableRegions","mobilehub:ListProjects","opsworks:Describe*","opsworks-cm:Describe*","organizations:List*","outposts:GetOutpost","outposts:GetOutpostInstanceTypes","outposts:ListOutposts","outposts:ListSites","outposts:ListTagsForResource","mobiletargeting:GetApplicationSettings","mobiletargeting:GetCampaigns","mobiletargeting:GetImportJobs","mobiletargeting:GetSegments","polly:Describe*","polly:List*","rds:Describe*","redshift:DescribeClusters","redshift:DescribeEvents","redshift:ViewQueriesInConsole","route53:List*","route53:Get*","route53domains:List*","route53resolver:Get*","route53resolver:List*","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:Describe*","sagemaker:List*","sdb:List*","servicecatalog:List*","ses:List*","shield:List*","states:ListActivities","states:ListStateMachines","sns:List*","sqs:ListQueues","ssm:ListAssociations","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListLocalDisks","storagegateway:ListVolumeRecoveryPoints","storagegateway:ListVolumes","swf:List*","trustedadvisor:Describe*","waf:List*","waf-regional:List*","wafv2:List*","workdocs:DescribeAvailableDirectories","workdocs:DescribeInstances","workmail:Describe*","workspaces:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["acm","athena","aws-marketplace","autoscaling","batch","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-idp","cognito-identity","cognito-sync","connect","config","datapipeline","dax","devicefarm","directconnect","discovery","dms","ds","dynamodb","ec2","ecr","ecs","elasticache","elasticbeanstalk","elasticloadbalancing","elasticfilesystem","elasticmapreduce","elastictranscoder","es","events","firehose","fsx","gamelift","glacier","greengrass","iam","importexport","inspector","iot","kinesis","kinesisanalytics","kms","lambda","lex","lightsail","logs","machinelearning","mobilehub","opsworks","opsworks-cm","organizations","outposts","mobiletargeting","polly","rds","redshift","route53","route53domains","route53resolver","s3","sagemaker","sdb","servicecatalog","ses","shield","states","sns","sqs","ssm","storagegateway","swf","trustedadvisor","waf","waf-regional","wafv2","workdocs","workmail","workspaces"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations","PolicyName":"AWSConfigRoleForOrganizations","PolicyId":"ANPAIEHGYAUTHXSXZAW2E","Path":"/service-role/","Description":"Allows AWS Config to call read-only AWS Organizations APIs","DefaultVersionId":"v2"},"document":[{"Action":["organizations:ListAccounts","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","organizations:ListDelegatedAdministrators"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDirectoryServiceReadOnlyAccess","PolicyName":"AWSDirectoryServiceReadOnlyAccess","PolicyId":"ANPAIHWYO6WSDNCG64M2W","Path":"/","Description":"Provides read only access to AWS Directory Service.","DefaultVersionId":"v4"},"document":[{"Action":["ds:Check*","ds:Describe*","ds:Get*","ds:List*","ds:Verify*","ec2:DescribeNetworkInterfaces","ec2:DescribeSubnets","ec2:DescribeVpcs","sns:ListTopics","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ds","ec2","sns","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSSOMasterAccountAdministrator","PolicyName":"AWSSSOMasterAccountAdministrator","PolicyId":"ANPAIHXAQZIS3GOYIETUC","Path":"/","Description":"Provides access within AWS SSO to manage AWS Organizations master and member accounts and cloud application","DefaultVersionId":"v3"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"]},{"Action":["ds:DescribeTrusts","ds:UnauthorizeApplication","ds:DescribeDirectories","ds:AuthorizeApplication","iam:ListPolicies","organizations:EnableAWSServiceAccess","organizations:ListRoots","organizations:ListAccounts","organizations:ListOrganizationalUnitsForParent","organizations:ListAccountsForParent","organizations:DescribeOrganization","organizations:ListChildren","organizations:DescribeAccount","organizations:ListParents","sso:*","sso-directory:DescribeDirectory","ds:CreateAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ds","organizations","sso","sso-directory"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonGuardDutyServiceRolePolicy","PolicyName":"AmazonGuardDutyServiceRolePolicy","PolicyId":"ANPAIHZREZOWNSSA6FWQO","Path":"/aws-service-role/","Description":"Enable access to AWS Resources used or managed by Amazon Guard Duty","DefaultVersionId":"v3"},"document":[{"Action":["ec2:DescribeInstances","ec2:DescribeImages","organizations:ListAccounts","organizations:DescribeAccount","s3:GetBucketPublicAccessBlock","s3:GetEncryptionConfiguration","s3:GetBucketTagging","s3:GetAccountPublicAccessBlock","s3:ListAllMyBuckets","s3:GetBucketAcl","s3:GetBucketPolicy","s3:GetBucketPolicyStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","organizations","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy","PolicyName":"AWSSSOServiceRolePolicy","PolicyId":"ANPAIJ52KSWOD4GI54XP2","Path":"/aws-service-role/","Description":"Grants AWS SSO permissions to manage AWS resources, including IAM roles, policies and SAML IdP on your behalf.","DefaultVersionId":"v13"},"document":[{"Action":["iam:AttachRolePolicy","iam:CreateRole","iam:PutRolePolicy","iam:UpdateRole","iam:UpdateRoleDescription","iam:UpdateAssumeRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"]},{"Action":["iam:GetRole","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteRole","iam:DeleteRolePolicy","iam:DetachRolePolicy","iam:ListRolePolicies","iam:ListAttachedRolePolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus","iam:DeleteRole","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"]},{"Action":["iam:CreateSAMLProvider","iam:UpdateSAMLProvider"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:saml-provider/AWSSSO_*"]},{"Action":["iam:DeleteSAMLProvider","iam:GetSAMLProvider"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:saml-provider/AWSSSO_*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAccounts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ds:UnauthorizeApplication"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ds:DescribeDirectories","ds:DescribeTrusts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["identitystore:DescribeUser","identitystore:DescribeGroup","identitystore:ListGroups","identitystore:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations","ds","identitystore"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerMasterAccountRolePolicy","PolicyName":"AWSLicenseManagerMasterAccountRolePolicy","PolicyId":"ANPAIJE2NOZW2BDEHYUH2","Path":"/aws-service-role/","Description":"AWS License Manager service master account role policy","DefaultVersionId":"v3"},"document":[{"Action":["s3:GetBucketLocation","s3:ListBucket","s3:GetLifecycleConfiguration","s3:PutLifecycleConfiguration","s3:GetBucketPolicy","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["s3:AbortMultipartUpload","s3:PutObject","s3:GetObject","s3:ListBucketMultipartUploads","s3:ListMultipartUploadParts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["s3:DeleteObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*/resource_sync/*"]},{"Action":["athena:GetQueryExecution","athena:GetQueryResults","athena:StartQueryExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:GetTable","glue:GetPartition","glue:GetPartitions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeOrganization","organizations:ListAccounts","organizations:DescribeAccount","organizations:ListChildren","organizations:ListParents","organizations:ListAccountsForParent","organizations:ListRoots","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:GetResourceShares","ram:GetResourceShareAssociations","ram:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:CreateResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:AssociateResourceShare","ram:DisassociateResourceShare","ram:UpdateResourceShare","ram:DeleteResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/LicenseManagerServiceResourceDataSyncRole*"]},{"Action":["cloudformation:UpdateStack","cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LicenseManagerCrossAccountCloudDiscoveryStack/*"]},{"Action":["glue:CreateTable","glue:UpdateTable","glue:DeleteTable","glue:UpdateJob","glue:UpdateCrawler"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:crawler/LicenseManagerResourceSynDataCrawler","arn:aws:glue:*:*:job/LicenseManagerResourceSynDataProcessJob","arn:aws:glue:*:*:table/license_manager_resource_inventory_db/*","arn:aws:glue:*:*:table/license_manager_resource_sync/*","arn:aws:glue:*:*:database/license_manager_resource_inventory_db","arn:aws:glue:*:*:database/license_manager_resource_sync"]}],"services":["s3","athena","glue","organizations","ram","iam","cloudformation"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonGuardDutyFullAccess","PolicyName":"AmazonGuardDutyFullAccess","PolicyId":"ANPAIKUTKSN4KC63VDQUM","Path":"/","Description":"Provides full access to use Amazon GuardDuty.","DefaultVersionId":"v2"},"document":[{"Action":["guardduty:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess","organizations:RegisterDelegatedAdministrator","organizations:ListDelegatedAdministrators","organizations:ListAWSServiceAccessForOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["guardduty","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ReadOnlyAccess","PolicyName":"ReadOnlyAccess","PolicyId":"ANPAILL3HVNFSB6DCOWYQ","Path":"/","Description":"Provides read-only access to AWS services and resources.","DefaultVersionId":"v78"},"document":[{"Action":["a4b:Get*","a4b:List*","a4b:Search*","access-analyzer:GetAccessPreview","access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:GetGeneratedPolicy","access-analyzer:ListAccessPreviewFindings","access-analyzer:ListAccessPreviews","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListPolicyGenerations","access-analyzer:ListTagsForResource","access-analyzer:ValidatePolicy","acm-pca:Describe*","acm-pca:Get*","acm-pca:List*","acm:Describe*","acm:Get*","acm:List*","amplify:GetApp","amplify:GetBranch","amplify:GetDomainAssociation","amplify:GetJob","amplify:ListApps","amplify:ListBranches","amplify:ListDomainAssociations","amplify:ListJobs","apigateway:GET","application-autoscaling:Describe*","applicationinsights:Describe*","applicationinsights:List*","appmesh:Describe*","appmesh:List*","appstream:Describe*","appstream:List*","appsync:Get*","appsync:List*","athena:Batch*","athena:Get*","athena:List*","auditmanager:GetAccountStatus","auditmanager:GetAssessment","auditmanager:GetAssessmentFramework","auditmanager:GetAssessmentReportUrl","auditmanager:GetChangeLogs","auditmanager:GetControl","auditmanager:GetDelegations","auditmanager:GetEvidence","auditmanager:GetEvidenceByEvidenceFolder","auditmanager:GetEvidenceFolder","auditmanager:GetEvidenceFoldersByAssessment","auditmanager:GetEvidenceFoldersByAssessmentControl","auditmanager:GetOrganizationAdminAccount","auditmanager:GetServicesInScope","auditmanager:GetSettings","auditmanager:ListAssessmentFrameworks","auditmanager:ListAssessmentReports","auditmanager:ListAssessments","auditmanager:ListControls","auditmanager:ListKeywordsForDataSource","auditmanager:ListNotifications","auditmanager:ListTagsForResource","auditmanager:ValidateAssessmentReportIntegrity","autoscaling-plans:Describe*","autoscaling-plans:GetScalingPlanResourceForecastData","autoscaling:Describe*","aws-portal:View*","backup:Describe*","backup:Get*","backup:List*","batch:Describe*","batch:List*","braket:GetDevice","braket:GetQuantumTask","braket:SearchDevices","braket:SearchQuantumTasks","budgets:Describe*","budgets:View*","cassandra:Select","chatbot:Describe*","chatbot:Get*","chime:Get*","chime:List*","chime:Retrieve*","chime:Search*","chime:Validate*","cloud9:Describe*","cloud9:List*","clouddirectory:BatchRead","clouddirectory:Get*","clouddirectory:List*","clouddirectory:LookupPolicy","cloudformation:Describe*","cloudformation:Detect*","cloudformation:Estimate*","cloudformation:Get*","cloudformation:List*","cloudfront:Get*","cloudfront:List*","cloudhsm:Describe*","cloudhsm:Get*","cloudhsm:List*","cloudsearch:Describe*","cloudsearch:List*","cloudtrail:Describe*","cloudtrail:Get*","cloudtrail:List*","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","codeartifact:DescribeDomain","codeartifact:DescribePackageVersion","codeartifact:DescribeRepository","codeartifact:GetAuthorizationToken","codeartifact:GetDomainPermissionsPolicy","codeartifact:GetPackageVersionAsset","codeartifact:GetPackageVersionReadme","codeartifact:GetRepositoryEndpoint","codeartifact:GetRepositoryPermissionsPolicy","codeartifact:ListDomains","codeartifact:ListPackageVersionAssets","codeartifact:ListPackageVersionDependencies","codeartifact:ListPackageVersions","codeartifact:ListPackages","codeartifact:ListRepositories","codeartifact:ListRepositoriesInDomain","codeartifact:ListTagsForResource","codeartifact:ReadFromRepository","codebuild:BatchGet*","codebuild:DescribeCodeCoverages","codebuild:DescribeTestCases","codebuild:List*","codecommit:BatchGet*","codecommit:Describe*","codecommit:Get*","codecommit:GitPull","codecommit:List*","codedeploy:BatchGet*","codedeploy:Get*","codedeploy:List*","codeguru-profiler:Describe*","codeguru-profiler:Get*","codeguru-profiler:List*","codeguru-reviewer:Describe*","codeguru-reviewer:Get*","codeguru-reviewer:List*","codepipeline:Get*","codepipeline:List*","codestar-notifications:ListTargets","codestar-notifications:describeNotificationRule","codestar-notifications:listEventTypes","codestar-notifications:listNotificationRules","codestar-notifications:listTagsForResource","codestar:Describe*","codestar:Get*","codestar:List*","codestar:Verify*","cognito-identity:Describe*","cognito-identity:GetCredentialsForIdentity","cognito-identity:GetIdentityPoolRoles","cognito-identity:GetOpenIdToken","cognito-identity:GetOpenIdTokenForDeveloperIdentity","cognito-identity:List*","cognito-identity:Lookup*","cognito-idp:AdminGet*","cognito-idp:AdminList*","cognito-idp:Describe*","cognito-idp:Get*","cognito-idp:List*","cognito-sync:Describe*","cognito-sync:Get*","cognito-sync:List*","cognito-sync:QueryRecords","compute-optimizer:DescribeRecommendationExportJobs","compute-optimizer:GetAutoScalingGroupRecommendations","compute-optimizer:GetEBSVolumeRecommendations","compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEC2RecommendationProjectedMetrics","compute-optimizer:GetEnrollmentStatus","compute-optimizer:GetLambdaFunctionRecommendations","compute-optimizer:GetRecommendationSummaries","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","config:SelectAggregateResourceConfig","config:SelectResourceConfig","connect:Describe*","connect:GetFederationToken","connect:List*","dataexchange:Get*","dataexchange:List*","datapipeline:Describe*","datapipeline:EvaluateExpression","datapipeline:Get*","datapipeline:List*","datapipeline:QueryObjects","datapipeline:Validate*","datasync:Describe*","datasync:List*","dax:BatchGetItem","dax:Describe*","dax:GetItem","dax:ListTags","dax:Query","dax:Scan","deepcomposer:GetComposition","deepcomposer:GetModel","deepcomposer:GetSampleModel","deepcomposer:ListCompositions","deepcomposer:ListModels","deepcomposer:ListSampleModels","deepcomposer:ListTrainingTopics","detective:Get*","detective:List*","devicefarm:Get*","devicefarm:List*","devops-guru:DescribeAccountHealth","devops-guru:DescribeAccountOverview","devops-guru:DescribeAnomaly","devops-guru:DescribeInsight","devops-guru:DescribeResourceCollectionHealth","devops-guru:DescribeServiceIntegration","devops-guru:GetResourceCollection","devops-guru:ListAnomaliesForInsight","devops-guru:ListEvents","devops-guru:ListInsights","devops-guru:ListNotificationChannels","devops-guru:ListRecommendations","devops-guru:SearchInsights","directconnect:Describe*","discovery:Describe*","discovery:Get*","discovery:List*","dlm:Get*","dms:Describe*","dms:List*","dms:Test*","ds:Check*","ds:Describe*","ds:Get*","ds:List*","ds:Verify*","dynamodb:BatchGet*","dynamodb:Describe*","dynamodb:Get*","dynamodb:List*","dynamodb:Query","dynamodb:Scan","ec2:Describe*","ec2:Get*","ec2:SearchTransitGatewayRoutes","ec2messages:Get*","ecr-public:BatchCheckLayerAvailability","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetAuthorizationToken","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr-public:ListTagsForResource","ecr:BatchCheck*","ecr:BatchGet*","ecr:Describe*","ecr:Get*","ecr:List*","ecs:Describe*","ecs:List*","eks:Describe*","eks:List*","elasticache:Describe*","elasticache:List*","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:Request*","elasticbeanstalk:Retrieve*","elasticbeanstalk:Validate*","elasticfilesystem:Describe*","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:List*","elasticmapreduce:View*","elastictranscoder:List*","elastictranscoder:Read*","elemental-appliances-software:Get*","elemental-appliances-software:List*","es:Describe*","es:ESHttpGet","es:ESHttpHead","es:Get*","es:List*","events:Describe*","events:List*","events:Test*","firehose:Describe*","firehose:List*","fis:GetAction","fis:GetExperiment","fis:GetExperimentTemplate","fis:ListActions","fis:ListExperimentTemplates","fis:ListExperiments","fis:ListTagsForResource","fms:GetAdminAccount","fms:GetAppsList","fms:GetComplianceDetail","fms:GetNotificationChannel","fms:GetPolicy","fms:GetProtectionStatus","fms:GetProtocolsList","fms:GetViolationDetails","fms:ListAppsLists","fms:ListComplianceStatus","fms:ListMemberAccounts","fms:ListPolicies","fms:ListProtocolsLists","fms:ListTagsForResource","forecast:DescribeDataset","forecast:DescribeDatasetGroup","forecast:DescribeDatasetImportJob","forecast:DescribeForecast","forecast:DescribeForecastExportJob","forecast:DescribePredictor","forecast:DescribePredictorBacktestExportJob","forecast:GetAccuracyMetrics","forecast:ListDatasetGroups","forecast:ListDatasetImportJobs","forecast:ListDatasets","forecast:ListForecastExportJobs","forecast:ListForecasts","forecast:ListPredictorBacktestExportJobs","forecast:ListPredictors","forecast:QueryForecast","freertos:Describe*","freertos:List*","fsx:Describe*","fsx:List*","gamelift:Describe*","gamelift:Get*","gamelift:List*","gamelift:ResolveAlias","gamelift:Search*","glacier:Describe*","glacier:Get*","glacier:List*","globalaccelerator:Describe*","globalaccelerator:List*","glue:BatchGetDevEndpoints","glue:BatchGetJobs","glue:BatchGetPartition","glue:BatchGetTriggers","glue:BatchGetWorkflows","glue:CheckSchemaVersionValidity","glue:GetCatalogImportStatus","glue:GetClassifier","glue:GetClassifiers","glue:GetCrawler","glue:GetCrawlerMetrics","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabase","glue:GetDatabases","glue:GetDataflowGraph","glue:GetDevEndpoint","glue:GetDevEndpoints","glue:GetJob","glue:GetJobBookmark","glue:GetJobRun","glue:GetJobRuns","glue:GetJobs","glue:GetMLTaskRun","glue:GetMLTaskRuns","glue:GetMLTransform","glue:GetMLTransforms","glue:GetMapping","glue:GetPartition","glue:GetPartitions","glue:GetPlan","glue:GetRegistry","glue:GetResourcePolicy","glue:GetSchema","glue:GetSchemaByDefinition","glue:GetSchemaVersion","glue:GetSchemaVersionsDiff","glue:GetSecurityConfiguration","glue:GetSecurityConfigurations","glue:GetTable","glue:GetTableVersion","glue:GetTableVersions","glue:GetTables","glue:GetTags","glue:GetTrigger","glue:GetTriggers","glue:GetUserDefinedFunction","glue:GetUserDefinedFunctions","glue:GetWorkflow","glue:GetWorkflowRun","glue:GetWorkflowRunProperties","glue:GetWorkflowRuns","glue:ListCrawlers","glue:ListDevEndpoints","glue:ListJobs","glue:ListMLTransforms","glue:ListRegistries","glue:ListSchemaVersions","glue:ListSchemas","glue:ListTriggers","glue:ListWorkflows","glue:QuerySchemaVersionMetadata","greengrass:DescribeComponent","greengrass:Get*","greengrass:List*","groundstation:DescribeContact","groundstation:GetConfig","groundstation:GetDataflowEndpointGroup","groundstation:GetMinuteUsage","groundstation:GetMissionProfile","groundstation:GetSatellite","groundstation:ListConfigs","groundstation:ListContacts","groundstation:ListDataflowEndpointGroups","groundstation:ListGroundStations","groundstation:ListMissionProfiles","groundstation:ListSatellites","groundstation:ListTagsForResource","guardduty:DescribeOrganizationConfiguration","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","health:Describe*","iam:Generate*","iam:Get*","iam:List*","iam:Simulate*","imagebuilder:Get*","imagebuilder:List*","importexport:Get*","importexport:List*","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:Get*","iot:List*","iotanalytics:Describe*","iotanalytics:Get*","iotanalytics:List*","iotanalytics:SampleChannelData","iotevents:DescribeAlarm","iotevents:DescribeAlarmModel","iotevents:DescribeDetector","iotevents:DescribeDetectorModel","iotevents:DescribeInput","iotevents:DescribeLoggingOptions","iotevents:ListAlarmModelVersions","iotevents:ListAlarmModels","iotevents:ListAlarms","iotevents:ListDetectorModelVersions","iotevents:ListDetectorModels","iotevents:ListDetectors","iotevents:ListInputs","iotevents:ListTagsForResource","iotfleethub:DescribeApplication","iotfleethub:ListApplications","iotsitewise:Describe*","iotsitewise:Get*","iotsitewise:List*","iotwireless:GetDestination","iotwireless:GetDeviceProfile","iotwireless:GetPartnerAccount","iotwireless:GetServiceEndpoint","iotwireless:GetServiceProfile","iotwireless:GetWirelessDevice","iotwireless:GetWirelessDeviceStatistics","iotwireless:GetWirelessGateway","iotwireless:GetWirelessGatewayCertificate","iotwireless:GetWirelessGatewayFirmwareInformation","iotwireless:GetWirelessGatewayStatistics","iotwireless:GetWirelessGatewayTask","iotwireless:GetWirelessGatewayTaskDefinition","iotwireless:ListDestinations","iotwireless:ListDeviceProfiles","iotwireless:ListPartnerAccounts","iotwireless:ListServiceProfiles","iotwireless:ListTagsForResource","iotwireless:ListWirelessDevices","iotwireless:ListWirelessGatewayTaskDefinitions","iotwireless:ListWirelessGateways","ivs:BatchGetChannel","ivs:GetChannel","ivs:GetPlaybackKeyPair","ivs:GetRecordingConfiguration","ivs:ListChannels","ivs:ListPlaybackKeyPairs","ivs:ListRecordingConfigurations","ivs:ListStreams","ivs:ListTagsForResource","kafka:Describe*","kafka:Get*","kafka:List*","kendra:DescribeDataSource","kendra:DescribeFaq","kendra:DescribeIndex","kendra:DescribeThesaurus","kendra:ListDataSourceSyncJobs","kendra:ListDataSources","kendra:ListFaqs","kendra:ListIndices","kendra:ListTagsForResource","kendra:ListThesauri","kendra:Query","kinesis:Describe*","kinesis:Get*","kinesis:List*","kinesisanalytics:Describe*","kinesisanalytics:Discover*","kinesisanalytics:Get*","kinesisanalytics:List*","kinesisvideo:Describe*","kinesisvideo:Get*","kinesisvideo:List*","kms:Describe*","kms:Get*","kms:List*","lambda:Get*","lambda:List*","lex:Get*","license-manager:Get*","license-manager:List*","lightsail:GetActiveNames","lightsail:GetAlarms","lightsail:GetAutoSnapshots","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetCertificates","lightsail:GetCloudFormationStackRecords","lightsail:GetContainerAPIMetadata","lightsail:GetContainerImages","lightsail:GetContainerServiceDeployments","lightsail:GetContainerServiceMetricData","lightsail:GetContainerServicePowers","lightsail:GetContainerServices","lightsail:GetDisk","lightsail:GetDiskSnapshot","lightsail:GetDiskSnapshots","lightsail:GetDisks","lightsail:GetDistributionBundles","lightsail:GetDistributionLatestCacheReset","lightsail:GetDistributionMetricData","lightsail:GetDistributions","lightsail:GetDomain","lightsail:GetDomains","lightsail:GetExportSnapshotRecords","lightsail:GetInstance","lightsail:GetInstanceMetricData","lightsail:GetInstancePortStates","lightsail:GetInstanceSnapshot","lightsail:GetInstanceSnapshots","lightsail:GetInstanceState","lightsail:GetInstances","lightsail:GetKeyPair","lightsail:GetKeyPairs","lightsail:GetLoadBalancer","lightsail:GetLoadBalancerMetricData","lightsail:GetLoadBalancerTlsCertificates","lightsail:GetLoadBalancers","lightsail:GetOperation","lightsail:GetOperations","lightsail:GetOperationsForResource","lightsail:GetRegions","lightsail:GetRelationalDatabase","lightsail:GetRelationalDatabaseBlueprints","lightsail:GetRelationalDatabaseBundles","lightsail:GetRelationalDatabaseEvents","lightsail:GetRelationalDatabaseLogEvents","lightsail:GetRelationalDatabaseLogStreams","lightsail:GetRelationalDatabaseMetricData","lightsail:GetRelationalDatabaseParameters","lightsail:GetRelationalDatabaseSnapshot","lightsail:GetRelationalDatabaseSnapshots","lightsail:GetRelationalDatabases","lightsail:GetStaticIp","lightsail:GetStaticIps","lightsail:Is*","logs:Describe*","logs:FilterLogEvents","logs:Get*","logs:ListTagsLogGroup","logs:StartQuery","logs:StopQuery","logs:TestMetricFilter","lookoutvision:DescribeDataset","lookoutvision:DescribeModel","lookoutvision:DescribeProject","lookoutvision:ListDatasetEntries","lookoutvision:ListModels","lookoutvision:ListProjects","lookoutvision:ListTagsForResource","machinelearning:Describe*","machinelearning:Get*","mediaconvert:DescribeEndpoints","mediaconvert:Get*","mediaconvert:List*","mediapackage:Describe*","mediapackage:List*","mediastore:DescribeContainer","mediastore:DescribeObject","mediastore:GetContainerPolicy","mediastore:GetCorsPolicy","mediastore:GetLifecyclePolicy","mediastore:GetMetricPolicy","mediastore:GetObject","mediastore:ListContainers","mediastore:ListItems","mediastore:ListTagsForResource","mgh:Describe*","mgh:GetHomeRegion","mgh:List*","mgn:DescribeJobLogItems","mgn:DescribeJobs","mgn:DescribeReplicationConfigurationTemplates","mgn:DescribeSourceServers","mgn:GetLaunchConfiguration","mgn:GetReplicationConfiguration","mobileanalytics:Get*","mobilehub:Describe*","mobilehub:Export*","mobilehub:Generate*","mobilehub:Get*","mobilehub:List*","mobilehub:Validate*","mobilehub:Verify*","mobiletargeting:Get*","mobiletargeting:List*","mq:Describe*","mq:List*","network-firewall:DescribeFirewall","network-firewall:DescribeFirewallPolicy","network-firewall:DescribeLoggingConfiguration","network-firewall:DescribeResourcePolicy","network-firewall:DescribeRuleGroup","network-firewall:ListFirewallPolicies","network-firewall:ListFirewalls","network-firewall:ListRuleGroups","network-firewall:ListTagsForResource","networkmanager:DescribeGlobalNetworks","networkmanager:GetConnections","networkmanager:GetCustomerGatewayAssociations","networkmanager:GetDevices","networkmanager:GetLinkAssociations","networkmanager:GetLinks","networkmanager:GetSites","networkmanager:GetTransitGatewayConnectPeerAssociations","networkmanager:GetTransitGatewayRegistrations","opsworks-cm:Describe*","opsworks-cm:List*","opsworks:Describe*","opsworks:Get*","organizations:Describe*","organizations:List*","outposts:Get*","outposts:List*","personalize:Describe*","personalize:Get*","personalize:List*","pi:DescribeDimensionKeys","pi:GetResourceMetrics","polly:Describe*","polly:Get*","polly:List*","polly:SynthesizeSpeech","qldb:DescribeJournalS3Export","qldb:DescribeLedger","qldb:GetBlock","qldb:GetDigest","qldb:GetRevision","qldb:ListJournalS3Exports","qldb:ListJournalS3ExportsForLedger","qldb:ListLedgers","qldb:ListTagsForResource","ram:Get*","ram:List*","rds:Describe*","rds:Download*","rds:List*","redshift:Describe*","redshift:GetReservedNodeExchangeOfferings","redshift:View*","rekognition:CompareFaces","rekognition:Detect*","rekognition:List*","rekognition:Search*","resource-groups:Get*","resource-groups:List*","resource-groups:Search*","robomaker:BatchDescribe*","robomaker:Describe*","robomaker:Get*","robomaker:List*","route53:Get*","route53:List*","route53:Test*","route53domains:Check*","route53domains:Get*","route53domains:List*","route53domains:View*","route53resolver:Get*","route53resolver:List*","s3:DescribeJob","s3:Get*","s3:List*","sagemaker:Describe*","sagemaker:GetSearchSuggestions","sagemaker:List*","sagemaker:Search","savingsplans:DescribeSavingsPlanRates","savingsplans:DescribeSavingsPlans","savingsplans:DescribeSavingsPlansOfferingRates","savingsplans:DescribeSavingsPlansOfferings","savingsplans:ListTagsForResource","schemas:Describe*","schemas:Get*","schemas:List*","schemas:Search*","sdb:Get*","sdb:List*","sdb:Select*","secretsmanager:Describe*","secretsmanager:GetResourcePolicy","secretsmanager:List*","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:Get*","serverlessrepo:List*","serverlessrepo:SearchApplications","servicecatalog:Describe*","servicecatalog:GetApplication","servicecatalog:GetAttributeGroup","servicecatalog:List*","servicecatalog:Scan*","servicecatalog:Search*","servicediscovery:Get*","servicediscovery:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","ses:Describe*","ses:Get*","ses:List*","shield:Describe*","shield:Get*","shield:List*","signer:DescribeSigningJob","signer:GetSigningPlatform","signer:GetSigningProfile","signer:ListProfilePermissions","signer:ListSigningJobs","signer:ListSigningPlatforms","signer:ListSigningProfiles","signer:ListTagsForResource","snowball:Describe*","snowball:Get*","snowball:List*","sns:Check*","sns:Get*","sns:List*","sqs:Get*","sqs:List*","sqs:Receive*","ssm-contacts:DescribeEngagement","ssm-contacts:DescribePage","ssm-contacts:GetContact","ssm-contacts:GetContactChannel","ssm-contacts:ListContactChannels","ssm-contacts:ListContacts","ssm-contacts:ListEngagements","ssm-contacts:ListPageReceipts","ssm-contacts:ListPagesByContact","ssm-contacts:ListPagesByEngagement","ssm-incidents:GetIncidentRecord","ssm-incidents:GetReplicationSet","ssm-incidents:GetResourcePolicies","ssm-incidents:GetResponsePlan","ssm-incidents:GetTimelineEvent","ssm-incidents:ListIncidentRecords","ssm-incidents:ListRelatedItems","ssm-incidents:ListReplicationSets","ssm-incidents:ListResponsePlans","ssm-incidents:ListTagsForResource","ssm-incidents:ListTimelineEvents","ssm:Describe*","ssm:Get*","ssm:List*","sso-directory:Describe*","sso-directory:List*","sso-directory:Search*","sso:Describe*","sso:Get*","sso:List*","sso:Search*","states:Describe*","states:GetExecutionHistory","states:List*","storagegateway:Describe*","storagegateway:List*","sts:GetAccessKeyInfo","sts:GetCallerIdentity","sts:GetSessionToken","swf:Count*","swf:Describe*","swf:Get*","swf:List*","synthetics:Describe*","synthetics:Get*","synthetics:List*","tag:Get*","transcribe:Get*","transcribe:List*","transfer:Describe*","transfer:List*","transfer:TestIdentityProvider","trustedadvisor:Describe*","waf-regional:Get*","waf-regional:List*","waf:Get*","waf:List*","wafv2:CheckCapacity","wafv2:Describe*","wafv2:Get*","wafv2:List*","workdocs:CheckAlias","workdocs:Describe*","workdocs:Get*","worklink:Describe*","worklink:List*","workmail:Describe*","workmail:Get*","workmail:List*","workmail:Search*","workspaces:Describe*","xray:BatchGet*","xray:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["a4b","access-analyzer","acm-pca","acm","amplify","apigateway","application-autoscaling","applicationinsights","appmesh","appstream","appsync","athena","auditmanager","autoscaling-plans","autoscaling","aws-portal","backup","batch","braket","budgets","cassandra","chatbot","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codeartifact","codebuild","codecommit","codedeploy","codeguru-profiler","codeguru-reviewer","codepipeline","codestar-notifications","codestar","cognito-identity","cognito-idp","cognito-sync","compute-optimizer","config","connect","dataexchange","datapipeline","datasync","dax","deepcomposer","detective","devicefarm","devops-guru","directconnect","discovery","dlm","dms","ds","dynamodb","ec2","ec2messages","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","elemental-appliances-software","es","events","firehose","fis","fms","forecast","freertos","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","groundstation","guardduty","health","iam","imagebuilder","importexport","inspector","iot","iotanalytics","iotevents","iotfleethub","iotsitewise","iotwireless","ivs","kafka","kendra","kinesis","kinesisanalytics","kinesisvideo","kms","lambda","lex","license-manager","lightsail","logs","lookoutvision","machinelearning","mediaconvert","mediapackage","mediastore","mgh","mgn","mobileanalytics","mobilehub","mobiletargeting","mq","network-firewall","networkmanager","opsworks-cm","opsworks","organizations","outposts","personalize","pi","polly","qldb","ram","rds","redshift","rekognition","resource-groups","robomaker","route53","route53domains","route53resolver","s3","sagemaker","savingsplans","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicecatalog","servicediscovery","servicequotas","ses","shield","signer","snowball","sns","sqs","ssm-contacts","ssm-incidents","ssm","sso-directory","sso","states","storagegateway","sts","swf","synthetics","tag","transcribe","transfer","trustedadvisor","waf-regional","waf","wafv2","workdocs","worklink","workmail","workspaces","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerServiceRolePolicy","PolicyName":"AWSLicenseManagerServiceRolePolicy","PolicyId":"ANPAIM7JPETWHTYNBQSZE","Path":"/aws-service-role/","Description":"AWS License Manager service default role policy","DefaultVersionId":"v4"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/license-management.marketplace.amazonaws.com/AWSServiceRoleForMarketplaceLicenseManagement"]},{"Action":["s3:GetBucketLocation","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-license-manager-service-*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:aws-license-manager-service-*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","ec2:DescribeImages","ec2:DescribeHosts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:ListInventoryEntries","ssm:GetInventory","ssm:CreateAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAWSServiceAccessForOrganization","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["license-manager:GetServiceSettings","license-manager:GetLicense*","license-manager:UpdateLicenseSpecificationsForResource","license-manager:ListUsageForLicenseConfiguration","license-manager:ListDistributedGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","s3","sns","ec2","ssm","organizations","license-manager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess","PolicyName":"AWSDirectoryServiceFullAccess","PolicyId":"ANPAINAW5ANUWTH3R4ANI","Path":"/","Description":"Provides full access to AWS Directory Service.","DefaultVersionId":"v5"},"document":[{"Action":["ds:*","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateNetworkInterface","ec2:CreateSecurityGroup","ec2:DeleteNetworkInterface","ec2:DeleteSecurityGroup","ec2:DescribeNetworkInterfaces","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:DescribeSecurityGroups","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","iam:ListRoles","organizations:ListAccountsForParent","organizations:ListRoots","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeAccount","organizations:ListOrganizationalUnitsForParent","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:SetTopicAttributes","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:DirectoryMonitoring*"]},{"Action":["organizations:EnableAWSServiceAccess","organizations:DisableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*"]}],"services":["ds","ec2","sns","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSConfigRole","PolicyName":"AWSConfigRole","PolicyId":"ANPAIQRXRDRGJUA33ELIO","Path":"/service-role/","Description":"Default policy for AWS Config service role.","DefaultVersionId":"v39"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetObject","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSSOMemberAccountAdministrator","PolicyName":"AWSSSOMemberAccountAdministrator","PolicyId":"ANPAIQYHEY7KJWXZFNDPY","Path":"/","Description":"Provides access within AWS SSO to manage AWS Organizations member accounts and cloud application","DefaultVersionId":"v2"},"document":[{"Action":["ds:DescribeDirectories","ds:AuthorizeApplication","ds:UnauthorizeApplication","ds:DescribeTrusts","iam:ListPolicies","organizations:EnableAWSServiceAccess","organizations:DescribeOrganization","organizations:DescribeAccount","organizations:ListRoots","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListParents","organizations:ListChildren","organizations:ListOrganizationalUnitsForParent","sso:*","sso-directory:DescribeDirectory","ds:CreateAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ds","iam","organizations","sso","sso-directory"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess","PolicyName":"AmazonGuardDutyReadOnlyAccess","PolicyId":"ANPAIVMCEDV336RWUSNHG","Path":"/","Description":"Provides read only access to Amazon GuardDuty resources","DefaultVersionId":"v3"},"document":[{"Action":["guardduty:Describe*","guardduty:Get*","guardduty:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListDelegatedAdministrators","organizations:ListAWSServiceAccessForOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["guardduty","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/SecurityAudit","PolicyName":"SecurityAudit","PolicyId":"ANPAIX2T3QCXHR2OGGCTO","Path":"/","Description":"The security audit template grants access to read security configuration metadata. It is useful for software that audits the configuration of an AWS account.","DefaultVersionId":"v35"},"document":[{"Action":["access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListTagsForResource","acm-pca:ListPermissions","acm:Describe*","acm:List*","application-autoscaling:Describe*","appmesh:Describe*","appmesh:List*","appsync:List*","athena:GetWorkGroup","athena:List*","autoscaling-plans:DescribeScalingPlans","autoscaling:Describe*","batch:DescribeComputeEnvironments","batch:DescribeJobDefinitions","chime:List*","cloud9:Describe*","cloud9:ListEnvironments","clouddirectory:ListDirectories","cloudformation:DescribeStack*","cloudformation:GetStackPolicy","cloudformation:GetTemplate","cloudformation:ListStack*","cloudfront:Get*","cloudfront:List*","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudhsm:ListLunaClients","cloudsearch:DescribeDomainEndpointOptions","cloudsearch:DescribeDomains","cloudsearch:DescribeServiceAccessPolicies","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:ListTagsForResource","codebuild:ListProjects","codecommit:BatchGetRepositories","codecommit:GetBranch","codecommit:GetObjectIdentifier","codecommit:GetRepository","codecommit:GetRepositoryTriggers","codecommit:List*","codedeploy:Batch*","codedeploy:Get*","codedeploy:List*","codepipeline:GetJobDetails","codepipeline:GetPipeline","codepipeline:GetPipelineExecution","codepipeline:GetPipelineState","codepipeline:ListPipelines","codestar:Describe*","codestar:List*","cognito-identity:ListIdentityPools","cognito-idp:DescribeIdentityProvider","cognito-idp:DescribeResourceServer","cognito-idp:DescribeRiskConfiguration","cognito-idp:DescribeUserImportJob","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:DescribeUserPoolDomain","cognito-idp:ListDevices","cognito-idp:ListGroups","cognito-idp:ListIdentityProviders","cognito-idp:ListResourceServers","cognito-idp:ListTagsForResource","cognito-idp:ListUserImportJobs","cognito-idp:ListUserPoolClients","cognito-idp:ListUserPools","cognito-idp:ListUsers","cognito-idp:ListUsersInGroup","cognito-sync:Describe*","cognito-sync:List*","comprehend:Describe*","comprehend:List*","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:EvaluateExpression","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","datapipeline:ValidatePipelineDefinition","datasync:Describe*","datasync:List*","dax:Describe*","dax:ListTags","detective:GetGraphIngestState","detective:ListGraphs","detective:ListMembers","directconnect:Describe*","dms:Describe*","dms:ListTagsForResource","ds:DescribeDirectories","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:DescribeTransitGatewayAttachments","ec2:DescribeTransitGatewayMulticastDomains","ec2:DescribeTransitGatewayPeeringAttachments","ec2:DescribeTransitGatewayRouteTables","ec2:DescribeTransitGatewayVpcAttachments","ec2:DescribeTransitGateways","ec2:GetManagedPrefixListAssociations","ec2:GetManagedPrefixListEntries","ec2:GetTransitGatewayAttachmentPropagations","ec2:GetTransitGatewayMulticastDomainAssociations","ec2:GetTransitGatewayPrefixListReferences","ec2:GetTransitGatewayRouteTableAssociations","ec2:GetTransitGatewayRouteTablePropagations","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr:DescribeImageScanFindings","ecr:DescribeImages","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListImages","ecr:ListTagsForResource","ecs:Describe*","ecs:List*","eks:DescribeCluster","eks:DescribeNodeGroup","eks:ListClusters","eks:ListNodeGroups","elasticache:Describe*","elasticache:ListTagsForResource","elasticbeanstalk:Describe*","elasticbeanstalk:DescribeApplications","elasticbeanstalk:ListTagsForResource","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeMountTargets","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:ListClusters","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","es:Describe*","es:ListDomainNames","es:ListElasticsearchInstanceTypeDetails","es:ListElasticsearchVersions","es:ListTags","events:Describe*","events:List*","events:TestEventPattern","firehose:Describe*","firehose:List*","fms:ListComplianceStatus","fms:ListPolicies","fsx:Describe*","fsx:List*","gamelift:ListBuilds","gamelift:ListFleets","glacier:DescribeVault","glacier:GetVaultAccessPolicy","glacier:ListVaults","globalaccelerator:Describe*","globalaccelerator:List*","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabases","glue:GetDevEndpoints","glue:GetJobs","greengrass:List*","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","iam:SimulateCustomPolicy","iam:SimulatePrincipalPolicy","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:GetPolicy","iot:GetPolicyVersion","iot:List*","kinesis:DescribeLimits","kinesis:DescribeStream","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kinesisanalytics:ListApplications","kms:Describe*","kms:Get*","kms:List*","lambda:GetAccountSettings","lambda:GetFunctionConfiguration","lambda:GetFunctionEventInvokeConfig","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:List*","license-manager:List*","lightsail:GetInstances","lightsail:GetLoadBalancers","logs:Describe*","logs:ListTagsLogGroup","machinelearning:DescribeMLModels","mediaconnect:Describe*","mediaconnect:List*","mediastore:GetContainerPolicy","mediastore:ListContainers","mq:DescribeBroker","mq:DescribeBrokerEngineTypes","mq:DescribeBrokerInstanceOptions","mq:DescribeConfiguration","mq:DescribeConfigurationRevision","mq:DescribeUser","mq:ListBrokers","mq:ListConfigurationRevisions","mq:ListConfigurations","mq:ListTags","mq:ListUsers","network-firewall:ListFirewalls","opsworks-cm:DescribeServers","opsworks:DescribeStacks","organizations:Describe*","organizations:List*","quicksight:Describe*","quicksight:List*","ram:List*","rds:Describe*","rds:DownloadDBLogFilePortion","rds:ListTagsForResource","redshift:Describe*","rekognition:Describe*","rekognition:List*","robomaker:Describe*","robomaker:List*","route53:Get*","route53:List*","route53domains:GetDomainDetail","route53domains:GetOperationDetail","route53domains:ListDomains","route53domains:ListOperations","route53domains:ListTagsForDomain","route53resolver:Get*","route53resolver:List*","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetAnalyticsConfiguration","s3:GetBucket*","s3:GetEncryptionConfiguration","s3:GetInventoryConfiguration","s3:GetLifecycleConfiguration","s3:GetMetricsConfiguration","s3:GetObjectAcl","s3:GetObjectVersionAcl","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","sagemaker:Describe*","sagemaker:List*","schemas:DescribeCodeBinding","schemas:DescribeDiscoverer","schemas:DescribeRegistry","schemas:DescribeSchema","schemas:ListDiscoverers","schemas:ListRegistries","schemas:ListSchemaVersions","schemas:ListSchemas","schemas:ListTagsForResource","sdb:DomainMetadata","sdb:ListDomains","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:ListSecrets","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:GetApplicationPolicy","serverlessrepo:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","servicequotas:ListTagsForResource","ses:GetIdentityDkimAttributes","ses:GetIdentityPolicies","ses:GetIdentityVerificationAttributes","ses:ListIdentities","ses:ListIdentityPolicies","ses:ListVerifiedEmailAddresses","shield:Describe*","shield:List*","snowball:ListClusters","snowball:ListJobs","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListDeadLetterSourceQueues","sqs:ListQueueTags","sqs:ListQueues","ssm:Describe*","ssm:GetAutomationExecution","ssm:ListAssociationVersions","ssm:ListAssociations","ssm:ListCommands","ssm:ListComplianceItems","ssm:ListComplianceSummaries","ssm:ListDocumentMetadataHistory","ssm:ListDocumentVersions","ssm:ListDocuments","ssm:ListInventoryEntries","ssm:ListOpsMetadata","ssm:ListResourceComplianceSummaries","ssm:ListResourceDataSync","ssm:ListTagsForResource","sso:DescribePermissionsPolicies","sso:List*","states:ListStateMachines","storagegateway:DescribeBandwidthRateLimit","storagegateway:DescribeCache","storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeGatewayInformation","storagegateway:DescribeMaintenanceStartTime","storagegateway:DescribeNFSFileShares","storagegateway:DescribeSnapshotSchedule","storagegateway:DescribeStorediSCSIVolumes","storagegateway:DescribeTapeArchives","storagegateway:DescribeTapeRecoveryPoints","storagegateway:DescribeTapes","storagegateway:DescribeUploadBuffer","storagegateway:DescribeVTLDevices","storagegateway:DescribeWorkingStorage","storagegateway:List*","support:DescribeTrustedAdvisorCheckRefreshStatuses","support:DescribeTrustedAdvisorCheckResult","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorChecks","tag:GetResources","tag:GetTagKeys","transfer:Describe*","transfer:List*","translate:List*","trustedadvisor:Describe*","waf-regional:GetWebACL","waf-regional:ListResourcesForWebACL","waf-regional:ListTagsForResource","waf-regional:ListWebACLs","waf:GetWebACL","waf:ListTagsForResource","waf:ListWebACLs","wafv2:GetWebACL","wafv2:ListAvailableManagedRuleGroups","wafv2:ListIPSets","wafv2:ListLoggingConfigurations","wafv2:ListRegexPatternSets","wafv2:ListResourcesForWebACL","wafv2:ListRuleGroups","wafv2:ListTagsForResource","wafv2:ListWebACLs","workdocs:DescribeResourcePermissions","workspaces:Describe*","xray:GetEncryptionConfig","xray:GetGroup","xray:GetGroups","xray:GetSamplingRules","xray:GetSamplingTargets","xray:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/apis","arn:aws:apigateway:*::/apis/*/routes","arn:aws:apigateway:*::/apis/*/stages","arn:aws:apigateway:*::/apis/*/stages/*","arn:aws:apigateway:*::/clientcertificates/*","arn:aws:apigateway:*::/restapis","arn:aws:apigateway:*::/restapis/*/authorizers","arn:aws:apigateway:*::/restapis/*/authorizers/*","arn:aws:apigateway:*::/restapis/*/documentation/versions","arn:aws:apigateway:*::/restapis/*/resources","arn:aws:apigateway:*::/restapis/*/resources/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*","arn:aws:apigateway:*::/restapis/*/stages","arn:aws:apigateway:*::/restapis/*/stages/*","arn:aws:apigateway:*::/tags/*","arn:aws:apigateway:*::/vpclinks"]}],"services":["access-analyzer","acm-pca","acm","application-autoscaling","appmesh","appsync","athena","autoscaling-plans","autoscaling","batch","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-identity","cognito-idp","cognito-sync","comprehend","config","datapipeline","datasync","dax","detective","directconnect","dms","ds","dynamodb","ec2","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","events","firehose","fms","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","guardduty","iam","inspector","iot","kinesis","kinesisanalytics","kms","lambda","license-manager","lightsail","logs","machinelearning","mediaconnect","mediastore","mq","network-firewall","opsworks-cm","opsworks","organizations","quicksight","ram","rds","redshift","rekognition","robomaker","route53","route53domains","route53resolver","s3","sagemaker","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicequotas","ses","shield","snowball","sns","sqs","ssm","sso","states","storagegateway","support","tag","transfer","translate","trustedadvisor","waf-regional","waf","wafv2","workdocs","workspaces","xray","apigateway"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy","PolicyName":"AmazonSSMServiceRolePolicy","PolicyId":"ANPAIXJ26NUGBA3TCV7EC","Path":"/aws-service-role/","Description":"Provides access to AWS Resources managed or used by Amazon SSM","DefaultVersionId":"v13"},"document":[{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation","ssm:ListCommandInvocations","ssm:ListCommands","ssm:SendCommand","ssm:GetAutomationExecution","ssm:GetParameters","ssm:StartAutomationExecution","ssm:ListTagsForResource","ssm:GetCalendarState"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:UpdateServiceSetting","ssm:GetServiceSetting"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:servicesetting/ssm/opsitem/*","arn:aws:ssm:*:*:servicesetting/ssm/opsdata/*"]},{"Action":["ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:SSM*","arn:aws:lambda:*:*:function:*:SSM*"]},{"Action":["states:DescribeExecution","states:StartExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:stateMachine:SSM*","arn:aws:states:*:*:execution:SSM*"]},{"Action":["resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroupQuery"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:SelectResourceConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEnrollmentStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["support:DescribeTrustedAdvisorChecks","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorCheckResult","support:DescribeCases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeComplianceByConfigRule","config:DescribeComplianceByResource","config:DescribeRemediationConfigurations","config:DescribeConfigurationRecorders"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackSets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackInstances","cloudformation:DescribeStackSetOperation","cloudformation:DeleteStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"]},{"Action":["cloudformation:DeleteStackInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*","arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*","arn:aws:cloudformation:*:*:type/resource/*"]},{"Action":["events:PutRule","events:PutTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:RemoveTargets","events:DeleteRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/SSMExplorerManagedRule"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["securityhub:DescribeHub"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","ec2","lambda","states","resource-groups","cloudformation","tag","config","compute-optimizer","support","iam","organizations","events","securityhub"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSFMAdminReadOnlyAccess","PolicyName":"AWSFMAdminReadOnlyAccess","PolicyId":"ANPAJA3UKVVBN62QFIKLW","Path":"/","Description":"Read only access for AWS FM Administrator that allows monitoring AWS FM operations","DefaultVersionId":"v1"},"document":[{"Action":["fms:Get*","fms:List*","waf:Get*","waf:List*","waf-regional:Get*","waf-regional:List*","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["fms","waf","waf-regional","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSSOReadOnly","PolicyName":"AWSSSOReadOnly","PolicyId":"ANPAJBSMEEZXFDMKMY43I","Path":"/","Description":"Provides read only access to AWS SSO configurations.","DefaultVersionId":"v6"},"document":[{"Action":["ds:DescribeDirectories","ds:DescribeTrusts","iam:ListPolicies","organizations:DescribeOrganization","organizations:DescribeAccount","organizations:ListParents","organizations:ListChildren","organizations:ListAccounts","organizations:ListRoots","organizations:ListAccountsForParent","organizations:ListOrganizationalUnitsForParent","sso:Describe*","sso:Get*","sso:List*","sso:Search*","sso-directory:DescribeDirectory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ds","iam","organizations","sso","sso-directory"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSFMAdminFullAccess","PolicyName":"AWSFMAdminFullAccess","PolicyId":"ANPAJLAGM5X6WSNPF4EAQ","Path":"/","Description":"Full access for AWS FM Administrator","DefaultVersionId":"v1"},"document":[{"Action":["fms:*","waf:*","waf-regional:*","elasticloadbalancing:SetWebACL","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["fms","waf","waf-regional","elasticloadbalancing","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSArtifactAccountSync","PolicyName":"AWSArtifactAccountSync","PolicyId":"ANPAJMVPXRWZJZWDTYDNC","Path":"/service-role/","Description":"Allows AWS Artifact read-only access to operations in AWS Organizations.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:ListAccounts","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonMacieServiceRolePolicy","PolicyName":"AmazonMacieServiceRolePolicy","PolicyId":"ANPAJPLHONRH2HP2H6TNQ","Path":"/aws-service-role/","Description":"Service linked role for Amazon Macie","DefaultVersionId":"v5"},"document":[{"Action":["cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","iam:ListAccountAliases","organizations:DescribeAccount","organizations:ListAccounts","s3:GetAccountPublicAccessBlock","s3:ListAllMyBuckets","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketPolicy","s3:GetBucketPolicyStatus","s3:GetBucketPublicAccessBlock","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListBucket","s3:GetObject","s3:GetObjectAcl","s3:GetObjectTagging"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:CreateTrail","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudtrail:UpdateTrail","cloudtrail:DeleteTrail","cloudtrail:PutEventSelectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudtrail:*:*:trail/AWSMacieTrail-DO-NOT-EDIT"]},{"Action":["s3:CreateBucket","s3:DeleteBucket","s3:DeleteBucketPolicy","s3:DeleteBucketWebsite","s3:DeleteObject","s3:DeleteObjectTagging","s3:DeleteObjectVersion","s3:DeleteObjectVersionTagging","s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awsmacie-*","arn:aws:s3:::awsmacietrail-*","arn:aws:s3:::*-awsmacietrail-*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/macie/*"]},{"Action":["logs:CreateLogStream","logs:PutLogEvents","logs:DescribeLogStreams"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/macie/*:log-stream:*"]}],"services":["cloudtrail","iam","organizations","s3","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSecurityHubServiceRolePolicy","PolicyName":"AWSSecurityHubServiceRolePolicy","PolicyId":"ANPAJQPCESDDYDLLSOGYO","Path":"/aws-service-role/","Description":"A service-linked role required for AWS Security Hub to access your resources.","DefaultVersionId":"v7"},"document":[{"Action":["cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:GetEventSelectors","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","logs:DescribeMetricFilters","sns:ListSubscriptionsByTopic","config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus","config:DescribeConfigRules","config:BatchGetResourceConfig","config:SelectResourceConfig","iam:GenerateCredentialReport","iam:GetCredentialReport","organizations:ListAccounts","organizations:DescribeAccount","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:PutConfigRule","config:DeleteConfigRule","config:GetComplianceDetailsByConfigRule","config:DescribeConfigRuleEvaluationStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"]}],"services":["cloudtrail","cloudwatch","logs","sns","config","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSResourceAccessManagerServiceRolePolicy","PolicyName":"AWSResourceAccessManagerServiceRolePolicy","PolicyId":"ANPAJU667A3V5UAXC4YNE","Path":"/aws-service-role/","Description":"Policy containing Read-only AWS Resource Access Manager access to customers' Organizations structure. It also contains IAM permissions to self-delete the role.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListChildren","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/ram.amazonaws.com/*"]}],"services":["organizations","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy","PolicyName":"AWSConfigServiceRolePolicy","PolicyId":"ANPAJUCWFHNZER665LLQQ","Path":"/aws-service-role/","Description":"Allows Config to call AWS services and collect resource configurations on your behalf.","DefaultVersionId":"v25"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/CloudTrailServiceRolePolicy","PolicyName":"CloudTrailServiceRolePolicy","PolicyId":"ANPAJXQJ45EGU6U7NQBW4","Path":"/aws-service-role/","Description":"Permission policy for CloudTrail ServiceLinkedRole","DefaultVersionId":"v1"},"document":[{"Action":["cloudtrail:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAccounts","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudtrail","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess","PolicyName":"AWSOrganizationsReadOnlyAccess","PolicyId":"ANPAJY5RQATUV77PEPVOM","Path":"/","Description":"Provides read-only access to AWS Organizations.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:Describe*","organizations:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/PowerUserAccess","PolicyName":"PowerUserAccess","PolicyId":"ANPAJYRXTHIB4FOVS3ZXS","Path":"/","Description":"Provides full access to AWS services and resources, but does not allow management of Users and groups.","DefaultVersionId":"v4"},"document":[{"Action":null,"Effect":"Allow","NotAction":["iam:*","organizations:*","account:*"],"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole","iam:DeleteServiceLinkedRole","iam:ListRoles","organizations:DescribeOrganization","account:ListRegions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations","account"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSOrganizationsFullAccess","PolicyName":"AWSOrganizationsFullAccess","PolicyId":"ANPAJZXBNRCJKNLQHSB5M","Path":"/","Description":"Provides full access to AWS Organizations.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/WAFV2LoggingServiceRolePolicy","PolicyName":"WAFV2LoggingServiceRolePolicy","PolicyId":"ANPAZKAPJZG4AHQ3ASNCX","Path":"/aws-service-role/","Description":"This policy creates a service-linked role that allows AWS WAF to write logs to Amazon Kinesis Data Firehose.","DefaultVersionId":"v2"},"document":[{"Action":["firehose:PutRecord","firehose:PutRecordBatch"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["firehose","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBudgetsActionsWithAWSResourceControlAccess","PolicyName":"AWSBudgetsActionsWithAWSResourceControlAccess","PolicyId":"ANPAZKAPJZG4AHTKKGHHS","Path":"/","Description":"Provides full access to AWS Budgets Actions including using Budgets Actions to control states of running AWS resources via AWS Management Console","DefaultVersionId":"v1"},"document":[{"Action":["budgets:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-portal:ViewBilling"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-portal:ModifyBilling","ec2:DescribeInstances","iam:ListGroups","iam:ListPolicies","iam:ListRoles","iam:ListUsers","organizations:ListAccounts","organizations:ListOrganizationalUnitsForParent","organizations:ListPolicies","organizations:ListRoots","rds:DescribeDBInstances","sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["budgets","aws-portal","iam","ec2","organizations","rds","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSystemsManagerAccountDiscoveryServicePolicy","PolicyName":"AWSSystemsManagerAccountDiscoveryServicePolicy","PolicyId":"ANPAZKAPJZG4BPDSHIWK5","Path":"/aws-service-role/","Description":"Grants AWS Systems Manager (SSM) permission to discover AWS account information.","DefaultVersionId":"v2"},"document":[{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAccounts","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListParents","organizations:ListDelegatedServicesForAccount","organizations:ListDelegatedAdministrators"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSAuditManagerServiceRolePolicy","PolicyName":"AWSAuditManagerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4C5N52UWST","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by AWS Audit Manager","DefaultVersionId":"v1"},"document":[{"Action":["license-manager:ListLicenseConfigurations","license-manager:ListAssociationsForLicenseConfiguration","license-manager:ListUsageForLicenseConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GenerateCredentialReport","iam:GetAccountSummary","iam:ListPolicies","iam:GetAccountPasswordPolicy","iam:ListUsers","iam:ListUserPolicies","iam:ListRoles","iam:ListRolePolicies","iam:ListGroups","iam:ListGroupPolicies","iam:ListEntitiesForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","ec2:DescribeFlowLogs","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","ec2:DescribeNetworkAcls","ec2:DescribeRouteTables","ec2:DescribeSnapshots","ec2:DescribeVpcEndpoints"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:DescribeTrails"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeDeliveryChannels","config:ListDiscoveredResources","config:DescribeConfigRules"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["securityhub:DescribeStandards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetLifecycleConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["waf:ListActivatedRulesInRuleGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["guardduty:ListDetectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53:GetQueryLoggingConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cognito-idp:DescribeUserPool"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]}],"services":["license-manager","iam","ec2","cloudtrail","config","securityhub","kms","cloudwatch","s3","events","waf","guardduty","route53","organizations","cognito-idp","elasticfilesystem"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AccessAnalyzerServiceRolePolicy","PolicyName":"AccessAnalyzerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4CAIXDDRI2","Path":"/aws-service-role/","Description":"Allow Access Analyzer to analyze resource metadata","DefaultVersionId":"v5"},"document":[{"Action":["ec2:DescribeAddresses","ec2:DescribeByoipCidrs","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:GetKeyPolicy","kms:ListGrants","kms:ListKeyPolicies","kms:ListKeys","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListLayers","lambda:ListLayerVersions","lambda:ListVersionsByFunction","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListDelegatedAdministrators","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetBucketPolicyStatus","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:ListAccessPoints","s3:ListAllMyBuckets","sns:GetTopicAttributes","sns:ListTopics","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecrets","sqs:GetQueueAttributes","sqs:ListQueues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","kms","lambda","organizations","s3","sns","secretsmanager","sqs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServiceQuotasFullAccess","PolicyName":"ServiceQuotasFullAccess","PolicyId":"ANPAZKAPJZG4CGHQWENW3","Path":"/","Description":"Provides full access to Service Quotas","DefaultVersionId":"v4"},"document":[{"Action":["autoscaling:DescribeAccountLimits","cloudformation:DescribeAccountLimits","cloudwatch:DescribeAlarmsForMetric","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm","dynamodb:DescribeLimits","elasticloadbalancing:DescribeAccountLimits","iam:GetAccountSummary","kinesis:DescribeLimits","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","rds:DescribeAccountAttributes","route53:GetAccountLimit","tag:GetTagKeys","tag:GetTagValues","servicequotas:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudwatch","dynamodb","elasticloadbalancing","iam","kinesis","organizations","rds","route53","tag","servicequotas"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSMarketplaceLicenseManagementServiceRolePolicy","PolicyName":"AWSMarketplaceLicenseManagementServiceRolePolicy","PolicyId":"ANPAZKAPJZG4DTCV6FSO7","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by AWS Marketplace for license management.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:DescribeOrganization","license-manager:ListReceivedGrants","license-manager:ListDistributedGrants","license-manager:GetGrant","license-manager:CreateGrant","license-manager:CreateGrantVersion","license-manager:DeleteGrant","license-manager:AcceptGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations","license-manager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupOrganizationAdminAccess","PolicyName":"AWSBackupOrganizationAdminAccess","PolicyId":"ANPAZKAPJZG4E5BC3XLFS","Path":"/","Description":"This policy is for backup administators who use cross-account backup management to manage backups for the organization.","DefaultVersionId":"v2"},"document":[{"Action":["organizations:DisableAWSServiceAccess","organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:AttachPolicy","organizations:ListPoliciesForTarget","organizations:ListTargetsForPolicy","organizations:DetachPolicy","organizations:DisablePolicyType","organizations:DescribePolicy","organizations:DescribeEffectivePolicy","organizations:ListPolicies","organizations:EnablePolicyType","organizations:CreatePolicy","organizations:UpdatePolicy","organizations:DeletePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListRoots","organizations:ListParents","organizations:ListAWSServiceAccessForOrganization","organizations:ListAccountsForParent","organizations:ListAccounts","organizations:DescribeOrganization","organizations:ListOrganizationalUnitsForParent","organizations:ListChildren","organizations:DescribeAccount","organizations:DescribeOrganizationalUnit"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess","PolicyName":"AWSAuditManagerAdministratorAccess","PolicyId":"ANPAZKAPJZG4EBAFCQQJX","Path":"/","Description":"Provides administrative access to enable or disable AWS Audit Manager, update settings, and manage assessments, controls, and frameworks","DefaultVersionId":"v1"},"document":[{"Action":["auditmanager:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAccountsForParent","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:ListParents","organizations:ListChildren"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:RegisterDelegatedAdministrator","organizations:DeregisterDelegatedAdministrator","organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetUser","iam:ListUsers","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:UpdateRoleDescription","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["auditmanager","organizations","iam","s3","kms","sns","events","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/Health_OrganizationsServiceRolePolicy","PolicyName":"Health_OrganizationsServiceRolePolicy","PolicyId":"ANPAZKAPJZG4EZKGOJYHQ","Path":"/aws-service-role/","Description":"AWS Health policy to enable Organizational View feature","DefaultVersionId":"v2"},"document":[{"Action":["organizations:ListAccounts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ComputeOptimizerReadOnlyAccess","PolicyName":"ComputeOptimizerReadOnlyAccess","PolicyId":"ANPAZKAPJZG4FI27MEARJ","Path":"/","Description":"Provides read only access to ComputeOptimizer.","DefaultVersionId":"v3"},"document":[{"Action":["compute-optimizer:DescribeRecommendationExportJobs","compute-optimizer:GetEnrollmentStatus","compute-optimizer:GetRecommendationSummaries","compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEC2RecommendationProjectedMetrics","compute-optimizer:GetAutoScalingGroupRecommendations","compute-optimizer:GetEBSVolumeRecommendations","compute-optimizer:GetLambdaFunctionRecommendations","ec2:DescribeInstances","ec2:DescribeVolumes","autoscaling:DescribeAutoScalingGroups","lambda:ListFunctions","lambda:ListProvisionedConcurrencyConfigs","cloudwatch:GetMetricData","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeAccount"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["compute-optimizer","ec2","autoscaling","lambda","cloudwatch","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSMarketplaceProcurementSystemAdminFullAccess","PolicyName":"AWSMarketplaceProcurementSystemAdminFullAccess","PolicyId":"ANPAZKAPJZG4FIYNR3TC4","Path":"/","Description":"Provides full access to all administrative actions for an AWS Marketplace eProcurement integration.","DefaultVersionId":"v1"},"document":[{"Action":["aws-marketplace:PutProcurementSystemConfiguration","aws-marketplace:DescribeProcurementSystemConfiguration","organizations:Describe*","organizations:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["aws-marketplace","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMAccessAdvisorReadOnly","PolicyName":"IAMAccessAdvisorReadOnly","PolicyId":"ANPAZKAPJZG4FNDX5PG6Z","Path":"/","Description":"This policy grants access to read all access information provided by IAM access advisor such as service last accessed information.","DefaultVersionId":"v1"},"document":[{"Action":["iam:ListRoles","iam:ListUsers","iam:ListGroups","iam:ListPolicies","iam:ListPoliciesGrantingServiceAccess","iam:GenerateServiceLastAccessedDetails","iam:GenerateOrganizationsAccessReport","iam:GenerateCredentialReport","iam:GetRole","iam:GetPolicy","iam:GetServiceLastAccessedDetails","iam:GetServiceLastAccessedDetailsWithEntities","iam:GetOrganizationsAccessReport","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribePolicy","organizations:ListChildren","organizations:ListParents","organizations:ListPoliciesForTarget","organizations:ListRoots","organizations:ListPolicies","organizations:ListTargetsForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/ComputeOptimizerServiceRolePolicy","PolicyName":"ComputeOptimizerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4HPOQZNRNJ","Path":"/aws-service-role/","Description":"Allows ComputeOptimizer to call AWS services and collect workload details on your behalf.","DefaultVersionId":"v1"},"document":[{"Action":["compute-optimizer:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeOrganization","organizations:ListAccounts","organizations:ListAWSServiceAccessForOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["compute-optimizer","organizations","cloudwatch"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLakeFormationCrossAccountManager","PolicyName":"AWSLakeFormationCrossAccountManager","PolicyId":"ANPAZKAPJZG4HPT7Y7QL3","Path":"/","Description":"Provides cross account access to Glue resources via Lake Formation. Also grants read access to other required services such as organizations and resource access manager","DefaultVersionId":"v3"},"document":[{"Action":["ram:CreateResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ram:UpdateResourceShare","ram:DeleteResourceShare"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:PutResourcePolicy","glue:DeleteResourcePolicy","organizations:DescribeOrganization","organizations:DescribeAccount","ram:Get*","ram:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListRoots","organizations:ListAccountsForParent","organizations:ListOrganizationalUnitsForParent"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ram","glue","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/S3StorageLensServiceRolePolicy","PolicyName":"S3StorageLensServiceRolePolicy","PolicyId":"ANPAZKAPJZG4IHOVJESMS","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by S3 Storage Lens","DefaultVersionId":"v1"},"document":[{"Action":["organizations:DescribeOrganization","organizations:ListAccounts","organizations:ListAWSServiceAccessForOrganization","organizations:ListDelegatedAdministrators"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDetectiveFullAccess","PolicyName":"AmazonDetectiveFullAccess","PolicyId":"ANPAZKAPJZG4IRLX3QVOO","Path":"/","Description":" Provides full access to Amazon Detective service and scoped access to the console UI dependencies","DefaultVersionId":"v2"},"document":[{"Action":["detective:*","organizations:DescribeOrganization","organizations:ListAccounts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["guardduty:ArchiveFindings"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:guardduty:*:*:detector/*"]},{"Action":["guardduty:ListDetectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["detective","organizations","guardduty"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServiceQuotasReadOnlyAccess","PolicyName":"ServiceQuotasReadOnlyAccess","PolicyId":"ANPAZKAPJZG4ITU2HGGUJ","Path":"/","Description":"Provides read only access to Service Quotas","DefaultVersionId":"v2"},"document":[{"Action":["autoscaling:DescribeAccountLimits","cloudformation:DescribeAccountLimits","cloudwatch:DescribeAlarmsForMetric","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","dynamodb:DescribeLimits","elasticloadbalancing:DescribeAccountLimits","iam:GetAccountSummary","kinesis:DescribeLimits","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","rds:DescribeAccountAttributes","route53:GetAccountLimit","tag:GetTagKeys","tag:GetTagValues","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServices","servicequotas:ListServiceQuotas","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudwatch","dynamodb","elasticloadbalancing","iam","kinesis","organizations","rds","route53","tag","servicequotas"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/CloudFormationStackSetsOrgAdminServiceRolePolicy","PolicyName":"CloudFormationStackSetsOrgAdminServiceRolePolicy","PolicyId":"ANPAZKAPJZG4JEQ3CDBDV","Path":"/aws-service-role/","Description":"Service Role for CloudFormation StackSets (Organization Master Account)","DefaultVersionId":"v1"},"document":[{"Action":["organizations:List*","organizations:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sts:AssumeRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/stacksets-exec-*"]}],"services":["organizations","sts"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupOperatorAccess","PolicyName":"AWSBackupOperatorAccess","PolicyId":"ANPAZKAPJZG4KHXVYMY4O","Path":"/","Description":"This policy grants users permissions to assign AWS resources to backup plans, create on-demand backups, and restore backups. This policy does not allow the user to create or edit backup plans or to delete scheduled backups after they are created.","DefaultVersionId":"v7"},"document":[{"Action":["backup:Get*","backup:List*","backup:Describe*","backup:CreateBackupSelection","backup:DeleteBackupSelection","backup:GetRecoveryPointRestoreMetadata","backup:StartBackupJob","backup:StartRestoreJob","backup:StartCopyJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBSnapshots","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSSecurityHubOrganizationsAccess","PolicyName":"AWSSecurityHubOrganizationsAccess","PolicyId":"ANPAZKAPJZG4KVIUTRVOZ","Path":"/","Description":"Grants permission to enable and manage AWS Security Hub within an organization. Includes enabling the service across the organization, and determining the delegated administrator account for the service.","DefaultVersionId":"v1"},"document":[{"Action":["organizations:ListAccounts","organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:RegisterDelegatedAdministrator","organizations:DeregisterDelegatedAdministrator"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:organizations::*:account/o-*/*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigMultiAccountSetupPolicy","PolicyName":"AWSConfigMultiAccountSetupPolicy","PolicyId":"ANPAZKAPJZG4L5NAGNGTD","Path":"/aws-service-role/","Description":"Allows Config to call AWS services and deploy config resources across organization","DefaultVersionId":"v4"},"document":[{"Action":["config:PutConfigRule","config:DeleteConfigRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:config-rule/aws-service-rule/config-multiaccountsetup.amazonaws.com/*"]},{"Action":["config:DescribeConfigurationRecorders"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAccounts","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","organizations:DescribeAccount"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:PutConformancePack","config:DeleteConformancePack","config:DescribeConformancePackStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:config:*:*:conformance-pack/aws-service-conformance-pack/config-multiaccountsetup.amazonaws.com/*"]},{"Action":["iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["config","organizations","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupFullAccess","PolicyName":"AWSBackupFullAccess","PolicyId":"ANPAZKAPJZG4LL52EIPJX","Path":"/","Description":"This policy is for backup administrators, granting full access to AWS Backup operations, including creating or editing backup plans, assigning AWS resources to backup plans, deleting backups, and restoring backups.","DefaultVersionId":"v7"},"document":[{"Action":["backup:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["backup-storage:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:describeDBClusterSnapshots","rds:describeDBClusters","rds:describeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DeleteDBSnapshot","rds:DeleteDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSnapshot","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:GenerateDataKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","backup-storage","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","kms","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/IAMAccessAnalyzerFullAccess","PolicyName":"IAMAccessAnalyzerFullAccess","PolicyId":"ANPAZKAPJZG4MAZGHIYZN","Path":"/","Description":"Provides full access to IAM Access Analyzer","DefaultVersionId":"v1"},"document":[{"Action":["access-analyzer:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListDelegatedAdministrators","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","iam","organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMonitronFullAccess","PolicyName":"AmazonMonitronFullAccess","PolicyId":"ANPAZKAPJZG4MHDVZEITQ","Path":"/","Description":"Provides full access to manage Amazon Monitron","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["monitron:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","ds:DescribeDirectories","ds:DescribeTrusts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","monitron","kms","organizations","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSControlTowerServiceRolePolicy","PolicyName":"AWSControlTowerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4MW35THVLF","Path":"/service-role/","Description":"Provides access to AWS Resources managed or used by AWS Control Tower ","DefaultVersionId":"v7"},"document":[{"Action":["cloudformation:CreateStack","cloudformation:CreateStackInstances","cloudformation:CreateStackSet","cloudformation:DeleteStack","cloudformation:DeleteStackInstances","cloudformation:DeleteStackSet","cloudformation:DescribeStackInstance","cloudformation:DescribeStacks","cloudformation:DescribeStackSet","cloudformation:DescribeStackSetOperation","cloudformation:ListStackInstances","cloudformation:UpdateStack","cloudformation:UpdateStackInstances","cloudformation:UpdateStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:type/resource/AWS-IAM-Role"]},{"Action":["cloudformation:CreateStack","cloudformation:CreateStackInstances","cloudformation:CreateStackSet","cloudformation:DeleteStack","cloudformation:DeleteStackInstances","cloudformation:DeleteStackSet","cloudformation:DescribeStackInstance","cloudformation:DescribeStacks","cloudformation:DescribeStackSet","cloudformation:DescribeStackSetOperation","cloudformation:GetTemplate","cloudformation:ListStackInstances","cloudformation:UpdateStack","cloudformation:UpdateStackInstances","cloudformation:UpdateStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/AWSControlTower*/*","arn:aws:cloudformation:*:*:stack/StackSet-AWSControlTower*/*","arn:aws:cloudformation:*:*:stackset/AWSControlTower*:*","arn:aws:cloudformation:*:*:stackset-target/AWSControlTower*/*"]},{"Action":["cloudtrail:CreateTrail","cloudtrail:DeleteTrail","cloudtrail:GetTrailStatus","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudtrail:UpdateTrail","cloudtrail:PutEventSelectors","logs:CreateLogStream","logs:PutLogEvents","logs:PutRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:aws-controltower/CloudTrailLogs:*","arn:aws:cloudtrail:*:*:trail/aws-controltower*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-controltower*/*"]},{"Action":["sts:AssumeRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSControlTowerExecution"]},{"Action":["cloudtrail:DescribeTrails","ec2:DescribeAvailabilityZones","iam:ListRoles","logs:CreateLogGroup","logs:DescribeLogGroups","organizations:CreateAccount","organizations:DescribeAccount","organizations:DescribeCreateAccountStatus","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribePolicy","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListPoliciesForTarget","organizations:ListTargetsForPolicy","organizations:ListRoots","organizations:MoveAccount","servicecatalog:AssociatePrincipalWithPortfolio"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:GetUser","iam:ListAttachedRolePolicies","iam:GetRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSControlTowerStackSetRole","arn:aws:iam::*:role/service-role/AWSControlTowerCloudTrailRole","arn:aws:iam::*:role/service-role/AWSControlTowerConfigAggregatorRoleForOrganizations"]},{"Action":["config:DeleteConfigurationAggregator","config:PutConfigurationAggregator","config:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","cloudtrail","logs","s3","sts","ec2","iam","organizations","servicecatalog","config"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorReportingServiceRolePolicy","PolicyName":"AWSTrustedAdvisorReportingServiceRolePolicy","PolicyId":"ANPAZKAPJZG4NCBYW5OGK","Path":"/aws-service-role/","Description":"Service Policy for Trusted Advisor Multi-account Reporting","DefaultVersionId":"v2"},"document":[{"Action":["organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListOrganizationalUnitsForParent","organizations:ListChildren","organizations:ListParents","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["organizations"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantineV2","PolicyName":"AWSCompromisedKeyQuarantineV2","PolicyId":"ANPAZKAPJZG4PFYMROIMI","Path":"/","Description":"Denies access to certain actions, applied by the AWS team in the event that an IAM user's credentials have been compromised or exposed publicly. Do NOT remove this policy. Instead, please follow the instructions specified in the support case created for you regarding this event.","DefaultVersionId":"v1"},"document":[{"Action":["ec2:RequestSpotInstances","ec2:RunInstances","ec2:StartInstances","iam:AddUserToGroup","iam:AttachGroupPolicy","iam:AttachRolePolicy","iam:AttachUserPolicy","iam:ChangePassword","iam:CreateAccessKey","iam:CreateInstanceProfile","iam:CreateLoginProfile","iam:CreatePolicyVersion","iam:CreateRole","iam:CreateUser","iam:DetachUserPolicy","iam:PassRole","iam:PutGroupPolicy","iam:PutRolePolicy","iam:PutUserPermissionsBoundary","iam:PutUserPolicy","iam:SetDefaultPolicyVersion","iam:UpdateAccessKey","iam:UpdateAccountPasswordPolicy","iam:UpdateAssumeRolePolicy","iam:UpdateLoginProfile","iam:UpdateUser","lambda:AddLayerVersionPermission","lambda:AddPermission","lambda:CreateFunction","lambda:GetPolicy","lambda:ListTags","lambda:PutProvisionedConcurrencyConfig","lambda:TagResource","lambda:UntagResource","lambda:UpdateFunctionCode","lightsail:Create*","lightsail:Delete*","lightsail:DownloadDefaultKeyPair","lightsail:GetInstanceAccessDetails","lightsail:Start*","lightsail:Update*","organizations:CreateAccount","organizations:CreateOrganization","organizations:InviteAccountToOrganization","s3:DeleteBucket","s3:DeleteObject","s3:DeleteObjectVersion","s3:PutLifecycleConfiguration","s3:PutBucketAcl","s3:DeleteBucketOwnershipControls","s3:DeleteBucketPolicy","s3:ObjectOwnerOverrideToBucketOwner","s3:PutAccountPublicAccessBlock","s3:PutBucketPolicy","s3:ListAllMyBuckets"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","lambda","lightsail","organizations","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantine","PolicyName":"AWSCompromisedKeyQuarantine","PolicyId":"ANPAZKAPJZG4PLD3NKX4L","Path":"/","Description":"Denies access to certain actions, applied by the AWS team in the event that an IAM user's credentials have been compromised or exposed publicly.  Do NOT remove this policy.  Instead, please follow the instructions specified in the email sent to you regarding this event.","DefaultVersionId":"v1"},"document":[{"Action":["iam:AttachGroupPolicy","iam:AttachRolePolicy","iam:AttachUserPolicy","iam:ChangePassword","iam:CreateAccessKey","iam:CreateInstanceProfile","iam:CreateLoginProfile","iam:CreateRole","iam:CreateUser","iam:DetachUserPolicy","iam:PutUserPermissionsBoundary","iam:PutUserPolicy","iam:UpdateAccessKey","iam:UpdateAccountPasswordPolicy","iam:UpdateUser","ec2:RequestSpotInstances","ec2:RunInstances","ec2:StartInstances","organizations:CreateAccount","organizations:CreateOrganization","organizations:InviteAccountToOrganization","lambda:CreateFunction","lightsail:Create*","lightsail:Start*","lightsail:Delete*","lightsail:Update*","lightsail:GetInstanceAccessDetails","lightsail:DownloadDefaultKeyPair"],"Effect":"Deny","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ec2","organizations","lambda","lightsail"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWS_ConfigRole","PolicyName":"AWS_ConfigRole","PolicyId":"ANPAZKAPJZG4PP7QZ4FBG","Path":"/service-role/","Description":"Default policy for AWS Config service role. Provides permissions required for AWS Config to track changes to your AWS resources.","DefaultVersionId":"v6"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]}]}},"staticQueryHashes":["256249292"]}
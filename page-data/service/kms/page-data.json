{"componentChunkName":"component---src-templates-service-detail-page-tsx","path":"/service/kms/","result":{"pageContext":{"service":"kms","policyData":[{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/SupportUser","PolicyName":"SupportUser","PolicyId":"ANPAI3V4GSSN5SJY3P2RO","Path":"/job-function/","Description":"This policy grants permissions to troubleshoot and resolve issues in an AWS account. This policy also enables the user to contact AWS support to create and manage cases.","DefaultVersionId":"v5"},"document":[{"Action":["support:*","acm:DescribeCertificate","acm:GetCertificate","acm:List*","acm-pca:DescribeCertificateAuthority","acm-pca:ListCertificateAuthorities","apigateway:GET","autoscaling:Describe*","aws-marketplace:ViewSubscriptions","cloudformation:Describe*","cloudformation:Get*","cloudformation:List*","cloudformation:EstimateTemplateCost","cloudfront:Get*","cloudfront:List*","cloudsearch:Describe*","cloudsearch:List*","cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:LookupEvents","cloudtrail:ListTags","cloudtrail:ListPublicKeys","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","codecommit:BatchGetRepositories","codecommit:Get*","codecommit:List*","codedeploy:Batch*","codedeploy:Get*","codedeploy:List*","codepipeline:AcknowledgeJob","codepipeline:AcknowledgeThirdPartyJob","codepipeline:ListActionTypes","codepipeline:ListPipelines","codepipeline:PollForJobs","codepipeline:PollForThirdPartyJobs","codepipeline:GetPipelineState","codepipeline:GetPipeline","cognito-identity:List*","cognito-identity:LookupDeveloperIdentity","cognito-identity:Describe*","cognito-idp:Describe*","cognito-idp:List*","cognito-sync:Describe*","cognito-sync:GetBulkPublishDetails","cognito-sync:GetCognitoEvents","cognito-sync:GetIdentityPoolConfiguration","cognito-sync:List*","config:DescribeConfigurationRecorders","config:DescribeConfigurationRecorderStatus","config:DescribeConfigRuleEvaluationStatus","config:DescribeConfigRules","config:DescribeDeliveryChannels","config:DescribeDeliveryChannelStatus","config:GetResourceConfigHistory","config:ListDiscoveredResources","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","datapipeline:ReportTaskProgress","datapipeline:ReportTaskRunnerHeartbeat","devicefarm:List*","devicefarm:Get*","directconnect:Describe*","discovery:Describe*","discovery:ListConfigurations","dms:Describe*","dms:List*","ds:DescribeDirectories","ds:DescribeSnapshots","ds:GetDirectoryLimits","ds:GetSnapshotLimits","ds:ListAuthorizedApplications","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","ec2:Describe*","ec2:DescribeHosts","ec2:describeIdentityIdFormat","ec2:DescribeIdFormat","ec2:DescribeInstanceAttribute","ec2:DescribeNatGateways","ec2:DescribeReservedInstancesModifications","ec2:DescribeTags","ecr:GetRepositoryPolicy","ecr:BatchCheckLayerAvailability","ecr:DescribeRepositories","ecr:ListImages","ecs:Describe*","ecs:List*","elasticache:Describe*","elasticache:List*","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:RequestEnvironmentInfo","elasticbeanstalk:RetrieveEnvironmentInfo","elasticbeanstalk:ValidateConfigurationSettings","elasticfilesystem:Describe*","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:List*","elastictranscoder:List*","elastictranscoder:ReadJob","elasticfilesystem:DescribeFileSystems","es:Describe*","es:List*","es:ESHttpGet","es:ESHttpHead","events:DescribeRule","events:List*","events:TestEventPattern","firehose:Describe*","firehose:List*","gamelift:List*","gamelift:Describe*","glacier:ListVaults","glacier:DescribeVault","glacier:DescribeJob","glacier:Get*","glacier:List*","iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","importexport:GetStatus","importexport:ListJobs","inspector:Describe*","inspector:List*","iot:Describe*","iot:Get*","iot:List*","kinesisanalytics:DescribeApplication","kinesisanalytics:DiscoverInputSchema","kinesisanalytics:GetApplicationState","kinesisanalytics:ListApplications","kinesis:Describe*","kinesis:Get*","kinesis:List*","kms:Describe*","kms:Get*","kms:List*","lambda:List*","lambda:Get*","logs:Describe*","logs:TestMetricFilter","machinelearning:Describe*","machinelearning:Get*","mobilehub:GetProject","mobilehub:List*","mobilehub:ValidateProject","mobilehub:VerifyServiceRole","opsworks:Describe*","rds:Describe*","rds:ListTagsForResource","redshift:Describe*","route53:Get*","route53:List*","route53domains:CheckDomainAvailability","route53domains:GetDomainDetail","route53domains:GetOperationDetail","route53domains:List*","s3:List*","sdb:GetAttributes","sdb:List*","sdb:Select*","servicecatalog:SearchProducts","servicecatalog:DescribeProduct","servicecatalog:DescribeProductView","servicecatalog:ListLaunchPaths","servicecatalog:DescribeProvisioningParameters","servicecatalog:ListRecordHistory","servicecatalog:DescribeRecord","servicecatalog:ScanProvisionedProducts","ses:Get*","ses:List*","sns:Get*","sns:List*","sqs:GetQueueAttributes","sqs:GetQueueUrl","sqs:ListQueues","sqs:ReceiveMessage","ssm:List*","ssm:Describe*","storagegateway:Describe*","storagegateway:List*","swf:Count*","swf:Describe*","swf:Get*","swf:List*","waf:Get*","waf:List*","workspaces:Describe*","workdocs:Describe*","workmail:Describe*","workmail:Get*","workspaces:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["support","acm","acm-pca","apigateway","autoscaling","aws-marketplace","cloudformation","cloudfront","cloudsearch","cloudtrail","cloudwatch","codecommit","codedeploy","codepipeline","cognito-identity","cognito-idp","cognito-sync","config","datapipeline","devicefarm","directconnect","discovery","dms","ds","dynamodb","ec2","ecr","ecs","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","es","events","firehose","gamelift","glacier","iam","importexport","inspector","iot","kinesisanalytics","kinesis","kms","lambda","logs","machinelearning","mobilehub","opsworks","rds","redshift","route53","route53domains","s3","sdb","servicecatalog","ses","sns","sqs","ssm","storagegateway","swf","waf","workspaces","workdocs","workmail"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/SecretsManagerReadWrite","PolicyName":"SecretsManagerReadWrite","PolicyId":"ANPAI3VG7CI5BIQZQ6G2E","Path":"/","Description":"Provides read/write access to AWS Secrets Manager via the AWS Management Console. Note: this exludes IAM actions, so combine with IAMFullAccess if rotation configuration is required.","DefaultVersionId":"v3"},"document":[{"Action":["secretsmanager:*","cloudformation:CreateChangeSet","cloudformation:DescribeChangeSet","cloudformation:DescribeStackResource","cloudformation:DescribeStacks","cloudformation:ExecuteChangeSet","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:DescribeKey","kms:ListAliases","kms:ListKeys","lambda:ListFunctions","rds:DescribeDBClusters","rds:DescribeDBInstances","redshift:DescribeClusters","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:AddPermission","lambda:CreateFunction","lambda:GetFunction","lambda:InvokeFunction","lambda:UpdateFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:SecretsManager*"]},{"Action":["serverlessrepo:CreateCloudFormationChangeSet","serverlessrepo:GetApplication"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:serverlessrepo:*:*:applications/SecretsManager*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awsserverlessrepo-changesets*","arn:aws:s3:::secrets-manager-rotation-apps-*/*"]}],"services":["secretsmanager","cloudformation","ec2","kms","lambda","rds","redshift","tag","serverlessrepo","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDocDBReadOnlyAccess","PolicyName":"AmazonDocDBReadOnlyAccess","PolicyId":"ANPAI477RMVACLTLWY5RQ","Path":"/","Description":"Provides read-only access to Amazon DocumentDB with MongoDB compatibility. Note that this policy also grants access to Amazon RDS and Amazon Neptune resources.","DefaultVersionId":"v1"},"document":[{"Action":["rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSubnetGroups","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DownloadDBLogFilePortion","rds:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListRetirableGrants","kms:ListAliases","kms:ListKeyPolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*","arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*"]}],"services":["rds","cloudwatch","ec2","kms","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambdaFullAccess","PolicyName":"AWSLambdaFullAccess","PolicyId":"ANPAI6E2CYYMI4XI7AA5K","Path":"/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html. Provides full access to Lambda, S3, DynamoDB, CloudWatch Metrics and Logs.","DefaultVersionId":"v8"},"document":[{"Action":["cloudformation:DescribeChangeSet","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:GetTemplate","cloudformation:ListStackResources","cloudwatch:*","cognito-identity:ListIdentityPools","cognito-sync:GetCognitoEvents","cognito-sync:SetCognitoEvents","dynamodb:*","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","events:*","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","iam:PassRole","iot:AttachPrincipalPolicy","iot:AttachThingPrincipal","iot:CreateKeysAndCertificate","iot:CreatePolicy","iot:CreateThing","iot:CreateTopicRule","iot:DescribeEndpoint","iot:GetTopicRule","iot:ListPolicies","iot:ListThings","iot:ListTopicRules","iot:ReplaceTopicRule","kinesis:DescribeStream","kinesis:ListStreams","kinesis:PutRecord","kms:ListAliases","lambda:*","logs:*","s3:*","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Publish","sns:Subscribe","sns:Unsubscribe","sqs:ListQueues","sqs:SendMessage","tag:GetResources","xray:PutTelemetryRecords","xray:PutTraceSegments"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","cloudwatch","cognito-identity","cognito-sync","dynamodb","ec2","events","iam","iot","kinesis","kms","lambda","logs","s3","sns","sqs","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy","PolicyName":"AmazonEKSClusterPolicy","PolicyId":"ANPAIBTLDQMIC6UOIGFWA","Path":"/","Description":"This policy provides Kubernetes the permissions it requires to manage resources on your behalf. Kubernetes requires Ec2:CreateTags permissions to place identifying information on EC2 resources including but not limited to Instances, Security Groups, and Elastic Network Interfaces. ","DefaultVersionId":"v4"},"document":[{"Action":["autoscaling:DescribeAutoScalingGroups","autoscaling:UpdateAutoScalingGroup","ec2:AttachVolume","ec2:AuthorizeSecurityGroupIngress","ec2:CreateRoute","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:CreateVolume","ec2:DeleteRoute","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DescribeInstances","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVolumes","ec2:DescribeVolumesModifications","ec2:DescribeVpcs","ec2:DescribeDhcpOptions","ec2:DescribeNetworkInterfaces","ec2:DetachVolume","ec2:ModifyInstanceAttribute","ec2:ModifyVolume","ec2:RevokeSecurityGroupIngress","elasticloadbalancing:AddTags","elasticloadbalancing:ApplySecurityGroupsToLoadBalancer","elasticloadbalancing:AttachLoadBalancerToSubnets","elasticloadbalancing:ConfigureHealthCheck","elasticloadbalancing:CreateListener","elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:CreateLoadBalancerListeners","elasticloadbalancing:CreateLoadBalancerPolicy","elasticloadbalancing:CreateTargetGroup","elasticloadbalancing:DeleteListener","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DeleteLoadBalancerListeners","elasticloadbalancing:DeleteTargetGroup","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DeregisterTargets","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroupAttributes","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeTargetHealth","elasticloadbalancing:DetachLoadBalancerFromSubnets","elasticloadbalancing:ModifyListener","elasticloadbalancing:ModifyLoadBalancerAttributes","elasticloadbalancing:ModifyTargetGroup","elasticloadbalancing:ModifyTargetGroupAttributes","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:RegisterTargets","elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer","elasticloadbalancing:SetLoadBalancerPoliciesOfListener","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","ec2","elasticloadbalancing","kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/ViewOnlyAccess","PolicyName":"ViewOnlyAccess","PolicyId":"ANPAID22R6XPJATWOFDK6","Path":"/job-function/","Description":"This policy grants permissions to view resources and basic metadata across all AWS services. ","DefaultVersionId":"v11"},"document":[{"Action":["acm:ListCertificates","athena:List*","aws-marketplace:ViewSubscriptions","autoscaling:Describe*","batch:ListJobs","clouddirectory:ListAppliedSchemaArns","clouddirectory:ListDevelopmentSchemaArns","clouddirectory:ListDirectories","clouddirectory:ListPublishedSchemaArns","cloudformation:List*","cloudformation:DescribeStacks","cloudfront:List*","cloudhsm:ListAvailableZones","cloudhsm:ListLunaClients","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudsearch:List*","cloudsearch:DescribeDomains","cloudtrail:DescribeTrails","cloudtrail:LookupEvents","cloudwatch:List*","cloudwatch:Get*","codebuild:ListBuilds*","codebuild:ListProjects","codecommit:List*","codedeploy:List*","codedeploy:Get*","codepipeline:ListPipelines","codestar:List*","cognito-idp:List*","cognito-identity:ListIdentities","cognito-identity:ListIdentityPools","cognito-sync:ListDatasets","connect:List*","config:List*","config:Describe*","datapipeline:ListPipelines","datapipeline:DescribePipelines","datapipeline:GetAccountLimits","dax:DescribeClusters","dax:DescribeDefaultParameters","dax:DescribeEvents","dax:DescribeParameterGroups","dax:DescribeParameters","dax:DescribeSubnetGroups","dax:ListTags","devicefarm:List*","directconnect:Describe*","discovery:List*","dms:List*","ds:DescribeDirectories","dynamodb:DescribeBackup","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeGlobalTableSettings","dynamodb:DescribeLimits","dynamodb:DescribeReservedCapacity","dynamodb:DescribeReservedCapacityOfferings","dynamodb:DescribeStream","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeBundleTasks","ec2:DescribeClassicLinkInstances","ec2:DescribeConversionTasks","ec2:DescribeCustomerGateways","ec2:DescribeDhcpOptions","ec2:DescribeExportTasks","ec2:DescribeFlowLogs","ec2:DescribeHost*","ec2:DescribeIdentityIdFormat","ec2:DescribeIdFormat","ec2:DescribeImage*","ec2:DescribeImport*","ec2:DescribeInstance*","ec2:DescribeInternetGateways","ec2:DescribeKeyPairs","ec2:DescribeMovingAddresses","ec2:DescribeNatGateways","ec2:DescribeNetwork*","ec2:DescribePlacementGroups","ec2:DescribePrefixLists","ec2:DescribeRegions","ec2:DescribeReserved*","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSnapshot*","ec2:DescribeSpot*","ec2:DescribeSubnets","ec2:DescribeTags","ec2:DescribeVolume*","ec2:DescribeVpc*","ec2:DescribeVpnGateways","ecr:DescribeRepositories","ecr:ListImages","ecs:List*","ecs:Describe*","elasticache:Describe*","elasticbeanstalk:DescribeApplicationVersions","elasticbeanstalk:DescribeApplications","elasticbeanstalk:DescribeEnvironments","elasticbeanstalk:ListAvailableSolutionStacks","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroups","elasticfilesystem:DescribeFileSystems","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:DescribeTargetHealth","elasticmapreduce:List*","elastictranscoder:List*","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","events:ListRuleNamesByTarget","events:ListRules","events:ListTargetsByRule","firehose:List*","firehose:DescribeDeliveryStream","fsx:DescribeFileSystems","gamelift:List*","glacier:List*","greengrass:List*","iam:List*","iam:GetAccountSummary","iam:GetLoginProfile","importexport:ListJobs","inspector:List*","iot:List*","kinesis:ListStreams","kinesisanalytics:ListApplications","kms:ListKeys","lambda:List*","lex:GetBotAliases","lex:GetBotChannelAssociations","lex:GetBots","lex:GetBotVersions","lex:GetIntents","lex:GetIntentVersions","lex:GetSlotTypes","lex:GetSlotTypeVersions","lex:GetUtterancesView","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetInstances","lightsail:GetInstanceSnapshots","lightsail:GetKeyPair","lightsail:GetRegions","lightsail:GetStaticIps","lightsail:IsVpcPeered","logs:Describe*","machinelearning:Describe*","mobilehub:ListAvailableFeatures","mobilehub:ListAvailableRegions","mobilehub:ListProjects","opsworks:Describe*","opsworks-cm:Describe*","organizations:List*","outposts:GetOutpost","outposts:GetOutpostInstanceTypes","outposts:ListOutposts","outposts:ListSites","outposts:ListTagsForResource","mobiletargeting:GetApplicationSettings","mobiletargeting:GetCampaigns","mobiletargeting:GetImportJobs","mobiletargeting:GetSegments","polly:Describe*","polly:List*","rds:Describe*","redshift:DescribeClusters","redshift:DescribeEvents","redshift:ViewQueriesInConsole","route53:List*","route53:Get*","route53domains:List*","route53resolver:Get*","route53resolver:List*","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:Describe*","sagemaker:List*","sdb:List*","servicecatalog:List*","ses:List*","shield:List*","states:ListActivities","states:ListStateMachines","sns:List*","sqs:ListQueues","ssm:ListAssociations","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListLocalDisks","storagegateway:ListVolumeRecoveryPoints","storagegateway:ListVolumes","swf:List*","trustedadvisor:Describe*","waf:List*","waf-regional:List*","wafv2:List*","workdocs:DescribeAvailableDirectories","workdocs:DescribeInstances","workmail:Describe*","workspaces:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["acm","athena","aws-marketplace","autoscaling","batch","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-idp","cognito-identity","cognito-sync","connect","config","datapipeline","dax","devicefarm","directconnect","discovery","dms","ds","dynamodb","ec2","ecr","ecs","elasticache","elasticbeanstalk","elasticloadbalancing","elasticfilesystem","elasticmapreduce","elastictranscoder","es","events","firehose","fsx","gamelift","glacier","greengrass","iam","importexport","inspector","iot","kinesis","kinesisanalytics","kms","lambda","lex","lightsail","logs","machinelearning","mobilehub","opsworks","opsworks-cm","organizations","outposts","mobiletargeting","polly","rds","redshift","route53","route53domains","route53resolver","s3","sagemaker","sdb","servicecatalog","ses","shield","states","sns","sqs","ssm","storagegateway","swf","trustedadvisor","waf","waf-regional","wafv2","workdocs","workmail","workspaces"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/DatabaseAdministrator","PolicyName":"DatabaseAdministrator","PolicyId":"ANPAIGBMAW4VUQKOQNVT6","Path":"/job-function/","Description":"Grants full access permissions to AWS services and actions required to set up and configure AWS database services.","DefaultVersionId":"v2"},"document":[{"Action":["cloudwatch:DeleteAlarms","cloudwatch:Describe*","cloudwatch:DisableAlarmActions","cloudwatch:EnableAlarmActions","cloudwatch:Get*","cloudwatch:List*","cloudwatch:PutMetricAlarm","datapipeline:ActivatePipeline","datapipeline:CreatePipeline","datapipeline:DeletePipeline","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:PutPipelineDefinition","datapipeline:QueryObjects","dynamodb:*","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","elasticache:*","iam:ListRoles","iam:GetRole","kms:ListKeys","lambda:CreateEventSourceMapping","lambda:CreateFunction","lambda:DeleteEventSourceMapping","lambda:DeleteFunction","lambda:GetFunctionConfiguration","lambda:ListEventSourceMappings","lambda:ListFunctions","logs:DescribeLogGroups","logs:DescribeLogStreams","logs:FilterLogEvents","logs:GetLogEvents","logs:Create*","logs:PutLogEvents","logs:PutMetricFilter","rds:*","redshift:*","s3:CreateBucket","sns:CreateTopic","sns:DeleteTopic","sns:Get*","sns:List*","sns:SetTopicAttributes","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:AbortMultipartUpload","s3:DeleteObject*","s3:Get*","s3:List*","s3:PutAccelerateConfiguration","s3:PutBucketTagging","s3:PutBucketVersioning","s3:PutBucketWebsite","s3:PutLifecycleConfiguration","s3:PutReplicationConfiguration","s3:PutObject*","s3:Replicate*","s3:RestoreObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/rds-monitoring-role","arn:aws:iam::*:role/rdbms-lambda-access","arn:aws:iam::*:role/lambda_exec_role","arn:aws:iam::*:role/lambda-dynamodb-*","arn:aws:iam::*:role/lambda-vpc-execution-role","arn:aws:iam::*:role/DataPipelineDefaultRole","arn:aws:iam::*:role/DataPipelineDefaultResourceRole"]}],"services":["cloudwatch","datapipeline","dynamodb","ec2","elasticache","iam","kms","lambda","logs","rds","redshift","s3","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ReadOnlyAccess","PolicyName":"ReadOnlyAccess","PolicyId":"ANPAILL3HVNFSB6DCOWYQ","Path":"/","Description":"Provides read-only access to AWS services and resources.","DefaultVersionId":"v78"},"document":[{"Action":["a4b:Get*","a4b:List*","a4b:Search*","access-analyzer:GetAccessPreview","access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:GetGeneratedPolicy","access-analyzer:ListAccessPreviewFindings","access-analyzer:ListAccessPreviews","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListPolicyGenerations","access-analyzer:ListTagsForResource","access-analyzer:ValidatePolicy","acm-pca:Describe*","acm-pca:Get*","acm-pca:List*","acm:Describe*","acm:Get*","acm:List*","amplify:GetApp","amplify:GetBranch","amplify:GetDomainAssociation","amplify:GetJob","amplify:ListApps","amplify:ListBranches","amplify:ListDomainAssociations","amplify:ListJobs","apigateway:GET","application-autoscaling:Describe*","applicationinsights:Describe*","applicationinsights:List*","appmesh:Describe*","appmesh:List*","appstream:Describe*","appstream:List*","appsync:Get*","appsync:List*","athena:Batch*","athena:Get*","athena:List*","auditmanager:GetAccountStatus","auditmanager:GetAssessment","auditmanager:GetAssessmentFramework","auditmanager:GetAssessmentReportUrl","auditmanager:GetChangeLogs","auditmanager:GetControl","auditmanager:GetDelegations","auditmanager:GetEvidence","auditmanager:GetEvidenceByEvidenceFolder","auditmanager:GetEvidenceFolder","auditmanager:GetEvidenceFoldersByAssessment","auditmanager:GetEvidenceFoldersByAssessmentControl","auditmanager:GetOrganizationAdminAccount","auditmanager:GetServicesInScope","auditmanager:GetSettings","auditmanager:ListAssessmentFrameworks","auditmanager:ListAssessmentReports","auditmanager:ListAssessments","auditmanager:ListControls","auditmanager:ListKeywordsForDataSource","auditmanager:ListNotifications","auditmanager:ListTagsForResource","auditmanager:ValidateAssessmentReportIntegrity","autoscaling-plans:Describe*","autoscaling-plans:GetScalingPlanResourceForecastData","autoscaling:Describe*","aws-portal:View*","backup:Describe*","backup:Get*","backup:List*","batch:Describe*","batch:List*","braket:GetDevice","braket:GetQuantumTask","braket:SearchDevices","braket:SearchQuantumTasks","budgets:Describe*","budgets:View*","cassandra:Select","chatbot:Describe*","chatbot:Get*","chime:Get*","chime:List*","chime:Retrieve*","chime:Search*","chime:Validate*","cloud9:Describe*","cloud9:List*","clouddirectory:BatchRead","clouddirectory:Get*","clouddirectory:List*","clouddirectory:LookupPolicy","cloudformation:Describe*","cloudformation:Detect*","cloudformation:Estimate*","cloudformation:Get*","cloudformation:List*","cloudfront:Get*","cloudfront:List*","cloudhsm:Describe*","cloudhsm:Get*","cloudhsm:List*","cloudsearch:Describe*","cloudsearch:List*","cloudtrail:Describe*","cloudtrail:Get*","cloudtrail:List*","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","codeartifact:DescribeDomain","codeartifact:DescribePackageVersion","codeartifact:DescribeRepository","codeartifact:GetAuthorizationToken","codeartifact:GetDomainPermissionsPolicy","codeartifact:GetPackageVersionAsset","codeartifact:GetPackageVersionReadme","codeartifact:GetRepositoryEndpoint","codeartifact:GetRepositoryPermissionsPolicy","codeartifact:ListDomains","codeartifact:ListPackageVersionAssets","codeartifact:ListPackageVersionDependencies","codeartifact:ListPackageVersions","codeartifact:ListPackages","codeartifact:ListRepositories","codeartifact:ListRepositoriesInDomain","codeartifact:ListTagsForResource","codeartifact:ReadFromRepository","codebuild:BatchGet*","codebuild:DescribeCodeCoverages","codebuild:DescribeTestCases","codebuild:List*","codecommit:BatchGet*","codecommit:Describe*","codecommit:Get*","codecommit:GitPull","codecommit:List*","codedeploy:BatchGet*","codedeploy:Get*","codedeploy:List*","codeguru-profiler:Describe*","codeguru-profiler:Get*","codeguru-profiler:List*","codeguru-reviewer:Describe*","codeguru-reviewer:Get*","codeguru-reviewer:List*","codepipeline:Get*","codepipeline:List*","codestar-notifications:ListTargets","codestar-notifications:describeNotificationRule","codestar-notifications:listEventTypes","codestar-notifications:listNotificationRules","codestar-notifications:listTagsForResource","codestar:Describe*","codestar:Get*","codestar:List*","codestar:Verify*","cognito-identity:Describe*","cognito-identity:GetCredentialsForIdentity","cognito-identity:GetIdentityPoolRoles","cognito-identity:GetOpenIdToken","cognito-identity:GetOpenIdTokenForDeveloperIdentity","cognito-identity:List*","cognito-identity:Lookup*","cognito-idp:AdminGet*","cognito-idp:AdminList*","cognito-idp:Describe*","cognito-idp:Get*","cognito-idp:List*","cognito-sync:Describe*","cognito-sync:Get*","cognito-sync:List*","cognito-sync:QueryRecords","compute-optimizer:DescribeRecommendationExportJobs","compute-optimizer:GetAutoScalingGroupRecommendations","compute-optimizer:GetEBSVolumeRecommendations","compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEC2RecommendationProjectedMetrics","compute-optimizer:GetEnrollmentStatus","compute-optimizer:GetLambdaFunctionRecommendations","compute-optimizer:GetRecommendationSummaries","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","config:SelectAggregateResourceConfig","config:SelectResourceConfig","connect:Describe*","connect:GetFederationToken","connect:List*","dataexchange:Get*","dataexchange:List*","datapipeline:Describe*","datapipeline:EvaluateExpression","datapipeline:Get*","datapipeline:List*","datapipeline:QueryObjects","datapipeline:Validate*","datasync:Describe*","datasync:List*","dax:BatchGetItem","dax:Describe*","dax:GetItem","dax:ListTags","dax:Query","dax:Scan","deepcomposer:GetComposition","deepcomposer:GetModel","deepcomposer:GetSampleModel","deepcomposer:ListCompositions","deepcomposer:ListModels","deepcomposer:ListSampleModels","deepcomposer:ListTrainingTopics","detective:Get*","detective:List*","devicefarm:Get*","devicefarm:List*","devops-guru:DescribeAccountHealth","devops-guru:DescribeAccountOverview","devops-guru:DescribeAnomaly","devops-guru:DescribeInsight","devops-guru:DescribeResourceCollectionHealth","devops-guru:DescribeServiceIntegration","devops-guru:GetResourceCollection","devops-guru:ListAnomaliesForInsight","devops-guru:ListEvents","devops-guru:ListInsights","devops-guru:ListNotificationChannels","devops-guru:ListRecommendations","devops-guru:SearchInsights","directconnect:Describe*","discovery:Describe*","discovery:Get*","discovery:List*","dlm:Get*","dms:Describe*","dms:List*","dms:Test*","ds:Check*","ds:Describe*","ds:Get*","ds:List*","ds:Verify*","dynamodb:BatchGet*","dynamodb:Describe*","dynamodb:Get*","dynamodb:List*","dynamodb:Query","dynamodb:Scan","ec2:Describe*","ec2:Get*","ec2:SearchTransitGatewayRoutes","ec2messages:Get*","ecr-public:BatchCheckLayerAvailability","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetAuthorizationToken","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr-public:ListTagsForResource","ecr:BatchCheck*","ecr:BatchGet*","ecr:Describe*","ecr:Get*","ecr:List*","ecs:Describe*","ecs:List*","eks:Describe*","eks:List*","elasticache:Describe*","elasticache:List*","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:Request*","elasticbeanstalk:Retrieve*","elasticbeanstalk:Validate*","elasticfilesystem:Describe*","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:List*","elasticmapreduce:View*","elastictranscoder:List*","elastictranscoder:Read*","elemental-appliances-software:Get*","elemental-appliances-software:List*","es:Describe*","es:ESHttpGet","es:ESHttpHead","es:Get*","es:List*","events:Describe*","events:List*","events:Test*","firehose:Describe*","firehose:List*","fis:GetAction","fis:GetExperiment","fis:GetExperimentTemplate","fis:ListActions","fis:ListExperimentTemplates","fis:ListExperiments","fis:ListTagsForResource","fms:GetAdminAccount","fms:GetAppsList","fms:GetComplianceDetail","fms:GetNotificationChannel","fms:GetPolicy","fms:GetProtectionStatus","fms:GetProtocolsList","fms:GetViolationDetails","fms:ListAppsLists","fms:ListComplianceStatus","fms:ListMemberAccounts","fms:ListPolicies","fms:ListProtocolsLists","fms:ListTagsForResource","forecast:DescribeDataset","forecast:DescribeDatasetGroup","forecast:DescribeDatasetImportJob","forecast:DescribeForecast","forecast:DescribeForecastExportJob","forecast:DescribePredictor","forecast:DescribePredictorBacktestExportJob","forecast:GetAccuracyMetrics","forecast:ListDatasetGroups","forecast:ListDatasetImportJobs","forecast:ListDatasets","forecast:ListForecastExportJobs","forecast:ListForecasts","forecast:ListPredictorBacktestExportJobs","forecast:ListPredictors","forecast:QueryForecast","freertos:Describe*","freertos:List*","fsx:Describe*","fsx:List*","gamelift:Describe*","gamelift:Get*","gamelift:List*","gamelift:ResolveAlias","gamelift:Search*","glacier:Describe*","glacier:Get*","glacier:List*","globalaccelerator:Describe*","globalaccelerator:List*","glue:BatchGetDevEndpoints","glue:BatchGetJobs","glue:BatchGetPartition","glue:BatchGetTriggers","glue:BatchGetWorkflows","glue:CheckSchemaVersionValidity","glue:GetCatalogImportStatus","glue:GetClassifier","glue:GetClassifiers","glue:GetCrawler","glue:GetCrawlerMetrics","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabase","glue:GetDatabases","glue:GetDataflowGraph","glue:GetDevEndpoint","glue:GetDevEndpoints","glue:GetJob","glue:GetJobBookmark","glue:GetJobRun","glue:GetJobRuns","glue:GetJobs","glue:GetMLTaskRun","glue:GetMLTaskRuns","glue:GetMLTransform","glue:GetMLTransforms","glue:GetMapping","glue:GetPartition","glue:GetPartitions","glue:GetPlan","glue:GetRegistry","glue:GetResourcePolicy","glue:GetSchema","glue:GetSchemaByDefinition","glue:GetSchemaVersion","glue:GetSchemaVersionsDiff","glue:GetSecurityConfiguration","glue:GetSecurityConfigurations","glue:GetTable","glue:GetTableVersion","glue:GetTableVersions","glue:GetTables","glue:GetTags","glue:GetTrigger","glue:GetTriggers","glue:GetUserDefinedFunction","glue:GetUserDefinedFunctions","glue:GetWorkflow","glue:GetWorkflowRun","glue:GetWorkflowRunProperties","glue:GetWorkflowRuns","glue:ListCrawlers","glue:ListDevEndpoints","glue:ListJobs","glue:ListMLTransforms","glue:ListRegistries","glue:ListSchemaVersions","glue:ListSchemas","glue:ListTriggers","glue:ListWorkflows","glue:QuerySchemaVersionMetadata","greengrass:DescribeComponent","greengrass:Get*","greengrass:List*","groundstation:DescribeContact","groundstation:GetConfig","groundstation:GetDataflowEndpointGroup","groundstation:GetMinuteUsage","groundstation:GetMissionProfile","groundstation:GetSatellite","groundstation:ListConfigs","groundstation:ListContacts","groundstation:ListDataflowEndpointGroups","groundstation:ListGroundStations","groundstation:ListMissionProfiles","groundstation:ListSatellites","groundstation:ListTagsForResource","guardduty:DescribeOrganizationConfiguration","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","health:Describe*","iam:Generate*","iam:Get*","iam:List*","iam:Simulate*","imagebuilder:Get*","imagebuilder:List*","importexport:Get*","importexport:List*","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:Get*","iot:List*","iotanalytics:Describe*","iotanalytics:Get*","iotanalytics:List*","iotanalytics:SampleChannelData","iotevents:DescribeAlarm","iotevents:DescribeAlarmModel","iotevents:DescribeDetector","iotevents:DescribeDetectorModel","iotevents:DescribeInput","iotevents:DescribeLoggingOptions","iotevents:ListAlarmModelVersions","iotevents:ListAlarmModels","iotevents:ListAlarms","iotevents:ListDetectorModelVersions","iotevents:ListDetectorModels","iotevents:ListDetectors","iotevents:ListInputs","iotevents:ListTagsForResource","iotfleethub:DescribeApplication","iotfleethub:ListApplications","iotsitewise:Describe*","iotsitewise:Get*","iotsitewise:List*","iotwireless:GetDestination","iotwireless:GetDeviceProfile","iotwireless:GetPartnerAccount","iotwireless:GetServiceEndpoint","iotwireless:GetServiceProfile","iotwireless:GetWirelessDevice","iotwireless:GetWirelessDeviceStatistics","iotwireless:GetWirelessGateway","iotwireless:GetWirelessGatewayCertificate","iotwireless:GetWirelessGatewayFirmwareInformation","iotwireless:GetWirelessGatewayStatistics","iotwireless:GetWirelessGatewayTask","iotwireless:GetWirelessGatewayTaskDefinition","iotwireless:ListDestinations","iotwireless:ListDeviceProfiles","iotwireless:ListPartnerAccounts","iotwireless:ListServiceProfiles","iotwireless:ListTagsForResource","iotwireless:ListWirelessDevices","iotwireless:ListWirelessGatewayTaskDefinitions","iotwireless:ListWirelessGateways","ivs:BatchGetChannel","ivs:GetChannel","ivs:GetPlaybackKeyPair","ivs:GetRecordingConfiguration","ivs:ListChannels","ivs:ListPlaybackKeyPairs","ivs:ListRecordingConfigurations","ivs:ListStreams","ivs:ListTagsForResource","kafka:Describe*","kafka:Get*","kafka:List*","kendra:DescribeDataSource","kendra:DescribeFaq","kendra:DescribeIndex","kendra:DescribeThesaurus","kendra:ListDataSourceSyncJobs","kendra:ListDataSources","kendra:ListFaqs","kendra:ListIndices","kendra:ListTagsForResource","kendra:ListThesauri","kendra:Query","kinesis:Describe*","kinesis:Get*","kinesis:List*","kinesisanalytics:Describe*","kinesisanalytics:Discover*","kinesisanalytics:Get*","kinesisanalytics:List*","kinesisvideo:Describe*","kinesisvideo:Get*","kinesisvideo:List*","kms:Describe*","kms:Get*","kms:List*","lambda:Get*","lambda:List*","lex:Get*","license-manager:Get*","license-manager:List*","lightsail:GetActiveNames","lightsail:GetAlarms","lightsail:GetAutoSnapshots","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetCertificates","lightsail:GetCloudFormationStackRecords","lightsail:GetContainerAPIMetadata","lightsail:GetContainerImages","lightsail:GetContainerServiceDeployments","lightsail:GetContainerServiceMetricData","lightsail:GetContainerServicePowers","lightsail:GetContainerServices","lightsail:GetDisk","lightsail:GetDiskSnapshot","lightsail:GetDiskSnapshots","lightsail:GetDisks","lightsail:GetDistributionBundles","lightsail:GetDistributionLatestCacheReset","lightsail:GetDistributionMetricData","lightsail:GetDistributions","lightsail:GetDomain","lightsail:GetDomains","lightsail:GetExportSnapshotRecords","lightsail:GetInstance","lightsail:GetInstanceMetricData","lightsail:GetInstancePortStates","lightsail:GetInstanceSnapshot","lightsail:GetInstanceSnapshots","lightsail:GetInstanceState","lightsail:GetInstances","lightsail:GetKeyPair","lightsail:GetKeyPairs","lightsail:GetLoadBalancer","lightsail:GetLoadBalancerMetricData","lightsail:GetLoadBalancerTlsCertificates","lightsail:GetLoadBalancers","lightsail:GetOperation","lightsail:GetOperations","lightsail:GetOperationsForResource","lightsail:GetRegions","lightsail:GetRelationalDatabase","lightsail:GetRelationalDatabaseBlueprints","lightsail:GetRelationalDatabaseBundles","lightsail:GetRelationalDatabaseEvents","lightsail:GetRelationalDatabaseLogEvents","lightsail:GetRelationalDatabaseLogStreams","lightsail:GetRelationalDatabaseMetricData","lightsail:GetRelationalDatabaseParameters","lightsail:GetRelationalDatabaseSnapshot","lightsail:GetRelationalDatabaseSnapshots","lightsail:GetRelationalDatabases","lightsail:GetStaticIp","lightsail:GetStaticIps","lightsail:Is*","logs:Describe*","logs:FilterLogEvents","logs:Get*","logs:ListTagsLogGroup","logs:StartQuery","logs:StopQuery","logs:TestMetricFilter","lookoutvision:DescribeDataset","lookoutvision:DescribeModel","lookoutvision:DescribeProject","lookoutvision:ListDatasetEntries","lookoutvision:ListModels","lookoutvision:ListProjects","lookoutvision:ListTagsForResource","machinelearning:Describe*","machinelearning:Get*","mediaconvert:DescribeEndpoints","mediaconvert:Get*","mediaconvert:List*","mediapackage:Describe*","mediapackage:List*","mediastore:DescribeContainer","mediastore:DescribeObject","mediastore:GetContainerPolicy","mediastore:GetCorsPolicy","mediastore:GetLifecyclePolicy","mediastore:GetMetricPolicy","mediastore:GetObject","mediastore:ListContainers","mediastore:ListItems","mediastore:ListTagsForResource","mgh:Describe*","mgh:GetHomeRegion","mgh:List*","mgn:DescribeJobLogItems","mgn:DescribeJobs","mgn:DescribeReplicationConfigurationTemplates","mgn:DescribeSourceServers","mgn:GetLaunchConfiguration","mgn:GetReplicationConfiguration","mobileanalytics:Get*","mobilehub:Describe*","mobilehub:Export*","mobilehub:Generate*","mobilehub:Get*","mobilehub:List*","mobilehub:Validate*","mobilehub:Verify*","mobiletargeting:Get*","mobiletargeting:List*","mq:Describe*","mq:List*","network-firewall:DescribeFirewall","network-firewall:DescribeFirewallPolicy","network-firewall:DescribeLoggingConfiguration","network-firewall:DescribeResourcePolicy","network-firewall:DescribeRuleGroup","network-firewall:ListFirewallPolicies","network-firewall:ListFirewalls","network-firewall:ListRuleGroups","network-firewall:ListTagsForResource","networkmanager:DescribeGlobalNetworks","networkmanager:GetConnections","networkmanager:GetCustomerGatewayAssociations","networkmanager:GetDevices","networkmanager:GetLinkAssociations","networkmanager:GetLinks","networkmanager:GetSites","networkmanager:GetTransitGatewayConnectPeerAssociations","networkmanager:GetTransitGatewayRegistrations","opsworks-cm:Describe*","opsworks-cm:List*","opsworks:Describe*","opsworks:Get*","organizations:Describe*","organizations:List*","outposts:Get*","outposts:List*","personalize:Describe*","personalize:Get*","personalize:List*","pi:DescribeDimensionKeys","pi:GetResourceMetrics","polly:Describe*","polly:Get*","polly:List*","polly:SynthesizeSpeech","qldb:DescribeJournalS3Export","qldb:DescribeLedger","qldb:GetBlock","qldb:GetDigest","qldb:GetRevision","qldb:ListJournalS3Exports","qldb:ListJournalS3ExportsForLedger","qldb:ListLedgers","qldb:ListTagsForResource","ram:Get*","ram:List*","rds:Describe*","rds:Download*","rds:List*","redshift:Describe*","redshift:GetReservedNodeExchangeOfferings","redshift:View*","rekognition:CompareFaces","rekognition:Detect*","rekognition:List*","rekognition:Search*","resource-groups:Get*","resource-groups:List*","resource-groups:Search*","robomaker:BatchDescribe*","robomaker:Describe*","robomaker:Get*","robomaker:List*","route53:Get*","route53:List*","route53:Test*","route53domains:Check*","route53domains:Get*","route53domains:List*","route53domains:View*","route53resolver:Get*","route53resolver:List*","s3:DescribeJob","s3:Get*","s3:List*","sagemaker:Describe*","sagemaker:GetSearchSuggestions","sagemaker:List*","sagemaker:Search","savingsplans:DescribeSavingsPlanRates","savingsplans:DescribeSavingsPlans","savingsplans:DescribeSavingsPlansOfferingRates","savingsplans:DescribeSavingsPlansOfferings","savingsplans:ListTagsForResource","schemas:Describe*","schemas:Get*","schemas:List*","schemas:Search*","sdb:Get*","sdb:List*","sdb:Select*","secretsmanager:Describe*","secretsmanager:GetResourcePolicy","secretsmanager:List*","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:Get*","serverlessrepo:List*","serverlessrepo:SearchApplications","servicecatalog:Describe*","servicecatalog:GetApplication","servicecatalog:GetAttributeGroup","servicecatalog:List*","servicecatalog:Scan*","servicecatalog:Search*","servicediscovery:Get*","servicediscovery:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","ses:Describe*","ses:Get*","ses:List*","shield:Describe*","shield:Get*","shield:List*","signer:DescribeSigningJob","signer:GetSigningPlatform","signer:GetSigningProfile","signer:ListProfilePermissions","signer:ListSigningJobs","signer:ListSigningPlatforms","signer:ListSigningProfiles","signer:ListTagsForResource","snowball:Describe*","snowball:Get*","snowball:List*","sns:Check*","sns:Get*","sns:List*","sqs:Get*","sqs:List*","sqs:Receive*","ssm-contacts:DescribeEngagement","ssm-contacts:DescribePage","ssm-contacts:GetContact","ssm-contacts:GetContactChannel","ssm-contacts:ListContactChannels","ssm-contacts:ListContacts","ssm-contacts:ListEngagements","ssm-contacts:ListPageReceipts","ssm-contacts:ListPagesByContact","ssm-contacts:ListPagesByEngagement","ssm-incidents:GetIncidentRecord","ssm-incidents:GetReplicationSet","ssm-incidents:GetResourcePolicies","ssm-incidents:GetResponsePlan","ssm-incidents:GetTimelineEvent","ssm-incidents:ListIncidentRecords","ssm-incidents:ListRelatedItems","ssm-incidents:ListReplicationSets","ssm-incidents:ListResponsePlans","ssm-incidents:ListTagsForResource","ssm-incidents:ListTimelineEvents","ssm:Describe*","ssm:Get*","ssm:List*","sso-directory:Describe*","sso-directory:List*","sso-directory:Search*","sso:Describe*","sso:Get*","sso:List*","sso:Search*","states:Describe*","states:GetExecutionHistory","states:List*","storagegateway:Describe*","storagegateway:List*","sts:GetAccessKeyInfo","sts:GetCallerIdentity","sts:GetSessionToken","swf:Count*","swf:Describe*","swf:Get*","swf:List*","synthetics:Describe*","synthetics:Get*","synthetics:List*","tag:Get*","transcribe:Get*","transcribe:List*","transfer:Describe*","transfer:List*","transfer:TestIdentityProvider","trustedadvisor:Describe*","waf-regional:Get*","waf-regional:List*","waf:Get*","waf:List*","wafv2:CheckCapacity","wafv2:Describe*","wafv2:Get*","wafv2:List*","workdocs:CheckAlias","workdocs:Describe*","workdocs:Get*","worklink:Describe*","worklink:List*","workmail:Describe*","workmail:Get*","workmail:List*","workmail:Search*","workspaces:Describe*","xray:BatchGet*","xray:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["a4b","access-analyzer","acm-pca","acm","amplify","apigateway","application-autoscaling","applicationinsights","appmesh","appstream","appsync","athena","auditmanager","autoscaling-plans","autoscaling","aws-portal","backup","batch","braket","budgets","cassandra","chatbot","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codeartifact","codebuild","codecommit","codedeploy","codeguru-profiler","codeguru-reviewer","codepipeline","codestar-notifications","codestar","cognito-identity","cognito-idp","cognito-sync","compute-optimizer","config","connect","dataexchange","datapipeline","datasync","dax","deepcomposer","detective","devicefarm","devops-guru","directconnect","discovery","dlm","dms","ds","dynamodb","ec2","ec2messages","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","elemental-appliances-software","es","events","firehose","fis","fms","forecast","freertos","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","groundstation","guardduty","health","iam","imagebuilder","importexport","inspector","iot","iotanalytics","iotevents","iotfleethub","iotsitewise","iotwireless","ivs","kafka","kendra","kinesis","kinesisanalytics","kinesisvideo","kms","lambda","lex","license-manager","lightsail","logs","lookoutvision","machinelearning","mediaconvert","mediapackage","mediastore","mgh","mgn","mobileanalytics","mobilehub","mobiletargeting","mq","network-firewall","networkmanager","opsworks-cm","opsworks","organizations","outposts","personalize","pi","polly","qldb","ram","rds","redshift","rekognition","resource-groups","robomaker","route53","route53domains","route53resolver","s3","sagemaker","savingsplans","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicecatalog","servicediscovery","servicequotas","ses","shield","signer","snowball","sns","sqs","ssm-contacts","ssm-incidents","ssm","sso-directory","sso","states","storagegateway","sts","swf","synthetics","tag","transcribe","transfer","trustedadvisor","waf-regional","waf","wafv2","workdocs","worklink","workmail","workspaces","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AlexaForBusinessFullAccess","PolicyName":"AlexaForBusinessFullAccess","PolicyId":"ANPAILUT3JGG7WRIMVNH2","Path":"/","Description":"Grants full access to AlexaForBusiness resources and access to related AWS Services","DefaultVersionId":"v5"},"document":[{"Action":["a4b:*","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/*a4b.amazonaws.com/AWSServiceRoleForAlexaForBusiness*"]},{"Action":["secretsmanager:GetSecretValue","secretsmanager:DeleteSecret","secretsmanager:UpdateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:A4B*"]},{"Action":["secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["a4b","kms","iam","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess","PolicyName":"AmazonDynamoDBFullAccess","PolicyId":"ANPAINUGF2JSOSUY76KYA","Path":"/","Description":"Provides full access to Amazon DynamoDB via the AWS Management Console.","DefaultVersionId":"v15"},"document":[{"Action":["dynamodb:*","dax:*","application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:GetMetricData","datapipeline:ActivatePipeline","datapipeline:CreatePipeline","datapipeline:DeletePipeline","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:PutPipelineDefinition","datapipeline:QueryObjects","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:ListAliases","sns:CreateTopic","sns:DeleteTopic","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Subscribe","sns:Unsubscribe","sns:SetTopicAttributes","lambda:CreateFunction","lambda:ListFunctions","lambda:ListEventSourceMappings","lambda:CreateEventSourceMapping","lambda:DeleteEventSourceMapping","lambda:GetFunctionConfiguration","lambda:DeleteFunction","resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroup","resource-groups:GetGroupQuery","resource-groups:DeleteGroup","resource-groups:CreateGroup","tag:GetResources","kinesis:ListStreams","kinesis:DescribeStream","kinesis:DescribeStreamSummary"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetInsightRuleReport"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dynamodb","dax","application-autoscaling","cloudwatch","datapipeline","ec2","iam","kms","sns","lambda","resource-groups","tag","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup","PolicyName":"AWSBackupServiceRolePolicyForBackup","PolicyId":"ANPAIOOYZSLZZXWFJJ5N2","Path":"/service-role/","Description":"Provides AWS Backup permission to create backups on your behalf across AWS services","DefaultVersionId":"v10"},"document":[{"Action":["dynamodb:DescribeTable","dynamodb:CreateBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/*"]},{"Action":["dynamodb:DescribeBackup","dynamodb:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/*/backup/*"]},{"Action":["rds:AddTagsToResource","rds:ListTagsForResource","rds:DescribeDBSnapshots","rds:CreateDBSnapshot","rds:CopyDBSnapshot","rds:DescribeDBInstances","rds:CreateDBClusterSnapshot","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshots","rds:CopyDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:ModifyDBInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:db:*"]},{"Action":["rds:DeleteDBSnapshot","rds:ModifyDBSnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:snapshot:awsbackup:*"]},{"Action":["rds:DeleteDBClusterSnapshot","rds:ModifyDBClusterSnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:cluster-snapshot:awsbackup:*"]},{"Action":["storagegateway:CreateSnapshot","storagegateway:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["ec2:CopySnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CopyImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateImage","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:image/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeTags","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceCreditSpecifications","ec2:DescribeNetworkInterfaces","ec2:DescribeElasticGpus","ec2:DescribeSpotInstanceRequests"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:ModifySnapshotAttribute","ec2:ModifyImageAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["backup:DescribeBackupVault","backup:CopyIntoBackupVault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-vault:*"]},{"Action":["backup:CopyFromBackupVault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:Backup","elasticfilesystem:DescribeTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:CreateSnapshot","ec2:DeleteSnapshot","ec2:DescribeVolumes","ec2:DescribeSnapshots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["kms:Decrypt","kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:GenerateDataKeyWithoutPlaintext"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kms:*:*:key/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:CreateBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*","arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["fsx:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:ListTagsForResource","fsx:ManageBackupPrincipalAssociations","fsx:CopyBackup","fsx:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]}],"services":["dynamodb","rds","storagegateway","ec2","backup","elasticfilesystem","kms","tag","ssm","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticFileSystemReadOnlyAccess","PolicyName":"AmazonElasticFileSystemReadOnlyAccess","PolicyId":"ANPAIPN5S4NE5JJOKVC4Y","Path":"/","Description":"Provides read only access to Amazon EFS via the AWS Management Console.","DefaultVersionId":"v6"},"document":[{"Action":["cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricData","ec2:DescribeAvailabilityZones","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","elasticfilesystem:DescribeAccountPreferences","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeTags","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:ListTagsForResource","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ec2","elasticfilesystem","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDocDBFullAccess","PolicyName":"AmazonDocDBFullAccess","PolicyId":"ANPAIQKACUF6JJHALEG5K","Path":"/","Description":"Provides full access to Amazon DocumentDB with MongoDB compatibility. Note this policy also grants full access to publish on all SNS topics within the account and full access to Amazon RDS and Amazon Neptune.","DefaultVersionId":"v1"},"document":[{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBCluster","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBInstance","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","cloudwatch","ec2","kms","logs","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSConfigRole","PolicyName":"AWSConfigRole","PolicyId":"ANPAIQRXRDRGJUA33ELIO","Path":"/service-role/","Description":"Default policy for AWS Config service role.","DefaultVersionId":"v39"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetObject","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonFSxConsoleFullAccess","PolicyName":"AmazonFSxConsoleFullAccess","PolicyId":"ANPAITDDJ23Y5UZ2WCZRQ","Path":"/","Description":"Provides full access to Amazon FSx and access to related AWS services via the AWS Management Console.","DefaultVersionId":"v4"},"document":[{"Action":["cloudwatch:DescribeAlarms","ds:DescribeDirectories","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","firehose:ListDeliveryStreams","fsx:*","kms:ListAliases","logs:DescribeLogGroups","s3:ListBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ds","ec2","firehose","fsx","kms","logs","s3","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/SystemAdministrator","PolicyName":"SystemAdministrator","PolicyId":"ANPAITJPEZXCYCBXANDSW","Path":"/job-function/","Description":"Grants full access permissions necessary for resources required for application and development operations.","DefaultVersionId":"v6"},"document":[{"Action":["acm:Describe*","acm:Get*","acm:List*","acm:Request*","acm:Resend*","autoscaling:*","cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:ListPublicKeys","cloudtrail:ListTags","cloudtrail:LookupEvents","cloudtrail:StartLogging","cloudtrail:StopLogging","cloudwatch:*","codecommit:BatchGetRepositories","codecommit:CreateBranch","codecommit:CreateRepository","codecommit:Get*","codecommit:GitPull","codecommit:GitPush","codecommit:List*","codecommit:Put*","codecommit:Test*","codecommit:Update*","codedeploy:*","codepipeline:*","config:*","ds:*","ec2:Allocate*","ec2:AssignPrivateIpAddresses*","ec2:Associate*","ec2:Allocate*","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVpnGateway","ec2:Bundle*","ec2:Cancel*","ec2:Copy*","ec2:CreateCustomerGateway","ec2:CreateDhcpOptions","ec2:CreateFlowLogs","ec2:CreateImage","ec2:CreateInstanceExportTask","ec2:CreateInternetGateway","ec2:CreateKeyPair","ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreatePlacementGroup","ec2:CreateReservedInstancesListing","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSnapshot","ec2:CreateSpotDatafeedSubscription","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVolume","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:CreateVpnConnection","ec2:CreateVpnConnectionRoute","ec2:CreateVpnGateway","ec2:DeleteFlowLogs","ec2:DeleteKeyPair","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions","ec2:DeleteNatGateway","ec2:DeleteNetworkInterface","ec2:DeletePlacementGroup","ec2:DeleteSnapshot","ec2:DeleteSpotDatafeedSubscription","ec2:DeleteSubnet","ec2:DeleteTags","ec2:DeleteVpc","ec2:DeleteVpcEndpoints","ec2:DeleteVpnConnection","ec2:DeleteVpnConnectionRoute","ec2:DeleteVpnGateway","ec2:DeregisterImage","ec2:Describe*","ec2:DetachInternetGateway","ec2:DetachNetworkInterface","ec2:DetachVpnGateway","ec2:DisableVgwRoutePropagation","ec2:DisableVpcClassicLinkDnsSupport","ec2:DisassociateAddress","ec2:DisassociateRouteTable","ec2:EnableVgwRoutePropagation","ec2:EnableVolumeIO","ec2:EnableVpcClassicLinkDnsSupport","ec2:GetConsoleOutput","ec2:GetHostReservationPurchasePreview","ec2:GetLaunchTemplateData","ec2:GetPasswordData","ec2:Import*","ec2:Modify*","ec2:MonitorInstances","ec2:MoveAddressToVpc","ec2:Purchase*","ec2:RegisterImage","ec2:Release*","ec2:Replace*","ec2:ReportInstanceStatus","ec2:Request*","ec2:Reset*","ec2:RestoreAddressToClassic","ec2:RunScheduledInstances","ec2:UnassignPrivateIpAddresses","ec2:UnmonitorInstances","ec2:UpdateSecurityGroupRuleDescriptionsEgress","ec2:UpdateSecurityGroupRuleDescriptionsIngress","elasticloadbalancing:*","events:*","iam:GetAccount*","iam:GetContextKeys*","iam:GetCredentialReport","iam:ListAccountAliases","iam:ListGroups","iam:ListOpenIDConnectProviders","iam:ListPolicies","iam:ListPoliciesGrantingServiceAccess","iam:ListRoles","iam:ListSAMLProviders","iam:ListServerCertificates","iam:Simulate*","iam:UpdateServerCertificate","iam:UpdateSigningCertificate","kinesis:ListStreams","kinesis:PutRecord","kms:CreateAlias","kms:CreateKey","kms:DeleteAlias","kms:Describe*","kms:GenerateRandom","kms:Get*","kms:List*","kms:Encrypt","kms:ReEncrypt*","lambda:Create*","lambda:Delete*","lambda:Get*","lambda:InvokeFunction","lambda:List*","lambda:PublishVersion","lambda:Update*","logs:*","rds:Describe*","rds:ListTagsForResource","route53:*","route53domains:*","ses:*","sns:*","sqs:*","trustedadvisor:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AcceptVpcPeeringConnection","ec2:AttachClassicLinkVpc","ec2:AttachVolume","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateVpcPeeringConnection","ec2:DeleteCustomerGateway","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteNetworkAcl*","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DeleteVpcPeeringConnection","ec2:DetachClassicLinkVpc","ec2:DetachVolume","ec2:DisableVpcClassicLink","ec2:EnableVpcClassicLink","ec2:GetConsoleScreenshot","ec2:RebootInstances","ec2:RejectVpcPeeringConnection","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:RunInstances","ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetAccessKeyLastUsed","iam:GetGroup*","iam:GetInstanceProfile","iam:GetLoginProfile","iam:GetOpenIDConnectProvider","iam:GetPolicy*","iam:GetRole*","iam:GetSAMLProvider","iam:GetSSHPublicKey","iam:GetServerCertificate","iam:GetServiceLastAccessed*","iam:GetUser*","iam:ListAccessKeys","iam:ListAttached*","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfiles*","iam:ListMFADevices","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListSSHPublicKeys","iam:ListSigningCertificates","iam:ListUserPolicies","iam:Upload*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","iam:ListRoles","iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/rds-monitoring-role","arn:aws:iam::*:role/ec2-sysadmin-*","arn:aws:iam::*:role/ecr-sysadmin-*","arn:aws:iam::*:role/lambda-sysadmin-*"]}],"services":["acm","autoscaling","cloudtrail","cloudwatch","codecommit","codedeploy","codepipeline","config","ds","ec2","elasticloadbalancing","events","iam","kinesis","kms","lambda","logs","rds","route53","route53domains","ses","sns","sqs","trustedadvisor","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/SecurityAudit","PolicyName":"SecurityAudit","PolicyId":"ANPAIX2T3QCXHR2OGGCTO","Path":"/","Description":"The security audit template grants access to read security configuration metadata. It is useful for software that audits the configuration of an AWS account.","DefaultVersionId":"v35"},"document":[{"Action":["access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListTagsForResource","acm-pca:ListPermissions","acm:Describe*","acm:List*","application-autoscaling:Describe*","appmesh:Describe*","appmesh:List*","appsync:List*","athena:GetWorkGroup","athena:List*","autoscaling-plans:DescribeScalingPlans","autoscaling:Describe*","batch:DescribeComputeEnvironments","batch:DescribeJobDefinitions","chime:List*","cloud9:Describe*","cloud9:ListEnvironments","clouddirectory:ListDirectories","cloudformation:DescribeStack*","cloudformation:GetStackPolicy","cloudformation:GetTemplate","cloudformation:ListStack*","cloudfront:Get*","cloudfront:List*","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudhsm:ListLunaClients","cloudsearch:DescribeDomainEndpointOptions","cloudsearch:DescribeDomains","cloudsearch:DescribeServiceAccessPolicies","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:ListTagsForResource","codebuild:ListProjects","codecommit:BatchGetRepositories","codecommit:GetBranch","codecommit:GetObjectIdentifier","codecommit:GetRepository","codecommit:GetRepositoryTriggers","codecommit:List*","codedeploy:Batch*","codedeploy:Get*","codedeploy:List*","codepipeline:GetJobDetails","codepipeline:GetPipeline","codepipeline:GetPipelineExecution","codepipeline:GetPipelineState","codepipeline:ListPipelines","codestar:Describe*","codestar:List*","cognito-identity:ListIdentityPools","cognito-idp:DescribeIdentityProvider","cognito-idp:DescribeResourceServer","cognito-idp:DescribeRiskConfiguration","cognito-idp:DescribeUserImportJob","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:DescribeUserPoolDomain","cognito-idp:ListDevices","cognito-idp:ListGroups","cognito-idp:ListIdentityProviders","cognito-idp:ListResourceServers","cognito-idp:ListTagsForResource","cognito-idp:ListUserImportJobs","cognito-idp:ListUserPoolClients","cognito-idp:ListUserPools","cognito-idp:ListUsers","cognito-idp:ListUsersInGroup","cognito-sync:Describe*","cognito-sync:List*","comprehend:Describe*","comprehend:List*","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:EvaluateExpression","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","datapipeline:ValidatePipelineDefinition","datasync:Describe*","datasync:List*","dax:Describe*","dax:ListTags","detective:GetGraphIngestState","detective:ListGraphs","detective:ListMembers","directconnect:Describe*","dms:Describe*","dms:ListTagsForResource","ds:DescribeDirectories","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:DescribeTransitGatewayAttachments","ec2:DescribeTransitGatewayMulticastDomains","ec2:DescribeTransitGatewayPeeringAttachments","ec2:DescribeTransitGatewayRouteTables","ec2:DescribeTransitGatewayVpcAttachments","ec2:DescribeTransitGateways","ec2:GetManagedPrefixListAssociations","ec2:GetManagedPrefixListEntries","ec2:GetTransitGatewayAttachmentPropagations","ec2:GetTransitGatewayMulticastDomainAssociations","ec2:GetTransitGatewayPrefixListReferences","ec2:GetTransitGatewayRouteTableAssociations","ec2:GetTransitGatewayRouteTablePropagations","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr:DescribeImageScanFindings","ecr:DescribeImages","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListImages","ecr:ListTagsForResource","ecs:Describe*","ecs:List*","eks:DescribeCluster","eks:DescribeNodeGroup","eks:ListClusters","eks:ListNodeGroups","elasticache:Describe*","elasticache:ListTagsForResource","elasticbeanstalk:Describe*","elasticbeanstalk:DescribeApplications","elasticbeanstalk:ListTagsForResource","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeMountTargets","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:ListClusters","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","es:Describe*","es:ListDomainNames","es:ListElasticsearchInstanceTypeDetails","es:ListElasticsearchVersions","es:ListTags","events:Describe*","events:List*","events:TestEventPattern","firehose:Describe*","firehose:List*","fms:ListComplianceStatus","fms:ListPolicies","fsx:Describe*","fsx:List*","gamelift:ListBuilds","gamelift:ListFleets","glacier:DescribeVault","glacier:GetVaultAccessPolicy","glacier:ListVaults","globalaccelerator:Describe*","globalaccelerator:List*","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabases","glue:GetDevEndpoints","glue:GetJobs","greengrass:List*","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","iam:SimulateCustomPolicy","iam:SimulatePrincipalPolicy","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:GetPolicy","iot:GetPolicyVersion","iot:List*","kinesis:DescribeLimits","kinesis:DescribeStream","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kinesisanalytics:ListApplications","kms:Describe*","kms:Get*","kms:List*","lambda:GetAccountSettings","lambda:GetFunctionConfiguration","lambda:GetFunctionEventInvokeConfig","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:List*","license-manager:List*","lightsail:GetInstances","lightsail:GetLoadBalancers","logs:Describe*","logs:ListTagsLogGroup","machinelearning:DescribeMLModels","mediaconnect:Describe*","mediaconnect:List*","mediastore:GetContainerPolicy","mediastore:ListContainers","mq:DescribeBroker","mq:DescribeBrokerEngineTypes","mq:DescribeBrokerInstanceOptions","mq:DescribeConfiguration","mq:DescribeConfigurationRevision","mq:DescribeUser","mq:ListBrokers","mq:ListConfigurationRevisions","mq:ListConfigurations","mq:ListTags","mq:ListUsers","network-firewall:ListFirewalls","opsworks-cm:DescribeServers","opsworks:DescribeStacks","organizations:Describe*","organizations:List*","quicksight:Describe*","quicksight:List*","ram:List*","rds:Describe*","rds:DownloadDBLogFilePortion","rds:ListTagsForResource","redshift:Describe*","rekognition:Describe*","rekognition:List*","robomaker:Describe*","robomaker:List*","route53:Get*","route53:List*","route53domains:GetDomainDetail","route53domains:GetOperationDetail","route53domains:ListDomains","route53domains:ListOperations","route53domains:ListTagsForDomain","route53resolver:Get*","route53resolver:List*","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetAnalyticsConfiguration","s3:GetBucket*","s3:GetEncryptionConfiguration","s3:GetInventoryConfiguration","s3:GetLifecycleConfiguration","s3:GetMetricsConfiguration","s3:GetObjectAcl","s3:GetObjectVersionAcl","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","sagemaker:Describe*","sagemaker:List*","schemas:DescribeCodeBinding","schemas:DescribeDiscoverer","schemas:DescribeRegistry","schemas:DescribeSchema","schemas:ListDiscoverers","schemas:ListRegistries","schemas:ListSchemaVersions","schemas:ListSchemas","schemas:ListTagsForResource","sdb:DomainMetadata","sdb:ListDomains","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:ListSecrets","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:GetApplicationPolicy","serverlessrepo:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","servicequotas:ListTagsForResource","ses:GetIdentityDkimAttributes","ses:GetIdentityPolicies","ses:GetIdentityVerificationAttributes","ses:ListIdentities","ses:ListIdentityPolicies","ses:ListVerifiedEmailAddresses","shield:Describe*","shield:List*","snowball:ListClusters","snowball:ListJobs","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListDeadLetterSourceQueues","sqs:ListQueueTags","sqs:ListQueues","ssm:Describe*","ssm:GetAutomationExecution","ssm:ListAssociationVersions","ssm:ListAssociations","ssm:ListCommands","ssm:ListComplianceItems","ssm:ListComplianceSummaries","ssm:ListDocumentMetadataHistory","ssm:ListDocumentVersions","ssm:ListDocuments","ssm:ListInventoryEntries","ssm:ListOpsMetadata","ssm:ListResourceComplianceSummaries","ssm:ListResourceDataSync","ssm:ListTagsForResource","sso:DescribePermissionsPolicies","sso:List*","states:ListStateMachines","storagegateway:DescribeBandwidthRateLimit","storagegateway:DescribeCache","storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeGatewayInformation","storagegateway:DescribeMaintenanceStartTime","storagegateway:DescribeNFSFileShares","storagegateway:DescribeSnapshotSchedule","storagegateway:DescribeStorediSCSIVolumes","storagegateway:DescribeTapeArchives","storagegateway:DescribeTapeRecoveryPoints","storagegateway:DescribeTapes","storagegateway:DescribeUploadBuffer","storagegateway:DescribeVTLDevices","storagegateway:DescribeWorkingStorage","storagegateway:List*","support:DescribeTrustedAdvisorCheckRefreshStatuses","support:DescribeTrustedAdvisorCheckResult","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorChecks","tag:GetResources","tag:GetTagKeys","transfer:Describe*","transfer:List*","translate:List*","trustedadvisor:Describe*","waf-regional:GetWebACL","waf-regional:ListResourcesForWebACL","waf-regional:ListTagsForResource","waf-regional:ListWebACLs","waf:GetWebACL","waf:ListTagsForResource","waf:ListWebACLs","wafv2:GetWebACL","wafv2:ListAvailableManagedRuleGroups","wafv2:ListIPSets","wafv2:ListLoggingConfigurations","wafv2:ListRegexPatternSets","wafv2:ListResourcesForWebACL","wafv2:ListRuleGroups","wafv2:ListTagsForResource","wafv2:ListWebACLs","workdocs:DescribeResourcePermissions","workspaces:Describe*","xray:GetEncryptionConfig","xray:GetGroup","xray:GetGroups","xray:GetSamplingRules","xray:GetSamplingTargets","xray:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/apis","arn:aws:apigateway:*::/apis/*/routes","arn:aws:apigateway:*::/apis/*/stages","arn:aws:apigateway:*::/apis/*/stages/*","arn:aws:apigateway:*::/clientcertificates/*","arn:aws:apigateway:*::/restapis","arn:aws:apigateway:*::/restapis/*/authorizers","arn:aws:apigateway:*::/restapis/*/authorizers/*","arn:aws:apigateway:*::/restapis/*/documentation/versions","arn:aws:apigateway:*::/restapis/*/resources","arn:aws:apigateway:*::/restapis/*/resources/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*","arn:aws:apigateway:*::/restapis/*/stages","arn:aws:apigateway:*::/restapis/*/stages/*","arn:aws:apigateway:*::/tags/*","arn:aws:apigateway:*::/vpclinks"]}],"services":["access-analyzer","acm-pca","acm","application-autoscaling","appmesh","appsync","athena","autoscaling-plans","autoscaling","batch","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-identity","cognito-idp","cognito-sync","comprehend","config","datapipeline","datasync","dax","detective","directconnect","dms","ds","dynamodb","ec2","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","events","firehose","fms","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","guardduty","iam","inspector","iot","kinesis","kinesisanalytics","kms","lambda","license-manager","lightsail","logs","machinelearning","mediaconnect","mediastore","mq","network-firewall","opsworks-cm","opsworks","organizations","quicksight","ram","rds","redshift","rekognition","robomaker","route53","route53domains","route53resolver","s3","sagemaker","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicequotas","ses","shield","snowball","sns","sqs","ssm","sso","states","storagegateway","support","tag","transfer","translate","trustedadvisor","waf-regional","waf","wafv2","workdocs","workspaces","xray","apigateway"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/NeptuneFullAccess","PolicyName":"NeptuneFullAccess","PolicyId":"ANPAIXSDEYRCNJRC6ITFK","Path":"/","Description":"Provides full access to Amazon Neptune. Note this policy also grants full access to publish on all SNS topics within the account and full access to Amazon RDS. For more information, see https://aws.amazon.com/neptune/faqs/.","DefaultVersionId":"v5"},"document":[{"Action":["rds:CreateDBCluster","rds:CreateDBInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:*"]},{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","cloudwatch","ec2","kms","logs","sns","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess","PolicyName":"AmazonDynamoDBReadOnlyAccess","PolicyId":"ANPAIY2XFNA232XJ6J7X2","Path":"/","Description":"Provides read only access to Amazon DynamoDB via the AWS Management Console.","DefaultVersionId":"v13"},"document":[{"Action":["application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:GetMetricData","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","dynamodb:BatchGetItem","dynamodb:Describe*","dynamodb:List*","dynamodb:GetItem","dynamodb:Query","dynamodb:Scan","dynamodb:PartiQLSelect","dax:Describe*","dax:List*","dax:GetItem","dax:BatchGetItem","dax:Query","dax:Scan","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:ListAliases","sns:ListSubscriptionsByTopic","sns:ListTopics","lambda:ListFunctions","lambda:ListEventSourceMappings","lambda:GetFunctionConfiguration","resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroup","resource-groups:GetGroupQuery","tag:GetResources","kinesis:ListStreams","kinesis:DescribeStream","kinesis:DescribeStreamSummary"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetInsightRuleReport"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"]}],"services":["application-autoscaling","cloudwatch","datapipeline","dynamodb","dax","ec2","iam","kms","sns","lambda","resource-groups","tag","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess","PolicyName":"AmazonElasticMapReduceFullAccess","PolicyId":"ANPAIZP5JFP3AMSGINBB2","Path":"/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-managed-iam-policies.html. Provides full access to Amazon Elastic MapReduce and underlying services that it requires such as EC2 and S3","DefaultVersionId":"v7"},"document":[{"Action":["cloudwatch:*","cloudformation:CreateStack","cloudformation:DescribeStackEvents","ec2:AuthorizeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress","ec2:CancelSpotInstanceRequests","ec2:CreateRoute","ec2:CreateSecurityGroup","ec2:CreateTags","ec2:DeleteRoute","ec2:DeleteTags","ec2:DeleteSecurityGroup","ec2:DescribeAvailabilityZones","ec2:DescribeAccountAttributes","ec2:DescribeInstances","ec2:DescribeKeyPairs","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSpotInstanceRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","ec2:DescribeRouteTables","ec2:DescribeNetworkAcls","ec2:CreateVpcEndpoint","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:RequestSpotInstances","ec2:RevokeSecurityGroupEgress","ec2:RunInstances","ec2:TerminateInstances","elasticmapreduce:*","iam:GetPolicy","iam:GetPolicyVersion","iam:ListRoles","iam:PassRole","kms:List*","s3:*","sdb:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","cloudformation","ec2","elasticmapreduce","iam","kms","s3","sdb"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonWorkSpacesAdmin","PolicyName":"AmazonWorkSpacesAdmin","PolicyId":"ANPAJ26AU6ATUQCT5KVJU","Path":"/","Description":"Provides access to Amazon WorkSpaces administrative actions via AWS SDK and CLI.","DefaultVersionId":"v2"},"document":[{"Action":["workspaces:CreateWorkspaces","workspaces:DescribeWorkspaces","workspaces:RebootWorkspaces","workspaces:RebuildWorkspaces","workspaces:TerminateWorkspaces","workspaces:DescribeWorkspaceDirectories","workspaces:DescribeWorkspaceBundles","workspaces:ModifyWorkspaceProperties","workspaces:StopWorkspaces","workspaces:StartWorkspaces","workspaces:DescribeWorkspacesConnectionStatus","workspaces:CreateTags","workspaces:DeleteTags","workspaces:DescribeTags","kms:ListKeys","kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["workspaces","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/job-function/DataScientist","PolicyName":"DataScientist","PolicyId":"ANPAJ5YHI2BQW7EQFYDXS","Path":"/job-function/","Description":"Grants permissions to AWS data analytics services.","DefaultVersionId":"v5"},"document":[{"Action":["autoscaling:*","cloudwatch:*","cloudformation:CreateStack","cloudformation:DescribeStackEvents","datapipeline:Describe*","datapipeline:ListPipelines","datapipeline:GetPipelineDefinition","datapipeline:QueryObjects","dynamodb:*","ec2:CancelSpotInstanceRequests","ec2:CancelSpotFleetRequests","ec2:CreateTags","ec2:DeleteTags","ec2:Describe*","ec2:ModifyImageAttribute","ec2:ModifyInstanceAttribute","ec2:ModifySpotFleetRequest","ec2:RequestSpotInstances","ec2:RequestSpotFleet","elasticfilesystem:*","elasticmapreduce:*","es:*","firehose:*","fsx:DescribeFileSystems","iam:GetInstanceProfile","iam:GetRole","iam:GetPolicy","iam:GetPolicyVersion","iam:ListRoles","kinesis:*","kms:List*","lambda:Create*","lambda:Delete*","lambda:Get*","lambda:InvokeFunction","lambda:PublishVersion","lambda:Update*","lambda:List*","machinelearning:*","sdb:*","rds:*","sns:ListSubscriptions","sns:ListTopics","logs:DescribeLogStreams","logs:GetLogEvents","redshift:*","s3:CreateBucket","sns:CreateTopic","sns:Get*","sns:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:Abort*","s3:DeleteObject","s3:Get*","s3:List*","s3:PutAccelerateConfiguration","s3:PutBucketCors","s3:PutBucketLogging","s3:PutBucketNotification","s3:PutBucketTagging","s3:PutObject","s3:Replicate*","s3:RestoreObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/DataPipelineDefaultRole","arn:aws:iam::*:role/DataPipelineDefaultResourceRole","arn:aws:iam::*:role/EMR_EC2_DefaultRole","arn:aws:iam::*:role/EMR_DefaultRole","arn:aws:iam::*:role/kinesis-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":["arn:aws:sagemaker:*:*:domain/*","arn:aws:sagemaker:*:*:user-profile/*","arn:aws:sagemaker:*:*:app/*","arn:aws:sagemaker:*:*:flow-definition/*"],"Resource":null},{"Action":["sagemaker:CreatePresignedDomainUrl","sagemaker:DescribeDomain","sagemaker:ListDomains","sagemaker:DescribeUserProfile","sagemaker:ListUserProfiles","sagemaker:*App","sagemaker:ListApps"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*FlowDefinition","sagemaker:*FlowDefinitions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudwatch","cloudformation","datapipeline","dynamodb","ec2","elasticfilesystem","elasticmapreduce","es","firehose","fsx","iam","kinesis","kms","lambda","machinelearning","sdb","rds","sns","logs","redshift","s3","sagemaker"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy","PolicyName":"AWSSupportServiceRolePolicy","PolicyId":"ANPAJ7W6266ELXF5MISDS","Path":"/aws-service-role/","Description":"Allows AWS Support to access AWS resources to provide billing, administrative, and support services.","DefaultVersionId":"v15"},"document":[{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/account","arn:aws:apigateway:*::/apis","arn:aws:apigateway:*::/apis/*","arn:aws:apigateway:*::/apis/*/authorizers","arn:aws:apigateway:*::/apis/*/authorizers/*","arn:aws:apigateway:*::/apis/*/deployments","arn:aws:apigateway:*::/apis/*/deployments/*","arn:aws:apigateway:*::/apis/*/integrations","arn:aws:apigateway:*::/apis/*/integrations/*","arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses","arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*","arn:aws:apigateway:*::/apis/*/models","arn:aws:apigateway:*::/apis/*/models/*","arn:aws:apigateway:*::/apis/*/routes","arn:aws:apigateway:*::/apis/*/routes/*","arn:aws:apigateway:*::/apis/*/routes/*/routeresponses","arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*","arn:aws:apigateway:*::/apis/*/stages","arn:aws:apigateway:*::/apis/*/stages/*","arn:aws:apigateway:*::/clientcertificates","arn:aws:apigateway:*::/clientcertificates/*","arn:aws:apigateway:*::/domainnames","arn:aws:apigateway:*::/domainnames/*","arn:aws:apigateway:*::/domainnames/*/apimappings","arn:aws:apigateway:*::/domainnames/*/apimappings/*","arn:aws:apigateway:*::/domainnames/*/basepathmappings","arn:aws:apigateway:*::/domainnames/*/basepathmappings/*","arn:aws:apigateway:*::/restapis","arn:aws:apigateway:*::/restapis/*","arn:aws:apigateway:*::/restapis/*/authorizers","arn:aws:apigateway:*::/restapis/*/authorizers/*","arn:aws:apigateway:*::/restapis/*/deployments","arn:aws:apigateway:*::/restapis/*/deployments/*","arn:aws:apigateway:*::/restapis/*/models","arn:aws:apigateway:*::/restapis/*/models/*","arn:aws:apigateway:*::/restapis/*/models/*/default_template","arn:aws:apigateway:*::/restapis/*/resources","arn:aws:apigateway:*::/restapis/*/resources/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*","arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration","arn:aws:apigateway:*::/restapis/*/stages","arn:aws:apigateway:*::/restapis/*/stages/*"]},{"Action":["iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"]},{"Action":["a4b:getDevice","a4b:getProfile","a4b:getRoom","a4b:getRoomSkillParameter","a4b:getSkillGroup","a4b:searchDevices","a4b:searchProfiles","a4b:searchRooms","a4b:searchSkillGroups","access-analyzer:getFinding","access-analyzer:listAnalyzers","access-analyzer:listArchiveRules","access-analyzer:listFindings","acm-pca:describeCertificateAuthority","acm-pca:describeCertificateAuthorityAuditReport","acm-pca:getCertificate","acm-pca:getCertificateAuthorityCertificate","acm-pca:getCertificateAuthorityCsr","acm-pca:listCertificateAuthorities","acm-pca:listTags","acm:describeCertificate","acm:getCertificate","acm:listCertificates","acm:listTagsForCertificate","amplify:getApp","amplify:getBranch","amplify:getDomainAssociation","amplify:getJob","amplify:getWebhook","amplify:listApps","amplify:listWebhooks","application-autoscaling:describeScalableTargets","application-autoscaling:describeScalingActivities","application-autoscaling:describeScalingPolicies","application-autoscaling:describeScheduledActions","appmesh:describeMesh","appmesh:describeRoute","appmesh:describeVirtualNode","appmesh:describeVirtualRouter","appmesh:describeVirtualService","appmesh:listMeshes","appmesh:listRoutes","appmesh:listVirtualNodes","appmesh:listVirtualRouters","appmesh:listVirtualServices","appstream:describeDirectoryConfigs","appstream:describeFleets","appstream:describeImageBuilders","appstream:describeImages","appstream:describeSessions","appstream:describeStacks","appstream:listAssociatedFleets","appstream:listAssociatedStacks","appstream:listTagsForResource","appsync:getFunction","appsync:getGraphqlApi","appsync:getIntrospectionSchema","appsync:getResolver","appsync:getSchemaCreationStatus","appsync:getType","appsync:listDataSources","appsync:listFunctions","appsync:listGraphqlApis","appsync:listResolvers","appsync:listTypes","athena:batchGetNamedQuery","athena:batchGetQueryExecution","athena:getNamedQuery","athena:getQueryExecution","athena:getWorkGroup","athena:listNamedQueries","athena:listQueryExecutions","athena:listTagsForResource","athena:listWorkGroups","autoscaling-plans:describeScalingPlanResources","autoscaling-plans:describeScalingPlans","autoscaling-plans:getScalingPlanResourceForecastData","autoscaling:describeAccountLimits","autoscaling:describeAdjustmentTypes","autoscaling:describeAutoScalingGroups","autoscaling:describeAutoScalingInstances","autoscaling:describeAutoScalingNotificationTypes","autoscaling:describeInstanceRefreshes","autoscaling:describeLaunchConfigurations","autoscaling:describeLifecycleHookTypes","autoscaling:describeLifecycleHooks","autoscaling:describeLoadBalancerTargetGroups","autoscaling:describeLoadBalancers","autoscaling:describeMetricCollectionTypes","autoscaling:describeNotificationConfigurations","autoscaling:describePolicies","autoscaling:describeScalingActivities","autoscaling:describeScalingProcessTypes","autoscaling:describeScheduledActions","autoscaling:describeTags","autoscaling:describeTerminationPolicyTypes","backup:describeBackupJob","backup:describeBackupVault","backup:describeProtectedResource","backup:describeRecoveryPoint","backup:describeRestoreJob","backup:getBackupPlan","backup:getBackupPlanFromJSON","backup:getBackupPlanFromTemplate","backup:getBackupSelection","backup:getBackupVaultAccessPolicy","backup:getBackupVaultNotifications","backup:getRecoveryPointRestoreMetadata","backup:getSupportedResourceTypes","backup:listBackupJobs","backup:listBackupPlanTemplates","backup:listBackupPlanVersions","backup:listBackupPlans","backup:listBackupSelections","backup:listBackupVaults","backup:listProtectedResources","backup:listRecoveryPointsByBackupVault","backup:listRecoveryPointsByResource","backup:listRestoreJobs","backup:listTags","batch:describeComputeEnvironments","batch:describeJobDefinitions","batch:describeJobQueues","batch:describeJobs","batch:listJobs","braket:getDevice","braket:getQuantumTask","braket:searchDevices","braket:searchQuantumTasks","budgets:viewBudget","ce:getCostAndUsage","ce:getCostAndUsageWithResources","ce:getCostForecast","ce:getDimensionValues","ce:getReservationCoverage","ce:getReservationPurchaseRecommendation","ce:getReservationUtilization","ce:getRightsizingRecommendation","ce:getSavingsPlansCoverage","ce:getSavingsPlansPurchaseRecommendation","ce:getSavingsPlansUtilization","ce:getSavingsPlansUtilizationDetails","ce:getTags","cloud9:describeEnvironmentMemberships","cloud9:describeEnvironments","cloud9:listEnvironments","clouddirectory:getDirectory","clouddirectory:listDirectories","cloudformation:describeAccountLimits","cloudformation:describeChangeSet","cloudformation:describeStackEvents","cloudformation:describeStackInstance","cloudformation:describeStackResource","cloudformation:describeStackResources","cloudformation:describeStackSet","cloudformation:describeStackSetOperation","cloudformation:describeStacks","cloudformation:estimateTemplateCost","cloudformation:getStackPolicy","cloudformation:getTemplate","cloudformation:getTemplateSummary","cloudformation:listChangeSets","cloudformation:listExports","cloudformation:listImports","cloudformation:listStackInstances","cloudformation:listStackResources","cloudformation:listStackSetOperationResults","cloudformation:listStackSetOperations","cloudformation:listStackSets","cloudformation:listStacks","cloudfront:getCloudFrontOriginAccessIdentity","cloudfront:getCloudFrontOriginAccessIdentityConfig","cloudfront:getDistribution","cloudfront:getDistributionConfig","cloudfront:getInvalidation","cloudfront:getStreamingDistribution","cloudfront:getStreamingDistributionConfig","cloudfront:listCloudFrontOriginAccessIdentities","cloudfront:listDistributions","cloudfront:listDistributionsByWebACLId","cloudfront:listInvalidations","cloudfront:listStreamingDistributions","cloudhsm:describeBackups","cloudhsm:describeClusters","cloudsearch:describeAnalysisSchemes","cloudsearch:describeAvailabilityOptions","cloudsearch:describeDomains","cloudsearch:describeExpressions","cloudsearch:describeIndexFields","cloudsearch:describeScalingParameters","cloudsearch:describeServiceAccessPolicies","cloudsearch:describeSuggesters","cloudsearch:listDomainNames","cloudtrail:describeTrails","cloudtrail:getEventSelectors","cloudtrail:getInsightSelectors","cloudtrail:getTrail","cloudtrail:getTrailStatus","cloudtrail:listPublicKeys","cloudtrail:listTags","cloudtrail:listTrails","cloudtrail:lookupEvents","cloudwatch:describeAlarmHistory","cloudwatch:describeAlarms","cloudwatch:describeAlarmsForMetric","cloudwatch:describeAnomalyDetectors","cloudwatch:getDashboard","cloudwatch:getMetricData","cloudwatch:getMetricStatistics","cloudwatch:listDashboards","cloudwatch:listMetrics","codeartifact:describeDomain","codeartifact:describePackageVersion","codeartifact:describeRepository","codeartifact:getDomainPermissionsPolicy","codeartifact:getRepositoryEndPoint","codeartifact:getRepositoryPermissionsPolicy","codeartifact:listDomains","codeartifact:listPackageVersionAssets","codeartifact:listPackageVersions","codeartifact:listPackages","codeartifact:listRepositories","codeartifact:listRepositoriesInDomain","codebuild:batchGetBuildBatches","codebuild:batchGetBuilds","codebuild:batchGetProjects","codebuild:listBuildBatches","codebuild:listBuildBatchesForProject","codebuild:listBuilds","codebuild:listBuildsForProject","codebuild:listCuratedEnvironmentImages","codebuild:listProjects","codebuild:listSourceCredentials","codecommit:batchGetRepositories","codecommit:getBranch","codecommit:getRepository","codecommit:getRepositoryTriggers","codecommit:listBranches","codecommit:listRepositories","codedeploy:batchGetApplicationRevisions","codedeploy:batchGetApplications","codedeploy:batchGetDeploymentGroups","codedeploy:batchGetDeploymentInstances","codedeploy:batchGetDeploymentTargets","codedeploy:batchGetDeployments","codedeploy:batchGetOnPremisesInstances","codedeploy:getApplication","codedeploy:getApplicationRevision","codedeploy:getDeployment","codedeploy:getDeploymentConfig","codedeploy:getDeploymentGroup","codedeploy:getDeploymentInstance","codedeploy:getDeploymentTarget","codedeploy:getOnPremisesInstance","codedeploy:listApplicationRevisions","codedeploy:listApplications","codedeploy:listDeploymentConfigs","codedeploy:listDeploymentGroups","codedeploy:listDeploymentInstances","codedeploy:listDeploymentTargets","codedeploy:listDeployments","codedeploy:listGitHubAccountTokenNames","codedeploy:listOnPremisesInstances","codepipeline:getJobDetails","codepipeline:getPipeline","codepipeline:getPipelineExecution","codepipeline:getPipelineState","codepipeline:listActionExecutions","codepipeline:listActionTypes","codepipeline:listPipelineExecutions","codepipeline:listPipelines","codepipeline:listWebhooks","codestar:describeProject","codestar:listProjects","codestar:listResources","codestar:listTeamMembers","codestar:listUserProfiles","cognito-identity:describeIdentityPool","cognito-identity:getIdentityPoolRoles","cognito-identity:listIdentities","cognito-identity:listIdentityPools","cognito-idp:adminGetUser","cognito-idp:describeIdentityProvider","cognito-idp:describeResourceServer","cognito-idp:describeRiskConfiguration","cognito-idp:describeUserImportJob","cognito-idp:describeUserPool","cognito-idp:describeUserPoolClient","cognito-idp:describeUserPoolDomain","cognito-idp:getGroup","cognito-idp:getUICustomization","cognito-idp:getUser","cognito-idp:getUserPoolMfaConfig","cognito-idp:listGroups","cognito-idp:listIdentityProviders","cognito-idp:listResourceServers","cognito-idp:listUserImportJobs","cognito-idp:listUserPoolClients","cognito-idp:listUserPools","cognito-sync:describeDataset","cognito-sync:describeIdentityPoolUsage","cognito-sync:describeIdentityUsage","cognito-sync:getCognitoEvents","cognito-sync:getIdentityPoolConfiguration","cognito-sync:listDatasets","cognito-sync:listIdentityPoolUsage","compute-optimizer:getAutoScalingGroupRecommendations","compute-optimizer:getEC2InstanceRecommendations","compute-optimizer:getEC2RecommendationProjectedMetrics","compute-optimizer:getEnrollmentStatus","compute-optimizer:getRecommendationSummaries","compute-optimizer:getEBSVolumeRecommendations","config:describeConfigRuleEvaluationStatus","config:describeConfigRules","config:describeConfigurationRecorderStatus","config:describeConfigurationRecorders","config:describeDeliveryChannelStatus","config:describeDeliveryChannels","config:getResourceConfigHistory","config:listDiscoveredResources","connect:describeUser","connect:getCurrentMetricData","connect:getMetricData","connect:listRoutingProfiles","connect:listSecurityProfiles","connect:listUsers","controltower:describeAccountFactoryConfig","controltower:describeCoreService","controltower:describeGuardrail","controltower:describeGuardrailForTarget","controltower:describeManagedAccount","controltower:describeSingleSignOn","controltower:getAvailableUpdates","controltower:getHomeRegion","controltower:getLandingZoneStatus","controltower:listDirectoryGroups","controltower:listGuardrailViolations","controltower:listGuardrailsForTarget","controltower:listManagedAccounts","controltower:listManagedAccountsForGuardrail","controltower:listManagedAccountsForParent","controltower:listManagedOrganizationalUnits","controltower:listManagedOrganizationalUnitsForGuardrail","databrew:describeDataset","databrew:describeJob","databrew:describeProject","databrew:describeRecipe","databrew:listDatasets","databrew:listJobRuns","databrew:listJobs","databrew:listProjects","databrew:listRecipes","databrew:listRecipeVersions","databrew:listTagsForResource","datapipeline:describeObjects","datapipeline:describePipelines","datapipeline:getPipelineDefinition","datapipeline:listPipelines","datapipeline:queryObjects","datasync:describeAgent","datasync:describeLocationEfs","datasync:describeLocationFsxWindows","datasync:describeLocationNfs","datasync:describeLocationObjectStorage","datasync:describeLocationS3","datasync:describeLocationSmb","datasync:describeTask","datasync:describeTaskExecution","datasync:listAgents","datasync:listLocations","datasync:listTaskExecutions","datasync:listTasks","dax:describeClusters","dax:describeDefaultParameters","dax:describeEvents","dax:describeParameterGroups","dax:describeParameters","dax:describeSubnetGroups","detective:getMembers","detective:listGraphs","detective:listInvitations","detective:listMembers","devicefarm:getAccountSettings","devicefarm:getDevice","devicefarm:getDevicePool","devicefarm:getDevicePoolCompatibility","devicefarm:getJob","devicefarm:getProject","devicefarm:getRemoteAccessSession","devicefarm:getRun","devicefarm:getSuite","devicefarm:getTest","devicefarm:getTestGridProject","devicefarm:getTestGridSession","devicefarm:getUpload","devicefarm:listArtifacts","devicefarm:listDevicePools","devicefarm:listDevices","devicefarm:listJobs","devicefarm:listProjects","devicefarm:listRemoteAccessSessions","devicefarm:listRuns","devicefarm:listSamples","devicefarm:listSuites","devicefarm:listTestGridProjects","devicefarm:listTestGridSessionActions","devicefarm:listTestGridSessionArtifacts","devicefarm:listTestGridSessions","devicefarm:listTests","devicefarm:listUniqueProblems","devicefarm:listUploads","directconnect:describeConnections","directconnect:describeConnectionsOnInterconnect","directconnect:describeInterconnects","directconnect:describeLocations","directconnect:describeVirtualGateways","directconnect:describeVirtualInterfaces","dlm:getLifecyclePolicies","dlm:getLifecyclePolicy","dms:describeAccountAttributes","dms:describeConnections","dms:describeEndpointTypes","dms:describeEndpoints","dms:describeOrderableReplicationInstances","dms:describeRefreshSchemasStatus","dms:describeReplicationInstances","dms:describeReplicationSubnetGroups","ds:describeConditionalForwarders","ds:describeDirectories","ds:describeEventTopics","ds:describeSnapshots","ds:describeTrusts","ds:getDirectoryLimits","ds:getSnapshotLimits","ds:listIpRoutes","ds:listSchemaExtensions","ds:listTagsForResource","dynamodb:describeBackup","dynamodb:describeContinuousBackups","dynamodb:describeGlobalTable","dynamodb:describeLimits","dynamodb:describeStream","dynamodb:describeTable","dynamodb:describeTimeToLive","dynamodb:listBackups","dynamodb:listGlobalTables","dynamodb:listStreams","dynamodb:listTables","dynamodb:listTagsOfResource","ec2:acceptReservedInstancesExchangeQuote","ec2:cancelReservedInstancesListing","ec2:createReservedInstancesListing","ec2:describeAccountAttributes","ec2:describeAddresses","ec2:describeAvailabilityZones","ec2:describeBundleTasks","ec2:describeByoipCidrs","ec2:describeCapacityReservations","ec2:describeClassicLinkInstances","ec2:describeClientVpnAuthorizationRules","ec2:describeClientVpnConnections","ec2:describeClientVpnEndpoints","ec2:describeClientVpnRoutes","ec2:describeClientVpnTargetNetworks","ec2:describeCoipPools","ec2:describeConversionTasks","ec2:describeCustomerGateways","ec2:describeDhcpOptions","ec2:describeElasticGpus","ec2:describeExportImageTasks","ec2:describeExportTasks","ec2:describeFastSnapshotRestores","ec2:describeFleetHistory","ec2:describeFleetInstances","ec2:describeFleets","ec2:describeFlowLogs","ec2:describeHostReservationOfferings","ec2:describeHostReservations","ec2:describeHosts","ec2:describeIdFormat","ec2:describeIdentityIdFormat","ec2:describeImageAttribute","ec2:describeImages","ec2:describeImportImageTasks","ec2:describeImportSnapshotTasks","ec2:describeInstanceAttribute","ec2:describeInstanceStatus","ec2:describeInstances","ec2:describeInternetGateways","ec2:describeKeyPairs","ec2:describeLaunchTemplateVersions","ec2:describeLaunchTemplates","ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations","ec2:describeLocalGatewayRouteTableVpcAssociations","ec2:describeLocalGatewayRouteTables","ec2:describeLocalGatewayVirtualInterfaceGroups","ec2:describeLocalGatewayVirtualInterfaces","ec2:describeLocalGateways","ec2:describeMovingAddresses","ec2:describeNatGateways","ec2:describeNetworkAcls","ec2:describeNetworkInterfaceAttribute","ec2:describeNetworkInterfaces","ec2:describePlacementGroups","ec2:describePrefixLists","ec2:describePublicIpv4Pools","ec2:describeRegions","ec2:describeReservedInstances","ec2:describeReservedInstancesListings","ec2:describeReservedInstancesModifications","ec2:describeReservedInstancesOfferings","ec2:describeRouteTables","ec2:describeScheduledInstances","ec2:describeSecurityGroups","ec2:describeSnapshotAttribute","ec2:describeSnapshots","ec2:describeSpotDatafeedSubscription","ec2:describeSpotFleetInstances","ec2:describeSpotFleetRequestHistory","ec2:describeSpotFleetRequests","ec2:describeSpotInstanceRequests","ec2:describeSpotPriceHistory","ec2:describeSubnets","ec2:describeTags","ec2:describeTrafficMirrorFilters","ec2:describeTrafficMirrorSessions","ec2:describeTrafficMirrorTargets","ec2:describeTransitGatewayAttachments","ec2:describeTransitGatewayRouteTables","ec2:describeTransitGatewayVpcAttachments","ec2:describeTransitGateways","ec2:describeVolumeAttribute","ec2:describeVolumeStatus","ec2:describeVolumes","ec2:describeVolumesModifications","ec2:describeVpcAttribute","ec2:describeVpcClassicLink","ec2:describeVpcClassicLinkDnsSupport","ec2:describeVpcEndpointConnectionNotifications","ec2:describeVpcEndpointConnections","ec2:describeVpcEndpointServiceConfigurations","ec2:describeVpcEndpointServicePermissions","ec2:describeVpcEndpointServices","ec2:describeVpcEndpoints","ec2:describeVpcPeeringConnections","ec2:describeVpcs","ec2:describeVpnConnections","ec2:describeVpnGateways","ec2:getCoipPoolUsage","ec2:getConsoleScreenshot","ec2:getReservedInstancesExchangeQuote","ec2:getTransitGatewayAttachmentPropagations","ec2:getTransitGatewayRouteTableAssociations","ec2:getTransitGatewayRouteTablePropagations","ec2:modifyReservedInstances","ec2:purchaseReservedInstancesOffering","ec2:searchLocalGatewayRoutes","ecr:batchCheckLayerAvailability","ecr:describeImages","ecr:describeRepositories","ecr:getRepositoryPolicy","ecr:listImages","ecs:describeClusters","ecs:describeContainerInstances","ecs:describeServices","ecs:describeTaskDefinition","ecs:describeTasks","ecs:listClusters","ecs:listContainerInstances","ecs:listServices","ecs:listTaskDefinitions","ecs:listTasks","eks:describeCluster","eks:describeFargateProfile","eks:describeNodegroup","eks:describeUpdate","eks:listClusters","eks:listFargateProfiles","eks:listNodegroups","eks:listUpdates","elasticache:describeCacheClusters","elasticache:describeCacheEngineVersions","elasticache:describeCacheParameterGroups","elasticache:describeCacheParameters","elasticache:describeCacheSecurityGroups","elasticache:describeCacheSubnetGroups","elasticache:describeEngineDefaultParameters","elasticache:describeEvents","elasticache:describeReplicationGroups","elasticache:describeReservedCacheNodes","elasticache:describeReservedCacheNodesOfferings","elasticache:describeSnapshots","elasticache:listAllowedNodeTypeModifications","elasticache:listTagsForResource","elasticbeanstalk:checkDNSAvailability","elasticbeanstalk:describeApplicationVersions","elasticbeanstalk:describeApplications","elasticbeanstalk:describeConfigurationOptions","elasticbeanstalk:describeConfigurationSettings","elasticbeanstalk:describeEnvironmentHealth","elasticbeanstalk:describeEnvironmentManagedActionHistory","elasticbeanstalk:describeEnvironmentManagedActions","elasticbeanstalk:describeEnvironmentResources","elasticbeanstalk:describeEnvironments","elasticbeanstalk:describeEvents","elasticbeanstalk:describeInstancesHealth","elasticbeanstalk:describePlatformVersion","elasticbeanstalk:listAvailableSolutionStacks","elasticbeanstalk:listPlatformVersions","elasticbeanstalk:validateConfigurationSettings","elasticfilesystem:describeAccessPoints","elasticfilesystem:describeFileSystemPolicy","elasticfilesystem:describeFileSystems","elasticfilesystem:describeLifecycleConfiguration","elasticfilesystem:describeMountTargetSecurityGroups","elasticfilesystem:describeMountTargets","elasticfilesystem:describeTags","elasticfilesystem:listTagsForResource","elasticloadbalancing:describeInstanceHealth","elasticloadbalancing:describeListenerCertificates","elasticloadbalancing:describeListeners","elasticloadbalancing:describeLoadBalancerAttributes","elasticloadbalancing:describeLoadBalancerPolicies","elasticloadbalancing:describeLoadBalancerPolicyTypes","elasticloadbalancing:describeLoadBalancers","elasticloadbalancing:describeRules","elasticloadbalancing:describeSSLPolicies","elasticloadbalancing:describeTags","elasticloadbalancing:describeTargetGroupAttributes","elasticloadbalancing:describeTargetGroups","elasticloadbalancing:describeTargetHealth","elasticmapreduce:describeCluster","elasticmapreduce:describeSecurityConfiguration","elasticmapreduce:describeStep","elasticmapreduce:listBootstrapActions","elasticmapreduce:listClusters","elasticmapreduce:listInstanceGroups","elasticmapreduce:listInstances","elasticmapreduce:listSecurityConfigurations","elasticmapreduce:listSteps","elastictranscoder:listJobsByPipeline","elastictranscoder:listJobsByStatus","elastictranscoder:listPipelines","elastictranscoder:listPresets","elastictranscoder:readPipeline","elastictranscoder:readPreset","es:describeElasticsearchDomain","es:describeElasticsearchDomainConfig","es:describeElasticsearchDomains","es:listDomainNames","es:listTags","events:describeEventBus","events:describeEventSource","events:describePartnerEventSource","events:describeRule","events:listEventBuses","events:listEventSources","events:listPartnerEventSourceAccounts","events:listPartnerEventSources","events:listRuleNamesByTarget","events:listRules","events:listTargetsByRule","events:testEventPattern","firehose:describeDeliveryStream","firehose:listDeliveryStreams","fms:getAdminAccount","fms:getComplianceDetail","fms:getNotificationChannel","fms:getPolicy","fms:getProtectionStatus","fms:listComplianceStatus","fms:listMemberAccounts","fms:listPolicies","forecast:describeDataset","forecast:describeDatasetGroup","forecast:describeDatasetImportJob","forecast:describeForecast","forecast:describeForecastExportJob","forecast:describePredictor","forecast:getAccuracyMetrics","forecast:listDatasetGroups","forecast:listDatasetImportJobs","forecast:listDatasets","forecast:listForecastExportJobs","forecast:listForecasts","forecast:listPredictors","fsx:describeBackups","fsx:describeDataRepositoryTasks","fsx:describeFileSystems","fsx:listTagsForResource","glacier:describeJob","glacier:describeVault","glacier:getDataRetrievalPolicy","glacier:getVaultAccessPolicy","glacier:getVaultLock","glacier:getVaultNotifications","glacier:listJobs","glacier:listTagsForVault","glacier:listVaults","globalaccelerator:describeAccelerator","globalaccelerator:describeAcceleratorAttributes","globalaccelerator:describeEndpointGroup","globalaccelerator:describeListener","globalaccelerator:listAccelerators","globalaccelerator:listEndpointGroups","globalaccelerator:listListeners","glue:batchGetPartition","glue:checkSchemaVersionValidity","glue:getCatalogImportStatus","glue:getClassifier","glue:getClassifiers","glue:getCrawler","glue:getCrawlerMetrics","glue:getCrawlers","glue:getDatabase","glue:getDatabases","glue:getDataflowGraph","glue:getDevEndpoint","glue:getDevEndpoints","glue:getJob","glue:getJobRun","glue:getJobRuns","glue:getJobs","glue:getMapping","glue:getPartition","glue:getPartitions","glue:getRegistry","glue:getSchema","glue:getSchemaByDefinition","glue:getSchemaVersion","glue:getSchemaVersionsDiff","glue:getTable","glue:getTableVersions","glue:getTables","glue:getTrigger","glue:getTriggers","glue:getUserDefinedFunction","glue:getUserDefinedFunctions","glue:listRegistries","glue:listSchemas","glue:listSchemaVersions","glue:querySchemaVersionMetadata","greengrass:getConnectivityInfo","greengrass:getCoreDefinition","greengrass:getCoreDefinitionVersion","greengrass:getDeploymentStatus","greengrass:getDeviceDefinition","greengrass:getDeviceDefinitionVersion","greengrass:getFunctionDefinition","greengrass:getFunctionDefinitionVersion","greengrass:getGroup","greengrass:getGroupCertificateAuthority","greengrass:getGroupVersion","greengrass:getLoggerDefinition","greengrass:getLoggerDefinitionVersion","greengrass:getResourceDefinitionVersion","greengrass:getServiceRoleForAccount","greengrass:getSubscriptionDefinition","greengrass:getSubscriptionDefinitionVersion","greengrass:listCoreDefinitionVersions","greengrass:listCoreDefinitions","greengrass:listDeployments","greengrass:listDeviceDefinitionVersions","greengrass:listDeviceDefinitions","greengrass:listFunctionDefinitionVersions","greengrass:listFunctionDefinitions","greengrass:listGroupVersions","greengrass:listGroups","greengrass:listLoggerDefinitionVersions","greengrass:listLoggerDefinitions","greengrass:listResourceDefinitionVersions","greengrass:listResourceDefinitions","greengrass:listSubscriptionDefinitionVersions","greengrass:listSubscriptionDefinitions","guardduty:getDetector","guardduty:getFindings","guardduty:getFindingsStatistics","guardduty:getIPSet","guardduty:getInvitationsCount","guardduty:getMasterAccount","guardduty:getMembers","guardduty:getThreatIntelSet","guardduty:listDetectors","guardduty:listFindings","guardduty:listIPSets","guardduty:listInvitations","guardduty:listMembers","guardduty:listThreatIntelSets","health:describeAffectedAccountsForOrganization","health:describeAffectedEntities","health:describeAffectedEntitiesForOrganization","health:describeEntityAggregates","health:describeEventAggregates","health:describeEventDetails","health:describeEventTypes","health:describeEventDetailsForOrganization","health:describeEvents","health:describeEventsForOrganization","health:describeHealthServiceStatusForOrganization","iam:getAccessKeyLastUsed","iam:getAccountAuthorizationDetails","iam:getAccountPasswordPolicy","iam:getAccountSummary","iam:getContextKeysForCustomPolicy","iam:getContextKeysForPrincipalPolicy","iam:getCredentialReport","iam:getGroup","iam:getGroupPolicy","iam:getInstanceProfile","iam:getLoginProfile","iam:getOpenIDConnectProvider","iam:getPolicy","iam:getPolicyVersion","iam:getRole","iam:getRolePolicy","iam:getSAMLProvider","iam:getSSHPublicKey","iam:getServerCertificate","iam:getUser","iam:getUserPolicy","iam:listAccessKeys","iam:listAccountAliases","iam:listAttachedGroupPolicies","iam:listAttachedRolePolicies","iam:listAttachedUserPolicies","iam:listEntitiesForPolicy","iam:listGroupPolicies","iam:listGroups","iam:listGroupsForUser","iam:listInstanceProfiles","iam:listInstanceProfilesForRole","iam:listMFADevices","iam:listOpenIDConnectProviders","iam:listPolicies","iam:listPolicyVersions","iam:listRolePolicies","iam:listRoles","iam:listSAMLProviders","iam:listSSHPublicKeys","iam:listServerCertificates","iam:listSigningCertificates","iam:listUserPolicies","iam:listUsers","iam:listVirtualMFADevices","iam:simulateCustomPolicy","iam:simulatePrincipalPolicy","imagebuilder:getComponent","imagebuilder:getComponentPolicy","imagebuilder:getContainerRecipe","imagebuilder:getDistributionConfiguration","imagebuilder:getImage","imagebuilder:getImagePipeline","imagebuilder:getImagePolicy","imagebuilder:getImageRecipe","imagebuilder:getImageRecipePolicy","imagebuilder:getInfrastructureConfiguration","imagebuilder:listComponentBuildVersions","imagebuilder:listComponents","imagebuilder:listContainerRecipes","imagebuilder:listDistributionConfigurations","imagebuilder:listImageBuildVersions","imagebuilder:listImagePipelineImages","imagebuilder:listImagePipelines","imagebuilder:listImageRecipes","imagebuilder:listImages","imagebuilder:listInfrastructureConfigurations","imagebuilder:listTagsForResource","importexport:getStatus","importexport:listJobs","inspector:describeAssessmentRuns","inspector:describeAssessmentTargets","inspector:describeAssessmentTemplates","inspector:describeCrossAccountAccessRole","inspector:describeResourceGroups","inspector:describeRulesPackages","inspector:getTelemetryMetadata","inspector:listAssessmentRunAgents","inspector:listAssessmentRuns","inspector:listAssessmentTargets","inspector:listAssessmentTemplates","inspector:listEventSubscriptions","inspector:listRulesPackages","inspector:listTagsForResource","iot:describeAuthorizer","iot:describeCACertificate","iot:describeCertificate","iot:describeDefaultAuthorizer","iot:describeEndpoint","iot:describeIndex","iot:describeJobExecution","iot:describeThing","iot:describeThingGroup","iot:describeTunnel","iot:getEffectivePolicies","iot:getIndexingConfiguration","iot:getLoggingOptions","iot:getPolicy","iot:getPolicyVersion","iot:getTopicRule","iot:getV2LoggingOptions","iot:listAttachedPolicies","iot:listAuthorizers","iot:listCACertificates","iot:listCertificates","iot:listCertificatesByCA","iot:listJobExecutionsForJob","iot:listJobExecutionsForThing","iot:listJobs","iot:listOutgoingCertificates","iot:listPolicies","iot:listPolicyPrincipals","iot:listPolicyVersions","iot:listPrincipalPolicies","iot:listPrincipalThings","iot:listRoleAliases","iot:listTargetsForPolicy","iot:listThingGroups","iot:listThingGroupsForThing","iot:listThingPrincipals","iot:listThingRegistrationTasks","iot:listThingTypes","iot:listThings","iot:listTopicRules","iot:listTunnels","iot:listV2LoggingLevels","iotevents:describeDetector","iotevents:describeDetectorModel","iotevents:describeInput","iotevents:describeLoggingOptions","iotevents:listDetectorModelVersions","iotevents:listDetectorModels","iotevents:listDetectors","iotevents:listInputs","iotsitewise:describeAccessPolicy","iotsitewise:describeAsset","iotsitewise:describeAssetModel","iotsitewise:describeAssetProperty","iotsitewise:describeDashboard","iotsitewise:describeGateway","iotsitewise:describeGatewayCapabilityConfiguration","iotsitewise:describeLoggingOptions","iotsitewise:describePortal","iotsitewise:describeProject","iotsitewise:listAccessPolicies","iotsitewise:listAssetModels","iotsitewise:listAssets","iotsitewise:listAssociatedAssets","iotsitewise:listDashboards","iotsitewise:listGateways","iotsitewise:listPortals","iotsitewise:listProjectAssets","iotsitewise:listProjects","kafka:describeCluster","kafka:getBootstrapBrokers","kafka:listClusters","kafka:listNodes","kendra:describeDataSource","kendra:describeFaq","kendra:describeIndex","kendra:listDataSources","kendra:listFaqs","kendra:listIndices","kinesis:describeStream","kinesis:listStreams","kinesis:listTagsForStream","kinesisanalytics:describeApplication","kinesisanalytics:describeApplicationSnapshot","kinesisanalytics:listApplications","kinesisanalytics:listApplicationSnapshots","kms:describeKey","kms:getKeyPolicy","kms:getKeyRotationStatus","kms:listAliases","kms:listGrants","kms:listKeyPolicies","kms:listKeys","kms:listResourceTags","kms:listRetirableGrants","lambda:getAccountSettings","lambda:getAlias","lambda:getEventSourceMapping","lambda:getFunction","lambda:getFunctionConcurrency","lambda:getFunctionConfiguration","lambda:getFunctionEventInvokeConfig","lambda:getLayerVersion","lambda:getLayerVersionPolicy","lambda:getPolicy","lambda:getProvisionedConcurrencyConfig","lambda:listAliases","lambda:listEventSourceMappings","lambda:listFunctionEventInvokeConfigs","lambda:listFunctions","lambda:listLayerVersions","lambda:listLayers","lambda:listProvisionedConcurrencyConfigs","lambda:listVersionsByFunction","launchwizard:describeProvisionedApp","launchwizard:describeProvisioningEvents","launchwizard:listProvisionedApps","lex:getBot","lex:getBotAlias","lex:getBotAliases","lex:getBotChannelAssociation","lex:getBotChannelAssociations","lex:getBotVersions","lex:getBots","lex:getBuiltinIntent","lex:getBuiltinIntents","lex:getBuiltinSlotTypes","lex:getIntent","lex:getIntentVersions","lex:getIntents","lex:getSlotType","lex:getSlotTypeVersions","lex:getSlotTypes","license-manager:getLicenseConfiguration","license-manager:getServiceSettings","license-manager:listAssociationsForLicenseConfiguration","license-manager:listFailuresForLicenseConfigurationOperations","license-manager:listLicenseConfigurations","license-manager:listLicenseSpecificationsForResource","license-manager:listResourceInventory","license-manager:listUsageForLicenseConfiguration","lightsail:getActiveNames","lightsail:getBlueprints","lightsail:getBundles","lightsail:getDisk","lightsail:getDisks","lightsail:getDiskSnapshot","lightsail:getDiskSnapshots","lightsail:getDomain","lightsail:getDomains","lightsail:getExportSnapshotRecords","lightsail:getInstance","lightsail:getInstanceMetricData","lightsail:getInstancePortStates","lightsail:getInstanceSnapshot","lightsail:getInstanceSnapshots","lightsail:getInstanceState","lightsail:getInstances","lightsail:getKeyPair","lightsail:getKeyPairs","lightsail:getLoadBalancer","lightsail:getLoadBalancers","lightsail:getLoadBalancerTlsCertificates","lightsail:getOperation","lightsail:getOperations","lightsail:getOperationsForResource","lightsail:getRegions","lightsail:getRelationalDatabase","lightsail:getRelationalDatabases","lightsail:getRelationalDatabaseSnapshot","lightsail:getRelationalDatabaseSnapshots","lightsail:getStaticIp","lightsail:getStaticIps","logs:describeDestinations","logs:describeExportTasks","logs:describeLogGroups","logs:describeLogStreams","logs:describeMetricFilters","logs:describeQueries","logs:describeSubscriptionFilters","logs:testMetricFilter","machinelearning:describeBatchPredictions","machinelearning:describeDataSources","machinelearning:describeEvaluations","machinelearning:describeMLModels","machinelearning:getBatchPrediction","machinelearning:getDataSource","machinelearning:getEvaluation","machinelearning:getMLModel","managedblockchain:getMember","managedblockchain:getNetwork","managedblockchain:getNode","managedblockchain:listMembers","managedblockchain:listNetworks","managedblockchain:listNodes","mediaconnect:describeFlow","mediaconnect:listEntitlements","mediaconnect:listFlows","mediaconvert:describeEndpoints","mediaconvert:getJob","mediaconvert:getJobTemplate","mediaconvert:getPreset","mediaconvert:getQueue","mediaconvert:listJobTemplates","mediaconvert:listJobs","medialive:describeChannel","medialive:describeInput","medialive:describeInputDevice","medialive:describeInputSecurityGroup","medialive:describeMultiplex","medialive:describeOffering","medialive:describeReservation","medialive:describeSchedule","medialive:listChannels","medialive:listInputDevices","medialive:listInputSecurityGroups","medialive:listInputs","medialive:listMultiplexes","medialive:listOfferings","medialive:listReservations","mediapackage:describeChannel","mediapackage:describeOriginEndpoint","mediapackage:listChannels","mediapackage:listOriginEndpoints","mediastore:describeContainer","mediastore:describeObject","mediastore:getContainerPolicy","mediastore:getCorsPolicy","mediastore:listContainers","mediastore:listItems","mediatailor:getPlaybackConfiguration","mediatailor:listPlaybackConfigurations","mobiletargeting:getAdmChannel","mobiletargeting:getApnsChannel","mobiletargeting:getApnsSandboxChannel","mobiletargeting:getApnsVoipChannel","mobiletargeting:getApnsVoipSandboxChannel","mobiletargeting:getApp","mobiletargeting:getApplicationSettings","mobiletargeting:getApps","mobiletargeting:getBaiduChannel","mobiletargeting:getCampaign","mobiletargeting:getCampaignActivities","mobiletargeting:getCampaignVersion","mobiletargeting:getCampaignVersions","mobiletargeting:getCampaigns","mobiletargeting:getEmailChannel","mobiletargeting:getEndpoint","mobiletargeting:getEventStream","mobiletargeting:getExportJob","mobiletargeting:getExportJobs","mobiletargeting:getGcmChannel","mobiletargeting:getImportJob","mobiletargeting:getImportJobs","mobiletargeting:getSegment","mobiletargeting:getSegmentImportJobs","mobiletargeting:getSegmentVersion","mobiletargeting:getSegmentVersions","mobiletargeting:getSegments","mobiletargeting:getSmsChannel","mq:describeBroker","mq:describeConfiguration","mq:describeConfigurationRevision","mq:describeUser","mq:listBrokers","mq:listConfigurationRevisions","mq:listConfigurations","mq:listUsers","network-firewall:describeFirewall","network-firewall:describeFirewallPolicy","network-firewall:describeLoggingConfiguration","network-firewall:describeRuleGroup","network-firewall:listFirewallPolicies","network-firewall:listFirewalls","network-firewall:listRuleGroups","networkmanager:describeGlobalNetworks","networkmanager:getCustomerGatewayAssociations","networkmanager:getDevices","networkmanager:getLinkAssociations","networkmanager:getLinks","networkmanager:getSites","networkmanager:getTransitGatewayRegistrations","opsworks-cm:describeAccountAttributes","opsworks-cm:describeBackups","opsworks-cm:describeEvents","opsworks-cm:describeNodeAssociationStatus","opsworks-cm:describeServers","opsworks:describeAgentVersions","opsworks:describeApps","opsworks:describeCommands","opsworks:describeDeployments","opsworks:describeEcsClusters","opsworks:describeElasticIps","opsworks:describeElasticLoadBalancers","opsworks:describeInstances","opsworks:describeLayers","opsworks:describeLoadBasedAutoScaling","opsworks:describeMyUserProfile","opsworks:describePermissions","opsworks:describeRaidArrays","opsworks:describeRdsDbInstances","opsworks:describeServiceErrors","opsworks:describeStackProvisioningParameters","opsworks:describeStackSummary","opsworks:describeStacks","opsworks:describeTimeBasedAutoScaling","opsworks:describeUserProfiles","opsworks:describeVolumes","opsworks:getHostnameSuggestion","outposts:getOutpost","outposts:getOutpostInstanceTypes","outposts:listOutposts","outposts:listSites","personalize:describeAlgorithm","personalize:describeCampaign","personalize:describeDataset","personalize:describeDatasetGroup","personalize:describeDatasetImportJob","personalize:describeEventTracker","personalize:describeFeatureTransformation","personalize:describeRecipe","personalize:describeSchema","personalize:describeSolution","personalize:describeSolutionVersion","personalize:listCampaigns","personalize:listDatasetGroups","personalize:listDatasetImportJobs","personalize:listDatasets","personalize:listEventTrackers","personalize:listRecipes","personalize:listSchemas","personalize:listSolutionVersions","personalize:listSolutions","polly:describeVoices","polly:getLexicon","polly:listLexicons","pricing:describeServices","pricing:getAttributeValues","pricing:getProducts","quicksight:describeDashboard","quicksight:describeDashboardPermissions","quicksight:describeGroup","quicksight:describeIAMPolicyAssignment","quicksight:describeTemplate","quicksight:describeTemplateAlias","quicksight:describeTemplatePermissions","quicksight:describeUser","quicksight:listDashboards","quicksight:listGroupMemberships","quicksight:listGroups","quicksight:listIAMPolicyAssignments","quicksight:listIAMPolicyAssignmentsForUser","quicksight:listTemplateAliases","quicksight:listTemplateVersions","quicksight:listTemplates","quicksight:listUserGroups","quicksight:listUsers","rds:describeAccountAttributes","rds:describeCertificates","rds:describeDBClusterParameterGroups","rds:describeDBClusterParameters","rds:describeDBClusterSnapshots","rds:describeDBClusters","rds:describeDBEngineVersions","rds:describeDBInstances","rds:describeDBParameterGroups","rds:describeDBParameters","rds:describeDBSecurityGroups","rds:describeDBSnapshotAttributes","rds:describeDBSnapshots","rds:describeDBSubnetGroups","rds:describeEngineDefaultClusterParameters","rds:describeEngineDefaultParameters","rds:describeEventCategories","rds:describeEventSubscriptions","rds:describeEvents","rds:describeExportTasks","rds:describeOptionGroupOptions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describePendingMaintenanceActions","rds:describeReservedDBInstances","rds:describeReservedDBInstancesOfferings","rds:listTagsForResource","redshift:describeClusterParameterGroups","redshift:describeClusterParameters","redshift:describeClusterSecurityGroups","redshift:describeClusterSnapshots","redshift:describeClusterSubnetGroups","redshift:describeClusterVersions","redshift:describeClusters","redshift:describeDefaultClusterParameters","redshift:describeEventCategories","redshift:describeEventSubscriptions","redshift:describeEvents","redshift:describeHsmClientCertificates","redshift:describeHsmConfigurations","redshift:describeLoggingStatus","redshift:describeOrderableClusterOptions","redshift:describeReservedNodeOfferings","redshift:describeReservedNodes","redshift:describeResize","redshift:describeSnapshotCopyGrants","redshift:describeStorage","redshift:describeTableRestoreStatus","redshift:describeTags","rekognition:listCollections","rekognition:listFaces","resource-groups:getGroup","resource-groups:getGroupQuery","resource-groups:getTags","resource-groups:listGroupResources","resource-groups:listGroups","resource-groups:searchResources","robomaker:batchDescribeSimulationJob","robomaker:describeDeploymentJob","robomaker:describeFleet","robomaker:describeRobot","robomaker:describeRobotApplication","robomaker:describeSimulationApplication","robomaker:describeSimulationJob","robomaker:listDeploymentJobs","robomaker:listFleets","robomaker:listRobotApplications","robomaker:listRobots","robomaker:listSimulationApplications","robomaker:listSimulationJobs","route53:getChange","route53:getCheckerIpRanges","route53:getGeoLocation","route53:getHealthCheck","route53:getHealthCheckCount","route53:getHealthCheckLastFailureReason","route53:getHealthCheckStatus","route53:getHostedZone","route53:getHostedZoneCount","route53:getReusableDelegationSet","route53:getTrafficPolicy","route53:getTrafficPolicyInstance","route53:getTrafficPolicyInstanceCount","route53:listGeoLocations","route53:listHealthChecks","route53:listHostedZones","route53:listHostedZonesByName","route53:listResourceRecordSets","route53:listReusableDelegationSets","route53:listTagsForResource","route53:listTagsForResources","route53:listTrafficPolicies","route53:listTrafficPolicyInstances","route53:listTrafficPolicyInstancesByHostedZone","route53:listTrafficPolicyInstancesByPolicy","route53:listTrafficPolicyVersions","route53domains:checkDomainAvailability","route53domains:getContactReachabilityStatus","route53domains:getDomainDetail","route53domains:getOperationDetail","route53domains:listDomains","route53domains:listOperations","route53domains:listTagsForDomain","route53domains:viewBilling","route53resolver:getResolverDnssecConfig","route53resolver:getResolverRulePolicy","route53resolver:listResolverDnssecConfigs","route53resolver:listResolverEndpointIpAddresses","route53resolver:listResolverEndpoints","route53resolver:listResolverRuleAssociations","route53resolver:listResolverRules","route53resolver:listTagsForResource","s3:getAccelerateConfiguration","s3:getAnalyticsConfiguration","s3:getBucketAcl","s3:getBucketCORS","s3:getBucketLocation","s3:getBucketLogging","s3:getBucketNotification","s3:getBucketPolicy","s3:getBucketRequestPayment","s3:getBucketTagging","s3:getBucketVersioning","s3:getBucketWebsite","s3:getEncryptionConfiguration","s3:getInventoryConfiguration","s3:getLifecycleConfiguration","s3:getMetricsConfiguration","s3:getReplicationConfiguration","s3:listAllMyBuckets","s3:listBucket","s3:listBucketMultipartUploads","sagemaker:describeAction","sagemaker:describeAlgorithm","sagemaker:describeApp","sagemaker:describeArtifact","sagemaker:describeAutoMLJob","sagemaker:describeCompilationJob","sagemaker:describeContext","sagemaker:describeDataQualityJobDefinition","sagemaker:describeDevice","sagemaker:describeDeviceFleet","sagemaker:describeDomain","sagemaker:describeEdgePackagingJob","sagemaker:describeEndpoint","sagemaker:describeEndpointConfig","sagemaker:describeExperiment","sagemaker:describeFeatureGroup","sagemaker:describeHumanTaskUi","sagemaker:describeHyperParameterTuningJob","sagemaker:describeImage","sagemaker:describeImageVersion","sagemaker:describeLabelingJob","sagemaker:describeModel","sagemaker:describeModelBiasJobDefinition","sagemaker:describeModelExplainabilityJobDefinition","sagemaker:describeModelPackage","sagemaker:describeModelPackageGroup","sagemaker:describeModelQualityJobDefinition","sagemaker:describeMonitoringSchedule","sagemaker:describeNotebookInstance","sagemaker:describeNotebookInstanceLifecycleConfig","sagemaker:describePipeline","sagemaker:describePipelineDefinitionForExecution","sagemaker:describePipelineExecution","sagemaker:describeProcessingJob","sagemaker:describeProject","sagemaker:describeSubscribedWorkteam","sagemaker:describeTrainingJob","sagemaker:describeTransformJob","sagemaker:describeTrial","sagemaker:describeTrialComponent","sagemaker:describeUserProfile","sagemaker:describeWorkteam","sagemaker:listActions","sagemaker:listAlgorithms","sagemaker:listApps","sagemaker:listArtifacts","sagemaker:listAssociations","sagemaker:listAutoMLJobs","sagemaker:listCandidatesForAutoMLJob","sagemaker:listCodeRepositories","sagemaker:listCompilationJobs","sagemaker:listContexts","sagemaker:listDataQualityJobDefinitions","sagemaker:listDeviceFleets","sagemaker:listDevices","sagemaker:listDomains","sagemaker:listEdgePackagingJobs","sagemaker:listEndpointConfigs","sagemaker:listEndpoints","sagemaker:listExperiments","sagemaker:listFeatureGroups","sagemaker:listFlowDefinitions","sagemaker:listHumanTaskUis","sagemaker:listHyperParameterTuningJobs","sagemaker:listImages","sagemaker:listImageVersions","sagemaker:listLabelingJobs","sagemaker:listLabelingJobsForWorkteam","sagemaker:listModelBiasJobDefinitions","sagemaker:listModelExplainabilityJobDefinitions","sagemaker:listModelPackageGroups","sagemaker:listModelPackages","sagemaker:listModelQualityJobDefinitions","sagemaker:listModels","sagemaker:listMonitoringExecutions","sagemaker:listMonitoringSchedules","sagemaker:listNotebookInstanceLifecycleConfigs","sagemaker:listNotebookInstances","sagemaker:listPipelineExecutions","sagemaker:listPipelineExecutionSteps","sagemaker:listPipelineParametersForExecution","sagemaker:listPipelines","sagemaker:listProcessingJobs","sagemaker:listProjects","sagemaker:listSubscribedWorkteams","sagemaker:listTags","sagemaker:listTrainingJobs","sagemaker:listTrainingJobsForHyperParameterTuningJob","sagemaker:listTransformJobs","sagemaker:listTrialComponents","sagemaker:listTrials","sagemaker:listUserProfiles","sagemaker:listWorkteams","sdb:domainMetadata","sdb:listDomains","secretsmanager:describeSecret","secretsmanager:getResourcePolicy","secretsmanager:listSecretVersionIds","secretsmanager:listSecrets","securityhub:getEnabledStandards","securityhub:getFindings","securityhub:getInsightResults","securityhub:getInsights","securityhub:getMasterAccount","securityhub:getMembers","securityhub:listEnabledProductsForImport","securityhub:listInvitations","securityhub:listMembers","servicecatalog:describeConstraint","servicecatalog:describePortfolio","servicecatalog:describeProduct","servicecatalog:describeProductAsAdmin","servicecatalog:describeProductView","servicecatalog:describeProvisioningArtifact","servicecatalog:describeProvisioningParameters","servicecatalog:describeRecord","servicecatalog:listAcceptedPortfolioShares","servicecatalog:listConstraintsForPortfolio","servicecatalog:listLaunchPaths","servicecatalog:listPortfolioAccess","servicecatalog:listPortfolios","servicecatalog:listPortfoliosForProduct","servicecatalog:listPrincipalsForPortfolio","servicecatalog:listProvisioningArtifacts","servicecatalog:listRecordHistory","servicecatalog:scanProvisionedProducts","servicecatalog:searchProducts","servicequotas:getAWSDefaultServiceQuota","servicequotas:getAssociationForServiceQuotaTemplate","servicequotas:getRequestedServiceQuotaChange","servicequotas:getServiceQuota","servicequotas:getServiceQuotaIncreaseRequestFromTemplate","servicequotas:listAWSDefaultServiceQuotas","servicequotas:listRequestedServiceQuotaChangeHistory","servicequotas:listRequestedServiceQuotaChangeHistoryByQuota","servicequotas:listServiceQuotaIncreaseRequestsInTemplate","servicequotas:listServiceQuotas","servicequotas:listServices","ses:describeActiveReceiptRuleSet","ses:describeReceiptRule","ses:describeReceiptRuleSet","ses:getAccount","ses:getBlacklistReports","ses:getConfigurationSet","ses:getConfigurationSetEventDestinations","ses:getDedicatedIp","ses:getDedicatedIps","ses:getDeliverabilityDashboardOptions","ses:getDeliverabilityTestReport","ses:getDomainDeliverabilityCampaign","ses:getDomainStatisticsReport","ses:getEmailIdentity","ses:getIdentityDkimAttributes","ses:getIdentityMailFromDomainAttributes","ses:getIdentityNotificationAttributes","ses:getIdentityPolicies","ses:getIdentityVerificationAttributes","ses:getSendQuota","ses:getSendStatistics","ses:listConfigurationSets","ses:listDedicatedIpPools","ses:listDeliverabilityTestReports","ses:listDomainDeliverabilityCampaigns","ses:listEmailIdentities","ses:listIdentities","ses:listIdentityPolicies","ses:listReceiptFilters","ses:listReceiptRuleSets","ses:listTagsForResource","ses:listVerifiedEmailAddresses","shield:describeAttack","shield:describeProtection","shield:describeSubscription","shield:listAttacks","shield:listProtections","sms-voice:getConfigurationSetEventDestinations","sms:getConnectors","sms:getReplicationJobs","sms:getReplicationRuns","sms:getServers","snowball:describeAddress","snowball:describeAddresses","snowball:describeJob","snowball:getSnowballUsage","snowball:listJobs","sns:checkIfPhoneNumberIsOptedOut","sns:getEndpointAttributes","sns:getPlatformApplicationAttributes","sns:getSMSAttributes","sns:getSubscriptionAttributes","sns:getTopicAttributes","sns:listEndpointsByPlatformApplication","sns:listPhoneNumbersOptedOut","sns:listPlatformApplications","sns:listSubscriptions","sns:listSubscriptionsByTopic","sns:listTopics","sqs:getQueueAttributes","sqs:getQueueUrl","sqs:listDeadLetterSourceQueues","sqs:listQueues","ssm:describeActivations","ssm:describeAssociation","ssm:describeAssociationExecutionTargets","ssm:describeAssociationExecutions","ssm:describeAutomationExecutions","ssm:describeAutomationStepExecutions","ssm:describeAvailablePatches","ssm:describeDocument","ssm:describeDocumentPermission","ssm:describeEffectiveInstanceAssociations","ssm:describeEffectivePatchesForPatchBaseline","ssm:describeInstanceAssociationsStatus","ssm:describeInstanceInformation","ssm:describeInstancePatchStates","ssm:describeInstancePatchStatesForPatchGroup","ssm:describeInstancePatches","ssm:describeInventoryDeletions","ssm:describeMaintenanceWindowExecutionTaskInvocations","ssm:describeMaintenanceWindowExecutionTasks","ssm:describeMaintenanceWindowExecutions","ssm:describeMaintenanceWindowSchedule","ssm:describeMaintenanceWindowTargets","ssm:describeMaintenanceWindowTasks","ssm:describeMaintenanceWindows","ssm:describeMaintenanceWindowsForTarget","ssm:describeParameters","ssm:describePatchBaselines","ssm:describePatchGroupState","ssm:describePatchGroups","ssm:describePatchProperties","ssm:describeSessions","ssm:getAutomationExecution","ssm:getCommandInvocation","ssm:getConnectionStatus","ssm:getDefaultPatchBaseline","ssm:getDeployablePatchSnapshotForInstance","ssm:getInventorySchema","ssm:getMaintenanceWindow","ssm:getMaintenanceWindowExecution","ssm:getMaintenanceWindowExecutionTask","ssm:getMaintenanceWindowExecutionTaskInvocation","ssm:getMaintenanceWindowTask","ssm:getPatchBaseline","ssm:getPatchBaselineForPatchGroup","ssm:getServiceSetting","ssm:labelParameterVersion","ssm:listAssociationVersions","ssm:listAssociations","ssm:listCommandInvocations","ssm:listCommands","ssm:listComplianceItems","ssm:listComplianceSummaries","ssm:listDocumentVersions","ssm:listDocuments","ssm:listResourceComplianceSummaries","ssm:listResourceDataSync","ssm:listTagsForResource","states:describeActivity","states:describeExecution","states:describeStateMachine","states:describeStateMachineForExecution","states:getExecutionHistory","states:listActivities","states:listExecutions","states:listStateMachines","storagegateway:describeBandwidthRateLimit","storagegateway:describeCache","storagegateway:describeCachediSCSIVolumes","storagegateway:describeGatewayInformation","storagegateway:describeMaintenanceStartTime","storagegateway:describeNFSFileShares","storagegateway:describeSMBFileShares","storagegateway:describeSMBSettings","storagegateway:describeSnapshotSchedule","storagegateway:describeStorediSCSIVolumes","storagegateway:describeTapeArchives","storagegateway:describeTapeRecoveryPoints","storagegateway:describeTapes","storagegateway:describeUploadBuffer","storagegateway:describeVTLDevices","storagegateway:describeWorkingStorage","storagegateway:listFileShares","storagegateway:listGateways","storagegateway:listLocalDisks","storagegateway:listTagsForResource","storagegateway:listTapes","storagegateway:listVolumeInitiators","storagegateway:listVolumeRecoveryPoints","storagegateway:listVolumes","swf:countClosedWorkflowExecutions","swf:countOpenWorkflowExecutions","swf:countPendingActivityTasks","swf:countPendingDecisionTasks","swf:describeActivityType","swf:describeDomain","swf:describeWorkflowExecution","swf:describeWorkflowType","swf:getWorkflowExecutionHistory","swf:listActivityTypes","swf:listClosedWorkflowExecutions","swf:listDomains","swf:listOpenWorkflowExecutions","swf:listWorkflowTypes","transfer:describeServer","transfer:describeUser","transfer:listServers","transfer:listTagsForResource","transfer:listUsers","waf-regional:getByteMatchSet","waf-regional:getChangeTokenStatus","waf-regional:getIPSet","waf-regional:getRule","waf-regional:getSqlInjectionMatchSet","waf-regional:getWebACL","waf-regional:getWebACLForResource","waf-regional:listByteMatchSets","waf-regional:listIPSets","waf-regional:listResourcesForWebACL","waf-regional:listRules","waf-regional:listSqlInjectionMatchSets","waf-regional:listWebACLs","waf:getByteMatchSet","waf:getChangeTokenStatus","waf:getIPSet","waf:getRule","waf:getSampledRequests","waf:getSizeConstraintSet","waf:getSqlInjectionMatchSet","waf:getWebACL","waf:getXssMatchSet","waf:listByteMatchSets","waf:listIPSets","waf:listRules","waf:listSizeConstraintSets","waf:listSqlInjectionMatchSets","waf:listWebACLs","waf:listXssMatchSets","wafv2:checkCapacity","wafv2:describeManagedRuleGroup","wafv2:getIPSet","wafv2:getLoggingConfiguration","wafv2:getPermissionPolicy","wafv2:getRateBasedStatementManagedKeys","wafv2:getRegexPatternSet","wafv2:getRuleGroup","wafv2:getSampledRequests","wafv2:getWebACL","wafv2:getWebACLForResource","wafv2:listAvailableManagedRuleGroups","wafv2:listIPSets","wafv2:listLoggingConfigurations","wafv2:listRegexPatternSets","wafv2:listResourcesForWebACL","wafv2:listRuleGroups","wafv2:listTagsForResource","wafv2:listWebACLs","workdocs:checkAlias","workdocs:describeAvailableDirectories","workdocs:describeInstances","worklink:describeAuditStreamConfiguration","worklink:describeCompanyNetworkConfiguration","worklink:describeDevice","worklink:describeDevicePolicyConfiguration","worklink:describeDomain","worklink:describeFleetMetadata","worklink:describeIdentityProviderConfiguration","worklink:describeWebsiteCertificateAuthority","worklink:listDevices","worklink:listDomains","worklink:listFleets","worklink:listWebsiteAuthorizationProviders","worklink:listWebsiteCertificateAuthorities","workmail:describeGroup","workmail:describeOrganization","workmail:describeResource","workmail:describeUser","workmail:listAliases","workmail:listGroupMembers","workmail:listGroups","workmail:listMailboxPermissions","workmail:listOrganizations","workmail:listResourceDelegates","workmail:listResources","workmail:listUsers","workspaces:describeAccount","workspaces:describeAccountModifications","workspaces:describeIpGroups","workspaces:describeTags","workspaces:describeWorkspaceBundles","workspaces:describeWorkspaceDirectories","workspaces:describeWorkspaceImages","workspaces:describeWorkspaces","workspaces:describeWorkspacesConnectionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["apigateway","iam","a4b","access-analyzer","acm-pca","acm","amplify","application-autoscaling","appmesh","appstream","appsync","athena","autoscaling-plans","autoscaling","backup","batch","braket","budgets","ce","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codeartifact","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-identity","cognito-idp","cognito-sync","compute-optimizer","config","connect","controltower","databrew","datapipeline","datasync","dax","detective","devicefarm","directconnect","dlm","dms","ds","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","es","events","firehose","fms","forecast","fsx","glacier","globalaccelerator","glue","greengrass","guardduty","health","imagebuilder","importexport","inspector","iot","iotevents","iotsitewise","kafka","kendra","kinesis","kinesisanalytics","kms","lambda","launchwizard","lex","license-manager","lightsail","logs","machinelearning","managedblockchain","mediaconnect","mediaconvert","medialive","mediapackage","mediastore","mediatailor","mobiletargeting","mq","network-firewall","networkmanager","opsworks-cm","opsworks","outposts","personalize","polly","pricing","quicksight","rds","redshift","rekognition","resource-groups","robomaker","route53","route53domains","route53resolver","s3","sagemaker","sdb","secretsmanager","securityhub","servicecatalog","servicequotas","ses","shield","sms-voice","sms","snowball","sns","sqs","ssm","states","storagegateway","swf","transfer","waf-regional","waf","wafv2","workdocs","worklink","workmail","workspaces"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess","PolicyName":"AWSCloudTrailReadOnlyAccess","PolicyId":"ANPAJDU7KJADWBSEQ3E7S","Path":"/","Description":"Provides read only access to AWS CloudTrail.","DefaultVersionId":"v9"},"document":[{"Action":["s3:GetObject","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:GetTrail","cloudtrail:GetTrailStatus","cloudtrail:DescribeTrails","cloudtrail:ListTrails","cloudtrail:LookupEvents","cloudtrail:ListTags","cloudtrail:ListPublicKeys","cloudtrail:GetEventSelectors","cloudtrail:GetInsightSelectors","s3:ListAllMyBuckets","kms:ListAliases","lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["s3","cloudtrail","kms","lambda"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess","PolicyName":"AWSGlueConsoleSageMakerNotebookFullAccess","PolicyId":"ANPAJELFOHJC42QS3ZSYY","Path":"/","Description":"Provides full access to AWS Glue via the AWS Management Console and access to sagemaker notebook instances.","DefaultVersionId":"v2"},"document":[{"Action":["glue:*","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","iam:ListRoles","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:DescribeVpcAttribute","ec2:DescribeKeyPairs","ec2:DescribeInstances","ec2:DescribeImages","ec2:CreateNetworkInterface","ec2:AttachNetworkInterface","ec2:ModifyNetworkInterfaceAttribute","ec2:DeleteNetworkInterface","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeNetworkInterfaces","rds:DescribeDBInstances","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketAcl","s3:GetBucketLocation","cloudformation:DescribeStacks","cloudformation:GetTemplateSummary","dynamodb:ListTables","kms:ListAliases","kms:DescribeKey","sagemaker:ListNotebookInstances","cloudformation:ListStacks","cloudwatch:GetMetricData","cloudwatch:ListDashboards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*","arn:aws:s3:::aws-glue-*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-glue*/*"]},{"Action":["sagemaker:CreatePresignedNotebookInstanceUrl","sagemaker:CreateNotebookInstance","sagemaker:DeleteNotebookInstance","sagemaker:DescribeNotebookInstance","sagemaker:StartNotebookInstance","sagemaker:StopNotebookInstance","sagemaker:UpdateNotebookInstance","sagemaker:ListTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance/aws-glue-*"]},{"Action":["sagemaker:DescribeNotebookInstanceLifecycleConfig","sagemaker:CreateNotebookInstanceLifecycleConfig","sagemaker:DeleteNotebookInstanceLifecycleConfig","sagemaker:ListNotebookInstanceLifecycleConfigs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/aws-glue-*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances","ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceSageMakerNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"]}],"services":["glue","redshift","iam","ec2","rds","s3","cloudformation","dynamodb","kms","sagemaker","cloudwatch","logs","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMSKFullAccess","PolicyName":"AmazonMSKFullAccess","PolicyId":"ANPAJERQQQTWI5OMENTQE","Path":"/","Description":"Provide full access to Amazon MSK and other required permissions for its dependencies.","DefaultVersionId":"v3"},"document":[{"Action":["kafka:*","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","kms:DescribeKey","kms:CreateGrant","logs:CreateLogDelivery","logs:GetLogDelivery","logs:UpdateLogDelivery","logs:DeleteLogDelivery","logs:ListLogDeliveries","S3:GetBucketPolicy","logs:PutResourcePolicy","logs:DescribeResourcePolicies","logs:DescribeLogGroups","firehose:TagDeliveryStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/kafka.amazonaws.com/AWSServiceRoleForKafka*"]},{"Action":["iam:AttachRolePolicy","iam:PutRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/kafka.amazonaws.com/AWSServiceRoleForKafka*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/delivery.logs.amazonaws.com/AWSServiceRoleForLogDelivery*"]}],"services":["kafka","ec2","kms","logs","S3","firehose","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMSKReadOnlyAccess","PolicyName":"AmazonMSKReadOnlyAccess","PolicyId":"ANPAJGMUI3DP2EVP3VGYO","Path":"/","Description":"Provide readonly access to Amazon MSK","DefaultVersionId":"v1"},"document":[{"Action":["kafka:Describe*","kafka:List*","kafka:Get*","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["kafka","ec2","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDocDBConsoleFullAccess","PolicyName":"AmazonDocDBConsoleFullAccess","PolicyId":"ANPAJHV6VMSNDDHJ3ESNI","Path":"/","Description":"Provides full access to manage Amazon DocumentDB with MongoDB compatibility using the AWS Management Console. Note this policy also grants full access to publish on all SNS topics within the account, permissions to create and edit Amazon EC2 instances and VPC configurations, permissions to view and list keys on Amazon KMS, and full access to Amazon RDS and Amazon Neptune.","DefaultVersionId":"v3"},"document":[{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBCluster","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBInstance","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetRole","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:AllocateAddress","ec2:AssignIpv6Addresses","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeCustomerGateways","ec2:DescribeInstances","ec2:DescribeNatGateways","ec2:DescribeNetworkInterfaces","ec2:DescribePrefixLists","ec2:DescribeRouteTables","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:ModifyVpcEndpoint","kms:DescribeKey","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","iam","cloudwatch","ec2","kms","logs","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess","PolicyName":"AmazonElasticFileSystemFullAccess","PolicyId":"ANPAJKXTMNVQGIDNCKPBC","Path":"/","Description":"Provides full access to Amazon EFS via the AWS Management Console.","DefaultVersionId":"v7"},"document":[{"Action":["cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricData","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DescribeAvailabilityZones","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeNetworkInterfaces","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","elasticfilesystem:CreateFileSystem","elasticfilesystem:CreateMountTarget","elasticfilesystem:CreateTags","elasticfilesystem:CreateAccessPoint","elasticfilesystem:DeleteFileSystem","elasticfilesystem:DeleteMountTarget","elasticfilesystem:DeleteTags","elasticfilesystem:DeleteAccessPoint","elasticfilesystem:DeleteFileSystemPolicy","elasticfilesystem:DescribeAccountPreferences","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeTags","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:ModifyMountTargetSecurityGroups","elasticfilesystem:PutAccountPreferences","elasticfilesystem:PutBackupPolicy","elasticfilesystem:PutLifecycleConfiguration","elasticfilesystem:PutFileSystemPolicy","elasticfilesystem:UpdateFileSystem","elasticfilesystem:TagResource","elasticfilesystem:UntagResource","elasticfilesystem:ListTagsForResource","elasticfilesystem:Backup","elasticfilesystem:Restore","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ec2","elasticfilesystem","kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser","PolicyName":"AWSKeyManagementServicePowerUser","PolicyId":"ANPAJNPP7PPPPMJRV2SA4","Path":"/","Description":"Provides access to AWS Key Management Service (KMS).","DefaultVersionId":"v2"},"document":[{"Action":["kms:CreateAlias","kms:CreateKey","kms:DeleteAlias","kms:Describe*","kms:GenerateRandom","kms:Get*","kms:List*","kms:TagResource","kms:UntagResource","iam:ListGroups","iam:ListRoles","iam:ListUsers"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess","PolicyName":"AWSGlueConsoleFullAccess","PolicyId":"ANPAJNZGDEOD7MISOVSVI","Path":"/","Description":"Provides full access to AWS Glue via the AWS Management Console","DefaultVersionId":"v12"},"document":[{"Action":["glue:*","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","iam:ListRoles","iam:ListUsers","iam:ListGroups","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:DescribeVpcAttribute","ec2:DescribeKeyPairs","ec2:DescribeInstances","ec2:DescribeImages","rds:DescribeDBInstances","rds:DescribeDBClusters","rds:DescribeDBSubnetGroups","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketAcl","s3:GetBucketLocation","cloudformation:DescribeStacks","cloudformation:GetTemplateSummary","dynamodb:ListTables","kms:ListAliases","kms:DescribeKey","cloudwatch:GetMetricData","cloudwatch:ListDashboards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*","arn:aws:s3:::aws-glue-*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-glue*/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances","ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"]}],"services":["glue","redshift","iam","ec2","rds","s3","cloudformation","dynamodb","kms","cloudwatch","tag","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonFSxConsoleReadOnlyAccess","PolicyName":"AmazonFSxConsoleReadOnlyAccess","PolicyId":"ANPAJQUISIZNHGLA6YQFM","Path":"/","Description":"Provides read only access to Amazon FSx and access to related AWS services via the AWS Management Console.","DefaultVersionId":"v3"},"document":[{"Action":["cloudwatch:DescribeAlarms","ds:DescribeDirectories","ec2:DescribeNetworkInterfaceAttribute","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","firehose:ListDeliveryStreams","fsx:Describe*","fsx:ListTagsForResource","kms:DescribeKey","logs:DescribeLogGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","ds","ec2","firehose","fsx","kms","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonWorkMailFullAccess","PolicyName":"AmazonWorkMailFullAccess","PolicyId":"ANPAJQVKNMT7SVATQ4AUY","Path":"/","Description":"Provides full access to WorkMail, Directory Service, SES, EC2 and read access to KMS metadata.","DefaultVersionId":"v10"},"document":[{"Action":["ds:AuthorizeApplication","ds:CheckAlias","ds:CreateAlias","ds:CreateDirectory","ds:CreateIdentityPoolDirectory","ds:DeleteDirectory","ds:DescribeDirectories","ds:GetDirectoryLimits","ds:ListAuthorizedApplications","ds:UnauthorizeApplication","ec2:AuthorizeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateNetworkInterface","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateTags","ec2:CreateVpc","ec2:DeleteSecurityGroup","ec2:DeleteSubnet","ec2:DeleteVpc","ec2:DescribeAvailabilityZones","ec2:DescribeRouteTables","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","kms:DescribeKey","kms:ListAliases","lambda:ListFunctions","route53:ChangeResourceRecordSets","route53:ListHostedZones","route53:ListResourceRecordSets","route53:GetHostedZone","route53domains:CheckDomainAvailability","route53domains:ListDomains","ses:*","workmail:*","iam:ListRoles","logs:DescribeLogGroups","logs:CreateLogGroup","logs:PutRetentionPolicy","cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/events.workmail.amazonaws.com/AWSServiceRoleForAmazonWorkMailEvents*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*workmail*"]}],"services":["ds","ec2","kms","lambda","route53","route53domains","ses","workmail","iam","logs","cloudwatch"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/NeptuneReadOnlyAccess","PolicyName":"NeptuneReadOnlyAccess","PolicyId":"ANPAJS5OQ5RXULC66WTGQ","Path":"/","Description":"Provides read only access to Amazon Neptune. Note that this policy also grants access to Amazon RDS resources. For more information, see https://aws.amazon.com/neptune/faqs/.","DefaultVersionId":"v1"},"document":[{"Action":["rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSubnetGroups","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DownloadDBLogFilePortion","rds:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListRetirableGrants","kms:ListAliases","kms:ListKeyPolicies"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*","arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"]}],"services":["rds","cloudwatch","ec2","kms","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy","PolicyName":"AWSConfigServiceRolePolicy","PolicyId":"ANPAJUCWFHNZER665LLQQ","Path":"/aws-service-role/","Description":"Allows Config to call AWS services and collect resource configurations on your behalf.","DefaultVersionId":"v25"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLexFullAccess","PolicyName":"AmazonLexFullAccess","PolicyId":"ANPAJVLXDHKVC23HRTKSI","Path":"/","Description":"Provides full access to Amazon Lex via the AWS Management Console.  Also provides access to create Lex Service Linked Roles and grant Lex permissions to invoke a limited set of Lambda functions.","DefaultVersionId":"v6"},"document":[{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","kms:DescribeKey","kms:ListAliases","lambda:GetPolicy","lambda:ListFunctions","lex:*","polly:DescribeVoices","polly:SynthesizeSpeech"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kendra:ListIndices"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:AddPermission","lambda:RemovePermission"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:AmazonLex*"]},{"Action":["iam:GetRole","iam:DeleteRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots","arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:DetachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]},{"Action":["iam:DeleteServiceLinkedRole","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"]},{"Action":["iam:DetachRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"]}],"services":["cloudwatch","kms","lambda","lex","polly","kendra","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/NeptuneConsoleFullAccess","PolicyName":"NeptuneConsoleFullAccess","PolicyId":"ANPAJWTD4ELX2KRNICUVQ","Path":"/","Description":"Provides full access to manage Amazon Neptune using the AWS Console. Note this policy also grants full access to publish on all SNS topics within the account, permissions to create and edit Amazon EC2 instances and VPC configurations, permissions to view and list keys on Amazon KMS, and full access to Amazon RDS. For more information, see https://aws.amazon.com/neptune/faqs/.","DefaultVersionId":"v4"},"document":[{"Action":["rds:CreateDBCluster","rds:CreateDBInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:*"]},{"Action":["rds:AddRoleToDBCluster","rds:AddSourceIdentifierToSubscription","rds:AddTagsToResource","rds:ApplyPendingMaintenanceAction","rds:CopyDBClusterParameterGroup","rds:CopyDBClusterSnapshot","rds:CopyDBParameterGroup","rds:CreateDBClusterParameterGroup","rds:CreateDBClusterSnapshot","rds:CreateDBParameterGroup","rds:CreateDBSubnetGroup","rds:CreateEventSubscription","rds:DeleteDBCluster","rds:DeleteDBClusterParameterGroup","rds:DeleteDBClusterSnapshot","rds:DeleteDBInstance","rds:DeleteDBParameterGroup","rds:DeleteDBSubnetGroup","rds:DeleteEventSubscription","rds:DescribeAccountAttributes","rds:DescribeCertificates","rds:DescribeDBClusterParameterGroups","rds:DescribeDBClusterParameters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBLogFiles","rds:DescribeDBParameterGroups","rds:DescribeDBParameters","rds:DescribeDBSecurityGroups","rds:DescribeDBSubnetGroups","rds:DescribeEngineDefaultClusterParameters","rds:DescribeEngineDefaultParameters","rds:DescribeEventCategories","rds:DescribeEventSubscriptions","rds:DescribeEvents","rds:DescribeOptionGroups","rds:DescribeOrderableDBInstanceOptions","rds:DescribePendingMaintenanceActions","rds:DescribeValidDBInstanceModifications","rds:DownloadDBLogFilePortion","rds:FailoverDBCluster","rds:ListTagsForResource","rds:ModifyDBCluster","rds:ModifyDBClusterParameterGroup","rds:ModifyDBClusterSnapshotAttribute","rds:ModifyDBInstance","rds:ModifyDBParameterGroup","rds:ModifyDBSubnetGroup","rds:ModifyEventSubscription","rds:PromoteReadReplicaDBCluster","rds:RebootDBInstance","rds:RemoveRoleFromDBCluster","rds:RemoveSourceIdentifierFromSubscription","rds:RemoveTagsFromResource","rds:ResetDBClusterParameterGroup","rds:ResetDBParameterGroup","rds:RestoreDBClusterFromSnapshot","rds:RestoreDBClusterToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","ec2:AllocateAddress","ec2:AssignIpv6Addresses","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkInterface","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:CreateVpcEndpoint","ec2:DescribeAccountAttributes","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeAvailabilityZones","ec2:DescribeCustomerGateways","ec2:DescribeInstances","ec2:DescribeNatGateways","ec2:DescribeNetworkInterfaces","ec2:DescribePrefixLists","ec2:DescribeRouteTables","ec2:DescribeSecurityGroupReferences","ec2:DescribeSecurityGroups","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeSubnets","ec2:DescribeVpcAttribute","ec2:DescribeVpcAttribute","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ec2:DescribeVpcs","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVpcAttribute","ec2:ModifyVpcEndpoint","iam:ListRoles","kms:ListAliases","kms:ListKeyPolicies","kms:ListKeys","kms:ListRetirableGrants","logs:DescribeLogStreams","logs:GetLogEvents","sns:ListSubscriptions","sns:ListTopics","sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"]}],"services":["rds","cloudwatch","ec2","iam","kms","logs","sns"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonSageMakerFullAccess","PolicyName":"AmazonSageMakerFullAccess","PolicyId":"ANPAJZ5IWYMXO5QDB4QOG","Path":"/","Description":"Provides full access to Amazon SageMaker via the AWS Management Console and SDK. Also provides select access to related services (e.g., S3, ECR, CloudWatch Logs).","DefaultVersionId":"v19"},"document":[{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":["arn:aws:sagemaker:*:*:domain/*","arn:aws:sagemaker:*:*:user-profile/*","arn:aws:sagemaker:*:*:app/*","arn:aws:sagemaker:*:*:flow-definition/*"],"Resource":null},{"Action":["sagemaker:CreatePresignedDomainUrl","sagemaker:DescribeDomain","sagemaker:ListDomains","sagemaker:DescribeUserProfile","sagemaker:ListUserProfiles","sagemaker:*App","sagemaker:ListApps"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:flow-definition/*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeleteScheduledAction","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:DescribeScheduledActions","application-autoscaling:PutScalingPolicy","application-autoscaling:PutScheduledAction","application-autoscaling:RegisterScalableTarget","aws-marketplace:ViewSubscriptions","cloudformation:GetTemplateSummary","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:PutMetricData","codecommit:BatchGetRepositories","codecommit:CreateRepository","codecommit:GetRepository","codecommit:List*","cognito-idp:AdminAddUserToGroup","cognito-idp:AdminCreateUser","cognito-idp:AdminDeleteUser","cognito-idp:AdminDisableUser","cognito-idp:AdminEnableUser","cognito-idp:AdminRemoveUserFromGroup","cognito-idp:CreateGroup","cognito-idp:CreateUserPool","cognito-idp:CreateUserPoolClient","cognito-idp:CreateUserPoolDomain","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:List*","cognito-idp:UpdateUserPool","cognito-idp:UpdateUserPoolClient","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:CreateVpcEndpoint","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DescribeDhcpOptions","ec2:DescribeNetworkInterfaces","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ecr:BatchCheckLayerAvailability","ecr:BatchGetImage","ecr:CreateRepository","ecr:Describe*","ecr:GetAuthorizationToken","ecr:GetDownloadUrlForLayer","ecr:StartImageScan","elastic-inference:Connect","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargets","fsx:DescribeFileSystems","glue:CreateJob","glue:DeleteJob","glue:GetJob*","glue:GetTable*","glue:GetWorkflowRun","glue:ResetJobBookmark","glue:StartJobRun","glue:StartWorkflowRun","glue:UpdateJob","groundtruthlabeling:*","iam:ListRoles","kms:DescribeKey","kms:ListAliases","lambda:ListFunctions","logs:CreateLogDelivery","logs:CreateLogGroup","logs:CreateLogStream","logs:DeleteLogDelivery","logs:Describe*","logs:GetLogDelivery","logs:GetLogEvents","logs:ListLogDeliveries","logs:PutLogEvents","logs:PutResourcePolicy","logs:UpdateLogDelivery","robomaker:CreateSimulationApplication","robomaker:DescribeSimulationApplication","robomaker:DeleteSimulationApplication","robomaker:CreateSimulationJob","robomaker:DescribeSimulationJob","robomaker:CancelSimulationJob","secretsmanager:ListSecrets","servicecatalog:Describe*","servicecatalog:List*","servicecatalog:ScanProvisionedProducts","servicecatalog:SearchProducts","servicecatalog:SearchProvisionedProducts","sns:ListTopics","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecr:SetRepositoryPolicy","ecr:CompleteLayerUpload","ecr:BatchDeleteImage","ecr:UploadLayerPart","ecr:DeleteRepositoryPolicy","ecr:InitiateLayerUpload","ecr:DeleteRepository","ecr:PutImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecr:*:*:repository/*sagemaker*"]},{"Action":["codecommit:GitPull","codecommit:GitPush"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codecommit:*:*:*sagemaker*","arn:aws:codecommit:*:*:*SageMaker*","arn:aws:codecommit:*:*:*Sagemaker*"]},{"Action":["codebuild:BatchGetBuilds","codebuild:StartBuild"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codebuild:*:*:project/sagemaker*","arn:aws:codebuild:*:*:build/*"]},{"Action":["states:DescribeExecution","states:GetExecutionHistory","states:StartExecution","states:StopExecution","states:UpdateStateMachine"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:statemachine:*sagemaker*","arn:aws:states:*:*:execution:*sagemaker*:*"]},{"Action":["secretsmanager:DescribeSecret","secretsmanager:GetSecretValue","secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"]},{"Action":["secretsmanager:DescribeSecret","secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicecatalog:ProvisionProduct"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicecatalog:TerminateProvisionedProduct","servicecatalog:UpdateProvisionedProduct"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject","s3:AbortMultipartUpload"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*","arn:aws:s3:::*aws-glue*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets","s3:GetBucketCors","s3:PutBucketCors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetBucketAcl","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*SageMaker*","arn:aws:lambda:*:*:function:*sagemaker*","arn:aws:lambda:*:*:function:*Sagemaker*","arn:aws:lambda:*:*:function:*LabelingFunction*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Subscribe","sns:CreateTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:*SageMaker*","arn:aws:sns:*:*:*Sagemaker*","arn:aws:sns:*:*:*sagemaker*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["athena:ListDataCatalogs","athena:ListDatabases","athena:ListTableMetadata","athena:GetQueryExecution","athena:GetQueryResults","athena:StartQueryExecution","athena:StopQueryExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:CreateTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*/sagemaker_tmp_*","arn:aws:glue:*:*:table/sagemaker_featurestore/*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:DeleteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*/sagemaker_tmp_*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:GetDatabases","glue:GetTable","glue:GetTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:CreateDatabase","glue:GetDatabase"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/sagemaker_featurestore","arn:aws:glue:*:*:database/sagemaker_processing","arn:aws:glue:*:*:database/default","arn:aws:glue:*:*:database/sagemaker_data_wrangler"]},{"Action":["redshift-data:ExecuteStatement","redshift-data:DescribeStatement","redshift-data:CancelStatement","redshift-data:GetStatementResult","redshift-data:ListSchemas","redshift-data:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["redshift:GetClusterCredentials"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:redshift:*:*:dbuser:*/sagemaker_access*","arn:aws:redshift:*:*:dbname:*"]}],"services":["sagemaker","application-autoscaling","aws-marketplace","cloudformation","cloudwatch","codecommit","cognito-idp","ec2","ecr","elastic-inference","elasticfilesystem","fsx","glue","groundtruthlabeling","iam","kms","lambda","logs","robomaker","secretsmanager","servicecatalog","sns","tag","codebuild","states","s3","athena","redshift-data","redshift"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores","PolicyName":"AWSBackupServiceRolePolicyForRestores","PolicyId":"ANPAJZCCL6F2WPVOUXZKI","Path":"/service-role/","Description":"Provides AWS Backup permission to perform restores on your behalf across AWS services. This policy includes permissions to create and delete AWS resources, such as EBS volumes, RDS instances, and EFS file systems, which are part of the restore process.","DefaultVersionId":"v9"},"document":[{"Action":["dynamodb:Scan","dynamodb:Query","dynamodb:UpdateItem","dynamodb:PutItem","dynamodb:GetItem","dynamodb:DeleteItem","dynamodb:BatchWriteItem","dynamodb:DescribeTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/*"]},{"Action":["dynamodb:RestoreTableFromBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/*/backup/*"]},{"Action":["ec2:CreateVolume","ec2:DeleteVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeSnapshots","ec2:DescribeVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DeleteVolume","storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:CreateStorediSCSIVolume","storagegateway:CreateCachediSCSIVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["storagegateway:ListVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["rds:DescribeDBInstances","rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:RestoreDBInstanceFromDBSnapshot","rds:DeleteDBInstance","rds:AddTagsToResource","rds:DescribeDBClusters","rds:RestoreDBClusterFromSnapshot","rds:DeleteDBCluster","rds:RestoreDBInstanceToPointInTime"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:Restore","elasticfilesystem:CreateFilesystem","elasticfilesystem:DescribeFilesystems","elasticfilesystem:DeleteFilesystem"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:Decrypt","kms:Encrypt","kms:GenerateDataKey","kms:ReEncryptTo","kms:ReEncryptFrom"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:CreateFileSystemFromBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*","arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DescribeFileSystems","fsx:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DeleteFileSystem","fsx:UntagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dynamodb","ec2","storagegateway","rds","elasticfilesystem","kms","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/DynamoDBKinesisReplicationServiceRolePolicy","PolicyName":"DynamoDBKinesisReplicationServiceRolePolicy","PolicyId":"ANPAZKAPJZG4A745YPIYL","Path":"/aws-service-role/","Description":"Provide AWS DynamoDB access to KinesisDataStreams","DefaultVersionId":"v1"},"document":[{"Action":["kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kinesis:PutRecord","kinesis:PutRecords","kinesis:DescribeStream"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["kms","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLaunchWizard_Fullaccess","PolicyName":"AmazonLaunchWizard_Fullaccess","PolicyId":"ANPAZKAPJZG4ABPQ7BLC2","Path":"/","Description":"Full access to AWS Launch wizard and other required services.","DefaultVersionId":"v10"},"document":[{"Action":["applicationinsights:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["resource-groups:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53:ChangeResourceRecordSets","route53:GetChange","route53:ListResourceRecordSets","route53:ListHostedZones","route53:ListHostedZonesByName"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:List*","cloudwatch:Get*","cloudwatch:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateVpc","ec2:CreateKeyPair","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSubnet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AllocateAddress","ec2:AllocateHosts","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:CreateDhcpOptions","ec2:CreateEgressOnlyInternetGateway","ec2:CreateNetworkInterface","ec2:CreateVolume","ec2:CreateVpcEndpoint","ec2:CreateTags","ec2:DeleteTags","ec2:RunInstances","ec2:StartInstances","ec2:ModifyInstanceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVolumeAttribute","ec2:ModifyVpcAttribute","ec2:AssociateDhcpOptions","ec2:AssociateSubnetCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVolume","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteKeyPair","ec2:DeleteNatGateway","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DeleteVpc","ec2:DetachInternetGateway","ec2:DetachVolume","ec2:DeleteSnapshot","ec2:AssociateRouteTable","ec2:AssociateVpcCidrBlock","ec2:DeleteNetworkAcl","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSubnet","ec2:DetachNetworkInterface","ec2:DisassociateAddress","ec2:DisassociateVpcCidrBlock","ec2:GetLaunchTemplateData","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifyVolume","ec2:AuthorizeSecurityGroupEgress","ec2:GetConsoleOutput","ec2:GetPasswordData","ec2:ReleaseAddress","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:DisassociateIamInstanceProfile","ec2:DisassociateRouteTable","ec2:DisassociateSubnetCidrBlock","ec2:ModifyInstancePlacement","ec2:DeletePlacementGroup","ec2:CreatePlacementGroup","elasticfilesystem:DeleteFileSystem","elasticfilesystem:DeleteMountTarget","ds:AddIpRoutes","ds:CreateComputer","ds:CreateMicrosoftAD","ds:DeleteDirectory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStack*","cloudformation:Get*","cloudformation:ListStacks","cloudformation:SignalResource","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LaunchWizard*/*","arn:aws:cloudformation:*:*:stack/ApplicationInsights*/*"]},{"Action":["ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateInstanceProfile","iam:DeleteInstanceProfile","iam:RemoveRoleFromInstanceProfile","iam:AddRoleToInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*","arn:aws:iam::*:role/service-role/AmazonLambdaRoleForLaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["autoscaling:AttachInstances","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteLaunchConfiguration","autoscaling:UpdateAutoScalingGroup","logs:CreateLogStream","logs:DeleteLogGroup","logs:DeleteLogStream","logs:DescribeLog*","logs:PutLogEvents","resource-groups:CreateGroup","resource-groups:DeleteGroup","sns:ListSubscriptionsByTopic","sns:Publish","ssm:DeleteDocument","ssm:DeleteParameter*","ssm:DescribeDocument*","ssm:GetDocument","ssm:PutParameter"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:resource-groups:*:*:group/LaunchWizard*","arn:aws:sns:*:*:*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/LaunchWizard*","arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/LaunchWizard*","arn:aws:ssm:*:*:parameter/LaunchWizard*","arn:aws:ssm:*:*:document/LaunchWizard*","arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DeleteLogStream","logs:GetLogEvents","logs:PutLogEvents","ssm:AddTagsToResource","ssm:DescribeDocument","ssm:GetDocument","ssm:ListTagsForResource","ssm:RemoveTagsFromResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*","arn:aws:ssm:*:*:parameter/LaunchWizard*","arn:aws:ssm:*:*:document/LaunchWizard*"]},{"Action":["autoscaling:Describe*","cloudformation:DescribeAccountLimits","cloudformation:DescribeStackDriftDetectionStatus","cloudformation:List*","ds:Describe*","ds:ListAuthorizedApplications","ec2:Describe*","ec2:Get*","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetPolicyVersion","iam:GetPolicy","iam:List*","logs:CreateLogGroup","logs:GetLogDelivery","logs:GetLogRecord","logs:ListLogDeliveries","resource-groups:Get*","resource-groups:List*","servicequotas:GetServiceQuota","servicequotas:ListServiceQuotas","sns:ListSubscriptions","sns:ListTopics","ssm:CreateDocument","ssm:DescribeAutomation*","ssm:DescribeInstanceInformation","ssm:DescribeParameters","ssm:GetAutomationExecution","ssm:GetCommandInvocation","ssm:GetParameter*","ssm:GetConnectionStatus","ssm:ListCommand*","ssm:ListDocument*","ssm:ListInstanceAssociations","ssm:SendAutomationSignal","ssm:StartAutomationExecution","ssm:StopAutomationExecution","tag:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:GetLog*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*"]},{"Action":["cloudformation:List*","cloudformation:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LaunchWizard*/"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["launchwizard:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sqs:TagQueue","sqs:GetQueueUrl","sqs:AddPermission","sqs:ListQueues","sqs:DeleteQueue","sqs:GetQueueAttributes","sqs:ListQueueTags","sqs:CreateQueue","sqs:SetQueueAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sqs:*:*:LaunchWizard*"]},{"Action":["cloudwatch:PutMetricAlarm","iam:GetInstanceProfile","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:LaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["cloudformation:CreateStack","route53:ListHostedZones","ec2:CreateSecurityGroup","ec2:AuthorizeSecurityGroupIngress","elasticfilesystem:DescribeFileSystems","elasticfilesystem:CreateFileSystem","elasticfilesystem:CreateMountTarget","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::launchwizard*","arn:aws:s3:::launchwizard*/*","arn:aws:s3:::aws-sap-data-provider/config.properties"]},{"Action":["cloudformation:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketVersioning","s3:DeleteBucket","lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:LaunchWizard*","arn:aws:s3:::launchwizard*"]},{"Action":["dynamodb:CreateTable","dynamodb:DescribeTable","dynamodb:DeleteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/LaunchWizard*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:DeleteSecret","secretsmanager:TagResource","secretsmanager:UntagResource","secretsmanager:PutResourcePolicy","secretsmanager:DeleteResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:LaunchWizard*"]},{"Action":["secretsmanager:GetRandomPassword","secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CreateOpsMetadata"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DeleteOpsMetadata"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:opsmetadata/aws/ssm/LaunchWizard*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:LaunchWizard*"]},{"Action":["fsx:UntagResource","fsx:TagResource","fsx:DeleteFileSystem","fsx:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:CreateFileSystem"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["applicationinsights","resource-groups","route53","s3","kms","cloudwatch","ec2","elasticfilesystem","ds","cloudformation","iam","autoscaling","logs","sns","ssm","servicequotas","tag","launchwizard","sqs","lambda","dynamodb","secretsmanager","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AwsGlueDataBrewFullAccessPolicy","PolicyName":"AwsGlueDataBrewFullAccessPolicy","PolicyId":"ANPAZKAPJZG4ACNRIK7M3","Path":"/","Description":"Provides full access to AWS Glue DataBrew via the AWS Management Console. Also provides select access to related services (e.g., S3, KMS, Glue).","DefaultVersionId":"v4"},"document":[{"Action":["appflow:DescribeFlow","appflow:DescribeFlowExecutionRecords","appflow:ListFlows","databrew:*","glue:GetConnection","glue:GetConnections","glue:GetDatabases","glue:GetPartitions","glue:GetTable","glue:GetTables","glue:GetDataCatalogEncryptionSettings","dataexchange:ListDataSets","dataexchange:ListDataSetRevisions","dataexchange:ListRevisionAssets","dataexchange:CreateJob","dataexchange:StartJob","dataexchange:GetJob","ec2:DescribeSecurityGroups","ec2:DescribeVpcs","ec2:DescribeSubnets","kms:DescribeKey","kms:ListKeys","kms:ListAliases","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","redshift-data:ListDatabases","redshift-data:ListSchemas","redshift-data:ListTables","s3:ListAllMyBuckets","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetEncryptionConfiguration","secretsmanager:ListSecrets","secretsmanager:DescribeSecret","sts:GetCallerIdentity","cloudtrail:LookupEvents","iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:CreateConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:connection/AwsGlueDataBrew-*"]},{"Action":["s3:ListBucket","s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::databrew-public-datasets-*"]},{"Action":["kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]}],"services":["appflow","databrew","glue","dataexchange","ec2","kms","redshift","redshift-data","s3","secretsmanager","sts","cloudtrail","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonTimestreamConsoleFullAccess","PolicyName":"AmazonTimestreamConsoleFullAccess","PolicyId":"ANPAZKAPJZG4AZJLUKMAZ","Path":"/","Description":"Provides full access to manage Amazon Timestream using the AWS Management Console. Note that this policy also grants permissions for certain KMS operations, and operations to manage your saved queries. If using Customer managed CMK, please refer to documentation for additional permissions needed.","DefaultVersionId":"v2"},"document":[{"Action":["timestream:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dbqms:CreateFavoriteQuery","dbqms:DescribeFavoriteQueries","dbqms:UpdateFavoriteQuery","dbqms:DeleteFavoriteQueries","dbqms:GetQueryString","dbqms:CreateQueryHistory","dbqms:DescribeQueryHistory","dbqms:UpdateQueryHistory","dbqms:DeleteQueryHistory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["timestream","kms","dbqms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKendraFullAccess","PolicyName":"AmazonKendraFullAccess","PolicyId":"ANPAZKAPJZG4BK2ALV3AM","Path":"/","Description":"Provides full access to Amazon Kendra via the AWS Management Console.","DefaultVersionId":"v1"},"document":[{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeSecurityGroups","ec2:DescribeVpcs","ec2:DescribeSubnets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricData"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:DescribeSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:AmazonKendra-*"]},{"Action":["kendra:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","ec2","kms","s3","secretsmanager","cloudwatch","kendra"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSThinkboxAWSPortalAdminPolicy","PolicyName":"AWSThinkboxAWSPortalAdminPolicy","PolicyId":"ANPAZKAPJZG4BVM3T5TP2","Path":"/","Description":"This policy grants AWS Thinkbox's Deadline software full access to multiple AWS services as required for AWS Portal administration. This includes access to create arbitrary tags on several EC2 resource types.","DefaultVersionId":"v4"},"document":[{"Action":["ec2:AttachInternetGateway","ec2:AssociateAddress","ec2:AssociateRouteTable","ec2:AllocateAddress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateFleet","ec2:CreateLaunchTemplate","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreatePlacementGroup","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSecurityGroup","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcEndpoint","ec2:DescribeAvailabilityZones","ec2:DescribeAddresses","ec2:DescribeFleets","ec2:DescribeFleetHistory","ec2:DescribeFleetInstances","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInternetGateways","ec2:DescribeLaunchTemplates","ec2:DescribeRouteTables","ec2:DescribeNatGateways","ec2:DescribeTags","ec2:DescribeKeyPairs","ec2:DescribePlacementGroups","ec2:DescribeInstanceTypeOfferings","ec2:DescribeRegions","ec2:DescribeSpotFleetRequestHistory","ec2:DescribeSecurityGroups","ec2:DescribeSpotFleetInstances","ec2:DescribeSpotFleetRequests","ec2:DescribeSpotPriceHistory","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:GetConsoleOutput","ec2:ImportKeyPair","ec2:ReleaseAddress","ec2:RequestSpotFleet","ec2:CancelSpotFleetRequests","ec2:DisassociateAddress","ec2:DeleteFleets","ec2:DeleteLaunchTemplate","ec2:DeleteVpc","ec2:DeletePlacementGroup","ec2:DeleteVpcEndpoints","ec2:DeleteInternetGateway","ec2:DeleteSecurityGroup","ec2:RevokeSecurityGroupIngress","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DisassociateRouteTable","ec2:DeleteSubnet","ec2:DeleteNatGateway","ec2:DetachInternetGateway","ec2:ModifyInstanceAttribute","ec2:ModifyFleet","ec2:ModifySpotFleetRequest","ec2:ModifyVpcAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:launch-template/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:placement-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*::image/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:internet-gateway/*","arn:aws:ec2:*:*:route-table/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:vpc/*","arn:aws:ec2:*:*:natgateway/*"]},{"Action":["iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:instance-profile/AWSPortal*"]},{"Action":["iam:GetPolicy","iam:ListEntitiesForPolicy","iam:ListPolicyVersions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:policy/AWSPortal*"]},{"Action":["iam:GetRole","iam:GetRolePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPortal*","arn:aws:iam::*:role/DeadlineSpot*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSPortal*","arn:aws:iam::*:role/DeadlineSpot*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/*"]},{"Action":["s3:CreateBucket","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketVersioning","s3:PutBucketAcl","s3:PutBucketCORS","s3:PutBucketVersioning","s3:GetBucketAcl","s3:GetObject","s3:PutBucketLogging","s3:PutBucketTagging","s3:PutObject","s3:ListBucket","s3:ListBucketVersions","s3:PutEncryptionConfiguration","s3:PutLifecycleConfiguration","s3:DeleteBucket","s3:DeleteObject","s3:DeleteBucketPolicy","s3:DeleteObjectVersion"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3::*:awsportal*","arn:aws:s3::*:stack*","arn:aws:s3::*:aws-portal-cache*","arn:aws:s3::*:logs-for-aws-portal-cache*","arn:aws:s3::*:logs-for-stack*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:Scan"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"]},{"Action":["cloudformation:CreateStack","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResources","cloudformation:DeleteStack","cloudformation:DeleteChangeSet","cloudformation:ListStackResources","cloudformation:CreateChangeSet","cloudformation:DescribeChangeSet","cloudformation:ExecuteChangeSet","cloudformation:UpdateTerminationProtection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/stack*/*","arn:aws:cloudformation:*:*:stack/Deadline*/*"]},{"Action":["cloudformation:EstimateTemplateCost","cloudformation:DescribeStacks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:PutRetentionPolicy","logs:DeleteRetentionPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/thinkbox*"]},{"Action":["logs:DescribeLogGroups","logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:Encrypt","kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:DeleteSecret","secretsmanager:UpdateSecret","secretsmanager:DescribeSecret","secretsmanager:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:rcs-tls-pw*"]}],"services":["ec2","iam","s3","dynamodb","cloudformation","logs","kms","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds","PolicyName":"EC2InstanceProfileForImageBuilderECRContainerBuilds","PolicyId":"ANPAZKAPJZG4C32QNC6KD","Path":"/","Description":"EC2 Instance profile for building container images with EC2 Image Builder. This policy grants the user broad permissions to upload ECR images.","DefaultVersionId":"v1"},"document":[{"Action":["imagebuilder:GetComponent","imagebuilder:GetContainerRecipe","ecr:GetAuthorizationToken","ecr:BatchGetImage","ecr:InitiateLayerUpload","ecr:UploadLayerPart","ecr:CompleteLayerUpload","ecr:BatchCheckLayerAvailability","ecr:GetDownloadUrlForLayer","ecr:PutImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:Decrypt"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::ec2imagebuilder*"]},{"Action":["logs:CreateLogStream","logs:CreateLogGroup","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"]}],"services":["imagebuilder","ecr","kms","s3","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSAuditManagerServiceRolePolicy","PolicyName":"AWSAuditManagerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4C5N52UWST","Path":"/aws-service-role/","Description":"Enables access to AWS Services and Resources used or managed by AWS Audit Manager","DefaultVersionId":"v1"},"document":[{"Action":["license-manager:ListLicenseConfigurations","license-manager:ListAssociationsForLicenseConfiguration","license-manager:ListUsageForLicenseConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GenerateCredentialReport","iam:GetAccountSummary","iam:ListPolicies","iam:GetAccountPasswordPolicy","iam:ListUsers","iam:ListUserPolicies","iam:ListRoles","iam:ListRolePolicies","iam:ListGroups","iam:ListGroupPolicies","iam:ListEntitiesForPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","ec2:DescribeFlowLogs","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","ec2:DescribeNetworkAcls","ec2:DescribeRouteTables","ec2:DescribeSnapshots","ec2:DescribeVpcEndpoints"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:DescribeTrails"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeDeliveryChannels","config:ListDiscoveredResources","config:DescribeConfigRules"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["securityhub:DescribeStandards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetLifecycleConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["waf:ListActivatedRulesInRuleGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["guardduty:ListDetectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53:GetQueryLoggingConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cognito-idp:DescribeUserPool"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]}],"services":["license-manager","iam","ec2","cloudtrail","config","securityhub","kms","cloudwatch","s3","events","waf","guardduty","route53","organizations","cognito-idp","elasticfilesystem"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess","PolicyName":"AWSCloudTrail_FullAccess","PolicyId":"ANPAZKAPJZG4CA4SIJQAM","Path":"/","Description":"Provides full access to AWS CloudTrail.","DefaultVersionId":"v3"},"document":[{"Action":["sns:AddPermission","sns:CreateTopic","sns:SetTopicAttributes","sns:GetTopicAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:aws-cloudtrail-logs*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketPolicy","s3:PutBucketPublicAccessBlock"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-cloudtrail-logs*"]},{"Action":["s3:ListAllMyBuckets","s3:GetBucketLocation","s3:GetBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudtrail:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:CreateLogGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:aws-cloudtrail-logs*"]},{"Action":["iam:ListRoles","iam:GetRolePolicy","iam:GetUser"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateKey","kms:CreateAlias","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:ListFunctions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListGlobalTables","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["sns","s3","cloudtrail","logs","iam","kms","lambda","dynamodb"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AccessAnalyzerServiceRolePolicy","PolicyName":"AccessAnalyzerServiceRolePolicy","PolicyId":"ANPAZKAPJZG4CAIXDDRI2","Path":"/aws-service-role/","Description":"Allow Access Analyzer to analyze resource metadata","DefaultVersionId":"v5"},"document":[{"Action":["ec2:DescribeAddresses","ec2:DescribeByoipCidrs","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:GetKeyPolicy","kms:ListGrants","kms:ListKeyPolicies","kms:ListKeys","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListLayers","lambda:ListLayerVersions","lambda:ListVersionsByFunction","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:ListAccounts","organizations:ListAccountsForParent","organizations:ListAWSServiceAccessForOrganization","organizations:ListChildren","organizations:ListDelegatedAdministrators","organizations:ListOrganizationalUnitsForParent","organizations:ListParents","organizations:ListRoots","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketLocation","s3:GetBucketPolicyStatus","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:ListAccessPoints","s3:ListAllMyBuckets","sns:GetTopicAttributes","sns:ListTopics","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecrets","sqs:GetQueueAttributes","sqs:ListQueues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","kms","lambda","organizations","s3","sns","secretsmanager","sqs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonTimestreamFullAccess","PolicyName":"AmazonTimestreamFullAccess","PolicyId":"ANPAZKAPJZG4CGYUJBH4V","Path":"/","Description":"Provides full access to Amazon Timestream. Note that this policy also grants certain KMS operation access. If using Customer managed CMK, please refer to documentation for additional permissions needed.","DefaultVersionId":"v1"},"document":[{"Action":["timestream:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["timestream","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess","PolicyName":"AWSAuditManagerAdministratorAccess","PolicyId":"ANPAZKAPJZG4EBAFCQQJX","Path":"/","Description":"Provides administrative access to enable or disable AWS Audit Manager, update settings, and manage assessments, controls, and frameworks","DefaultVersionId":"v1"},"document":[{"Action":["auditmanager:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAccountsForParent","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:ListParents","organizations:ListChildren"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:RegisterDelegatedAdministrator","organizations:DeregisterDelegatedAdministrator","organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetUser","iam:ListUsers","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:UpdateRoleDescription","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["auditmanager","organizations","iam","s3","kms","sns","events","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder","PolicyName":"EC2InstanceProfileForImageBuilder","PolicyId":"ANPAZKAPJZG4EJC2UPLYL","Path":"/","Description":"EC2 Instance profile for Image Builder service.","DefaultVersionId":"v3"},"document":[{"Action":["imagebuilder:GetComponent"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:Decrypt"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::ec2imagebuilder*"]},{"Action":["logs:CreateLogStream","logs:CreateLogGroup","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"]}],"services":["imagebuilder","kms","s3","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonElasticFileSystemServiceRolePolicy","PolicyName":"AmazonElasticFileSystemServiceRolePolicy","PolicyId":"ANPAZKAPJZG4FXCJYWBN7","Path":"/aws-service-role/","Description":"Allows Amazon Elastic File System to manage AWS resources on your behalf","DefaultVersionId":"v3"},"document":[{"Action":["backup-storage:MountCapsule","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeNetworkInterfaceAttribute","ec2:ModifyNetworkInterfaceAttribute","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kms:*:*:key/*"]},{"Action":["backup:CreateBackupVault","backup:PutBackupVaultAccessPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-vault:aws/efs/automatic-backup-vault"]},{"Action":["backup:CreateBackupPlan","backup:CreateBackupSelection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-plan:*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/backup.amazonaws.com/AWSServiceRoleForBackup"]}],"services":["backup-storage","ec2","tag","kms","backup","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKeyspacesFullAccess","PolicyName":"AmazonKeyspacesFullAccess","PolicyId":"ANPAZKAPJZG4HMS72N6JG","Path":"/","Description":"Provide full access to Amazon Keyspaces","DefaultVersionId":"v2"},"document":[{"Action":["cassandra:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeleteScheduledAction","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:DescribeScheduledActions","application-autoscaling:PutScheduledAction","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:PutMetricAlarm"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable"]}],"services":["cassandra","application-autoscaling","kms","cloudwatch","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSApplicationMigrationFullAccess","PolicyName":"AWSApplicationMigrationFullAccess","PolicyId":"ANPAZKAPJZG4HPQNMM2HL","Path":"/","Description":"This policy provides permissions to all public APIs of AWS Application Migration Service (MGN), as well as permissions to read KMS key information. Attach this policy to your IAM users or roles.","DefaultVersionId":"v1"},"document":[{"Action":["mgn:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInstanceTypes","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstanceTypeOfferings","ec2:DescribeLaunchTemplateVersions","ec2:DescribeLaunchTemplates","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DescribeVolumes","ec2:GetEbsEncryptionByDefault","ec2:GetEbsDefaultKmsKeyId"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["mgn","kms","ec2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AlexaForBusinessLifesizeDelegatedAccessPolicy","PolicyName":"AlexaForBusinessLifesizeDelegatedAccessPolicy","PolicyId":"ANPAZKAPJZG4HXQBRRIQV","Path":"/","Description":"Provide access to Lifesize AVS devices","DefaultVersionId":"v2"},"document":[{"Action":["a4b:DisassociateDeviceFromRoom","a4b:DeleteDevice","a4b:UpdateDevice","a4b:GetDevice"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:a4b:us-east-1:*:device/*/*:A2IWO7UEGWV4TL"]},{"Action":["a4b:RegisterAVSDevice"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["a4b:SearchDevices"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["a4b:AssociateDeviceWithRoom"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:a4b:us-east-1:*:device/*/*:A2IWO7UEGWV4TL","arn:aws:a4b:us-east-1:*:room/*"]},{"Action":["a4b:GetRoom","a4b:GetAddressBook","a4b:SearchRooms","a4b:CreateContact","a4b:CreateRoom","a4b:UpdateContact","a4b:ListConferenceProviders","a4b:DeleteRoom","a4b:CreateAddressBook","a4b:DisassociateContactFromAddressBook","a4b:CreateConferenceProvider","a4b:PutConferencePreference","a4b:DeleteAddressBook","a4b:AssociateContactWithAddressBook","a4b:DeleteContact","a4b:SearchProfiles","a4b:UpdateProfile","a4b:GetContact"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kms:*:*:key/*"]}],"services":["a4b","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess","PolicyName":"AWSLambda_ReadOnlyAccess","PolicyId":"ANPAZKAPJZG4IERNVMNPE","Path":"/","Description":"Grants read-only access to AWS Lambda service, AWS Lambda console features, and other related AWS services.","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources","cloudwatch:GetMetricData","cloudwatch:ListMetrics","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:ListAliases","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","logs:DescribeLogGroups","lambda:Get*","lambda:List*","states:DescribeStateMachine","states:ListStateMachines","tag:GetResources","xray:GetTraceSummaries","xray:BatchGetTraces"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/lambda/*"]}],"services":["cloudformation","cloudwatch","ec2","kms","iam","logs","lambda","states","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSProtonFullAccess","PolicyName":"AWSProtonFullAccess","PolicyId":"ANPAZKAPJZG4IOK6P734E","Path":"/","Description":"Provides full access to the AWS Proton APIs and Management Console. In addition to these permissions, access to Amazon S3 is also needed to register template bundles from your S3 buckets, as well as access to Amazon IAM to create and manage the service roles for Proton.","DefaultVersionId":"v1"},"document":[{"Action":["proton:*","codestar-connections:ListConnections","kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["codestar-connections:PassConnection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codestar-connections:*:*:connection/*"]}],"services":["proton","codestar-connections","kms","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonConnect_FullAccess","PolicyName":"AmazonConnect_FullAccess","PolicyId":"ANPAZKAPJZG4JXAE7KLRO","Path":"/","Description":"The purpose of this policy is to grant permissions to AWS Connect users required to use Connect resources. This policy provides full access to AWS Connect resources via the Connect Console and public APIs","DefaultVersionId":"v1"},"document":[{"Action":["connect:*","ds:CreateAlias","ds:AuthorizeApplication","ds:CreateIdentityPoolDirectory","ds:DeleteDirectory","ds:DescribeDirectories","ds:UnauthorizeApplication","firehose:DescribeDeliveryStream","firehose:ListDeliveryStreams","kinesis:DescribeStream","kinesis:ListStreams","kms:DescribeKey","kms:ListAliases","lex:GetBots","logs:CreateLogGroup","s3:GetBucketLocation","s3:ListAllMyBuckets","lambda:ListFunctions","ds:CheckAlias"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:GetBucketAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::amazon-connect-*"]},{"Action":["servicequotas:GetServiceQuota"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:servicequotas:*:*:connect/*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:DeleteServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/connect.amazonaws.com/AWSServiceRoleForAmazonConnect*"]}],"services":["connect","ds","firehose","kinesis","kms","lex","logs","s3","lambda","servicequotas","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLookoutEquipmentFullAccess","PolicyName":"AmazonLookoutEquipmentFullAccess","PolicyId":"ANPAZKAPJZG4KPPCPGNJA","Path":"/","Description":"Provides full access to Amazon Lookout for Equipment operations","DefaultVersionId":"v2"},"document":[{"Action":["lookoutequipment:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:RetireGrant","kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["lookoutequipment","iam","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSApplicationMigrationServiceRolePolicy","PolicyName":"AWSApplicationMigrationServiceRolePolicy","PolicyId":"ANPAZKAPJZG4LGJRHTEPG","Path":"/aws-service-role/","Description":"Allows AWS application Migration Service to create and manage AWS resources on your behalf.","DefaultVersionId":"v1"},"document":[{"Action":["mgn:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListRetirableGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["mgh:AssociateCreatedArtifact","mgh:CreateProgressUpdateStream","mgh:DisassociateCreatedArtifact","mgh:GetHomeRegion","mgh:ImportMigrationTask","mgh:NotifyMigrationTaskState","mgh:PutResourceAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeAccountAttributes","ec2:DescribeAvailabilityZones","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInstanceTypes","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeLaunchTemplateVersions","ec2:DescribeLaunchTemplates","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DescribeVolumes","ec2:GetEbsDefaultKmsKeyId","ec2:GetEbsEncryptionByDefault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:RegisterImage","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:CreateLaunchTemplateVersion","ec2:ModifyLaunchTemplate","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:DeleteVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:StartInstances","ec2:StopInstances","ec2:TerminateInstances","ec2:ModifyInstanceAttribute","ec2:GetConsoleOutput","ec2:GetConsoleScreenshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RevokeSecurityGroupEgress","ec2:AuthorizeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*"]},{"Action":["ec2:CreateSecurityGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:vpc/*"]},{"Action":["ec2:CreateLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*"]},{"Action":["ec2:CreateSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:CreateSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:snapshot/*"]},{"Action":["ec2:DetachVolume","ec2:AttachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:AttachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:DetachVolume"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:launch-template/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSApplicationMigrationReplicationServerRole","arn:aws:iam::*:role/service-role/AWSApplicationMigrationConversionServerRole"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:launch-template/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:snapshot/*","arn:aws:ec2:*:*:instance/*"]}],"services":["mgn","kms","mgh","ec2","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonKeyspacesReadOnlyAccess","PolicyName":"AmazonKeyspacesReadOnlyAccess","PolicyId":"ANPAZKAPJZG4LHLFMFIPN","Path":"/","Description":"Provide read only access to Amazon Keyspaces","DefaultVersionId":"v2"},"document":[{"Action":["cassandra:Select"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:DescribeScheduledActions","cloudwatch:DescribeAlarms","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cassandra","application-autoscaling","cloudwatch","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupFullAccess","PolicyName":"AWSBackupFullAccess","PolicyId":"ANPAZKAPJZG4LL52EIPJX","Path":"/","Description":"This policy is for backup administrators, granting full access to AWS Backup operations, including creating or editing backup plans, assigning AWS resources to backup plans, deleting backups, and restoring backups.","DefaultVersionId":"v7"},"document":[{"Action":["backup:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["backup-storage:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:describeDBClusterSnapshots","rds:describeDBClusters","rds:describeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DeleteDBSnapshot","rds:DeleteDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSnapshot","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:GenerateDataKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","backup-storage","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","kms","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataExchangeSubscriberFullAccess","PolicyName":"AWSDataExchangeSubscriberFullAccess","PolicyId":"ANPAZKAPJZG4MAWRW4GF7","Path":"/","Description":"Grants data subscriber access to AWS Data Exchange and AWS Marketplace actions using the AWS Management Console and SDK. It also provides select access to related services needed to take full advantage of AWS Data Exchange.","DefaultVersionId":"v4"},"document":[{"Action":["dataexchange:Get*","dataexchange:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dataexchange:CreateJob","dataexchange:StartJob","dataexchange:CancelJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:Subscribe","aws-marketplace:Unsubscribe","aws-marketplace:ViewSubscriptions","aws-marketplace:GetAgreementRequest","aws-marketplace:ListAgreementRequests","aws-marketplace:CancelAgreementRequest"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListAliases","kms:ListKeys"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dataexchange","s3","aws-marketplace","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonMonitronFullAccess","PolicyName":"AmazonMonitronFullAccess","PolicyId":"ANPAZKAPJZG4MHDVZEITQ","Path":"/","Description":"Provides full access to manage Amazon Monitron","DefaultVersionId":"v1"},"document":[{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["monitron:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeAccount","organizations:DescribeOrganization","ds:DescribeDirectories","ds:DescribeTrusts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["iam","monitron","kms","organizations","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataExchangeFullAccess","PolicyName":"AWSDataExchangeFullAccess","PolicyId":"ANPAZKAPJZG4MPDTDB3FH","Path":"/","Description":"Grants full access to AWS Data Exchange and AWS Marketplace actions using the AWS Management Console and SDK. It also provides select access to related services needed to take full advantage of AWS Data Exchange.","DefaultVersionId":"v4"},"document":[{"Action":["dataexchange:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutObject","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:DescribeEntity","aws-marketplace:ListEntities","aws-marketplace:StartChangeSet","aws-marketplace:ListChangeSets","aws-marketplace:DescribeChangeSet","aws-marketplace:CancelChangeSet","aws-marketplace:GetAgreementApprovalRequest","aws-marketplace:ListAgreementApprovalRequests","aws-marketplace:AcceptAgreementApprovalRequest","aws-marketplace:RejectAgreementApprovalRequest","aws-marketplace:UpdateAgreementApprovalRequest","aws-marketplace:SearchAgreements","aws-marketplace:GetAgreementTerms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:Subscribe","aws-marketplace:Unsubscribe","aws-marketplace:ViewSubscriptions","aws-marketplace:GetAgreementRequest","aws-marketplace:ListAgreementRequests","aws-marketplace:CancelAgreementRequest"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListAliases","kms:ListKeys"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dataexchange","s3","aws-marketplace","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataExchangeProviderFullAccess","PolicyName":"AWSDataExchangeProviderFullAccess","PolicyId":"ANPAZKAPJZG4MQSUGZZPZ","Path":"/","Description":"Grants data provider access to AWS Data Exchange and AWS Marketplace actions using the AWS Management Console and SDK. It also provides select access to related services needed to take full advantage of AWS Data Exchange. ","DefaultVersionId":"v7"},"document":[{"Action":["dataexchange:CreateDataSet","dataexchange:CreateRevision","dataexchange:CreateAsset","dataexchange:Get*","dataexchange:Update*","dataexchange:List*","dataexchange:Delete*","dataexchange:TagResource","dataexchange:UntagResource","dataexchange:PublishDataSet","tag:GetTagKeys","tag:GetTagValues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dataexchange:CreateJob","dataexchange:StartJob","dataexchange:CancelJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutObject","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:DescribeEntity","aws-marketplace:ListEntities","aws-marketplace:DescribeChangeSet","aws-marketplace:ListChangeSets","aws-marketplace:StartChangeSet","aws-marketplace:CancelChangeSet","aws-marketplace:GetAgreementApprovalRequest","aws-marketplace:ListAgreementApprovalRequests","aws-marketplace:AcceptAgreementApprovalRequest","aws-marketplace:RejectAgreementApprovalRequest","aws-marketplace:UpdateAgreementApprovalRequest","aws-marketplace:SearchAgreements","aws-marketplace:GetAgreementTerms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListAliases","kms:ListKeys"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dataexchange","tag","s3","aws-marketplace","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForImageBuilder","PolicyName":"AWSServiceRoleForImageBuilder","PolicyId":"ANPAZKAPJZG4NE22WISEW","Path":"/aws-service-role/","Description":"Allows EC2ImageBuilder to call AWS services on your behalf.","DefaultVersionId":"v12"},"document":[{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:key-pair/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:volume/*","arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CopyImage","ec2:CreateImage","ec2:CreateLaunchTemplate","ec2:DeregisterImage","ec2:DescribeImages","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstances","ec2:DescribeInstanceTypeOfferings","ec2:DescribeInstanceTypes","ec2:DescribeSubnets","ec2:DescribeTags","ec2:ModifyImageAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:ModifySnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["license-manager:UpdateLicenseSpecificationsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Publish"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:ListCommands","ssm:ListCommandInvocations","ssm:AddTagsToResource","ssm:DescribeInstanceInformation","ssm:GetAutomationExecution","ssm:StopAutomationExecution","ssm:ListInventoryEntries","ssm:SendAutomationSignal","ssm:DescribeInstanceAssociationsStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWS-RunPowerShellScript","arn:aws:ssm:*:*:document/AWS-RunShellScript","arn:aws:ssm:*:*:document/AWSEC2-RunSysprep","arn:aws:s3:::*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["ssm:StartAutomationExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:automation-definition/ImageBuilder*"]},{"Action":["ssm:CreateAssociation","ssm:DeleteAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory","arn:aws:ssm:*:*:association/*","arn:aws:ec2:*:*:instance/*"]},{"Action":["kms:Encrypt","kms:Decrypt","kms:ReEncryptFrom","kms:ReEncryptTo","kms:GenerateDataKeyWithoutPlaintext","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sts:AssumeRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"]},{"Action":["logs:CreateLogStream","logs:CreateLogGroup","logs:PutLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"]},{"Action":["ec2:CreateLaunchTemplateVersion","ec2:DescribeLaunchTemplates","ec2:ModifyLaunchTemplate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ec2","iam","license-manager","sns","ssm","kms","sts","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLookoutVisionConsoleFullAccess","PolicyName":"AmazonLookoutVisionConsoleFullAccess","PolicyId":"ANPAZKAPJZG4NJJ7RFZ5A","Path":"/","Description":"Provides full access to Amazon Lookout for Vision and scoped access to required service and console dependencies.","DefaultVersionId":"v1"},"document":[{"Action":["lookoutvision:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketVersioning","s3:PutLifecycleConfiguration","s3:PutEncryptionConfiguration","s3:PutBucketPublicAccessBlock"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::lookoutvision-*"]},{"Action":["s3:ListBucket","s3:GetBucketLocation","s3:GetBucketVersioning"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::lookoutvision-*"]},{"Action":["s3:GetObject","s3:GetObjectVersion","s3:PutObject","s3:AbortMultipartUpload","s3:ListMultipartUploadParts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::lookoutvision-*/*"]},{"Action":["groundtruthlabeling:RunGenerateManifestByCrawlingJob","groundtruthlabeling:AssociatePatchToManifestJob","groundtruthlabeling:DescribeConsoleJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["lookoutvision","s3","groundtruthlabeling","cloudwatch","tag","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackup","PolicyName":"AWSBackupServiceLinkedRolePolicyForBackup","PolicyId":"ANPAZKAPJZG4ONJBD4ZY2","Path":"/aws-service-role/","Description":"Provides AWS Backup permission to create backups on your behalf across AWS services","DefaultVersionId":"v3"},"document":[{"Action":["elasticfilesystem:Backup","elasticfilesystem:DescribeTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeImages","rds:DescribeDBSnapshots","rds:DescribeDBClusterSnapshots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CopySnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CopyImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeregisterImage","ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:AddTagsToResource","rds:CopyDBSnapshot","rds:DeleteDBSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:snapshot:awsbackup:*"]},{"Action":["rds:AddTagsToResource","rds:CopyDBClusterSnapshot","rds:DeleteDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:cluster-snapshot:awsbackup:*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListGrants","kms:ReEncryptFrom","kms:GenerateDataKeyWithoutPlaintext"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:CopyBackup","fsx:TagResource","fsx:DescribeBackups","fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]}],"services":["elasticfilesystem","tag","ec2","rds","kms","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonManagedBlockchainConsoleFullAccess","PolicyName":"AmazonManagedBlockchainConsoleFullAccess","PolicyId":"ANPAZKAPJZG4ONVQBFILL","Path":"/","Description":"Provides full access to Amazon Managed Blockchain via the AWS Management Console","DefaultVersionId":"v1"},"document":[{"Action":["managedblockchain:*","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:CreateVpcEndpoint","kms:ListAliases","kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["managedblockchain","ec2","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambda_FullAccess","PolicyName":"AWSLambda_FullAccess","PolicyId":"ANPAZKAPJZG4OXQPYWZ5D","Path":"/","Description":"Grants full access to AWS Lambda service, AWS Lambda console features, and other related AWS services.","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources","cloudwatch:ListMetrics","cloudwatch:GetMetricData","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:ListAliases","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","lambda:*","logs:DescribeLogGroups","states:DescribeStateMachine","states:ListStateMachines","tag:GetResources","xray:GetTraceSummaries","xray:BatchGetTraces"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/lambda/*"]}],"services":["cloudformation","cloudwatch","ec2","kms","iam","lambda","logs","states","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonAppFlowFullAccess","PolicyName":"AmazonAppFlowFullAccess","PolicyId":"ANPAZKAPJZG4PGBU2ALC4","Path":"/","Description":"Provides full access to Amazon AppFlow and access to AWS services supported as flow source or destination (S3 and Redshift). Also provides access to KMS for encryption","DefaultVersionId":"v2"},"document":[{"Action":["appflow:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListGrants"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation","s3:GetBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutBucketPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::appflow-*"]},{"Action":["secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:PutResourcePolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["appflow","iam","kms","s3","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWS_ConfigRole","PolicyName":"AWS_ConfigRole","PolicyId":"ANPAZKAPJZG4PP7QZ4FBG","Path":"/service-role/","Description":"Default policy for AWS Config service role. Provides permissions required for AWS Config to track changes to your AWS resources.","DefaultVersionId":"v6"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]}]}},"staticQueryHashes":["256249292"]}
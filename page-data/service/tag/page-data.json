{"componentChunkName":"component---src-templates-service-detail-page-tsx","path":"/service/tag/","result":{"pageContext":{"service":"tag","policyData":[{"policy":{"Arn":"arn:aws:iam::aws:policy/SecretsManagerReadWrite","PolicyName":"SecretsManagerReadWrite","PolicyId":"ANPAI3VG7CI5BIQZQ6G2E","Path":"/","Description":"Provides read/write access to AWS Secrets Manager via the AWS Management Console. Note: this exludes IAM actions, so combine with IAMFullAccess if rotation configuration is required.","DefaultVersionId":"v3"},"document":[{"Action":["secretsmanager:*","cloudformation:CreateChangeSet","cloudformation:DescribeChangeSet","cloudformation:DescribeStackResource","cloudformation:DescribeStacks","cloudformation:ExecuteChangeSet","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:DescribeKey","kms:ListAliases","kms:ListKeys","lambda:ListFunctions","rds:DescribeDBClusters","rds:DescribeDBInstances","redshift:DescribeClusters","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:AddPermission","lambda:CreateFunction","lambda:GetFunction","lambda:InvokeFunction","lambda:UpdateFunctionConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:SecretsManager*"]},{"Action":["serverlessrepo:CreateCloudFormationChangeSet","serverlessrepo:GetApplication"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:serverlessrepo:*:*:applications/SecretsManager*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::awsserverlessrepo-changesets*","arn:aws:s3:::secrets-manager-rotation-apps-*/*"]}],"services":["secretsmanager","cloudformation","ec2","kms","lambda","rds","redshift","tag","serverlessrepo","s3"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambdaFullAccess","PolicyName":"AWSLambdaFullAccess","PolicyId":"ANPAI6E2CYYMI4XI7AA5K","Path":"/","Description":"This policy is on a deprecation path. See documentation for guidance: https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html. Provides full access to Lambda, S3, DynamoDB, CloudWatch Metrics and Logs.","DefaultVersionId":"v8"},"document":[{"Action":["cloudformation:DescribeChangeSet","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:GetTemplate","cloudformation:ListStackResources","cloudwatch:*","cognito-identity:ListIdentityPools","cognito-sync:GetCognitoEvents","cognito-sync:SetCognitoEvents","dynamodb:*","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","events:*","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","iam:PassRole","iot:AttachPrincipalPolicy","iot:AttachThingPrincipal","iot:CreateKeysAndCertificate","iot:CreatePolicy","iot:CreateThing","iot:CreateTopicRule","iot:DescribeEndpoint","iot:GetTopicRule","iot:ListPolicies","iot:ListThings","iot:ListTopicRules","iot:ReplaceTopicRule","kinesis:DescribeStream","kinesis:ListStreams","kinesis:PutRecord","kms:ListAliases","lambda:*","logs:*","s3:*","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Publish","sns:Subscribe","sns:Unsubscribe","sqs:ListQueues","sqs:SendMessage","tag:GetResources","xray:PutTelemetryRecords","xray:PutTraceSegments"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudformation","cloudwatch","cognito-identity","cognito-sync","dynamodb","ec2","events","iam","iot","kinesis","kms","lambda","logs","s3","sns","sqs","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ReadOnlyAccess","PolicyName":"ReadOnlyAccess","PolicyId":"ANPAILL3HVNFSB6DCOWYQ","Path":"/","Description":"Provides read-only access to AWS services and resources.","DefaultVersionId":"v78"},"document":[{"Action":["a4b:Get*","a4b:List*","a4b:Search*","access-analyzer:GetAccessPreview","access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:GetGeneratedPolicy","access-analyzer:ListAccessPreviewFindings","access-analyzer:ListAccessPreviews","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListPolicyGenerations","access-analyzer:ListTagsForResource","access-analyzer:ValidatePolicy","acm-pca:Describe*","acm-pca:Get*","acm-pca:List*","acm:Describe*","acm:Get*","acm:List*","amplify:GetApp","amplify:GetBranch","amplify:GetDomainAssociation","amplify:GetJob","amplify:ListApps","amplify:ListBranches","amplify:ListDomainAssociations","amplify:ListJobs","apigateway:GET","application-autoscaling:Describe*","applicationinsights:Describe*","applicationinsights:List*","appmesh:Describe*","appmesh:List*","appstream:Describe*","appstream:List*","appsync:Get*","appsync:List*","athena:Batch*","athena:Get*","athena:List*","auditmanager:GetAccountStatus","auditmanager:GetAssessment","auditmanager:GetAssessmentFramework","auditmanager:GetAssessmentReportUrl","auditmanager:GetChangeLogs","auditmanager:GetControl","auditmanager:GetDelegations","auditmanager:GetEvidence","auditmanager:GetEvidenceByEvidenceFolder","auditmanager:GetEvidenceFolder","auditmanager:GetEvidenceFoldersByAssessment","auditmanager:GetEvidenceFoldersByAssessmentControl","auditmanager:GetOrganizationAdminAccount","auditmanager:GetServicesInScope","auditmanager:GetSettings","auditmanager:ListAssessmentFrameworks","auditmanager:ListAssessmentReports","auditmanager:ListAssessments","auditmanager:ListControls","auditmanager:ListKeywordsForDataSource","auditmanager:ListNotifications","auditmanager:ListTagsForResource","auditmanager:ValidateAssessmentReportIntegrity","autoscaling-plans:Describe*","autoscaling-plans:GetScalingPlanResourceForecastData","autoscaling:Describe*","aws-portal:View*","backup:Describe*","backup:Get*","backup:List*","batch:Describe*","batch:List*","braket:GetDevice","braket:GetQuantumTask","braket:SearchDevices","braket:SearchQuantumTasks","budgets:Describe*","budgets:View*","cassandra:Select","chatbot:Describe*","chatbot:Get*","chime:Get*","chime:List*","chime:Retrieve*","chime:Search*","chime:Validate*","cloud9:Describe*","cloud9:List*","clouddirectory:BatchRead","clouddirectory:Get*","clouddirectory:List*","clouddirectory:LookupPolicy","cloudformation:Describe*","cloudformation:Detect*","cloudformation:Estimate*","cloudformation:Get*","cloudformation:List*","cloudfront:Get*","cloudfront:List*","cloudhsm:Describe*","cloudhsm:Get*","cloudhsm:List*","cloudsearch:Describe*","cloudsearch:List*","cloudtrail:Describe*","cloudtrail:Get*","cloudtrail:List*","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","codeartifact:DescribeDomain","codeartifact:DescribePackageVersion","codeartifact:DescribeRepository","codeartifact:GetAuthorizationToken","codeartifact:GetDomainPermissionsPolicy","codeartifact:GetPackageVersionAsset","codeartifact:GetPackageVersionReadme","codeartifact:GetRepositoryEndpoint","codeartifact:GetRepositoryPermissionsPolicy","codeartifact:ListDomains","codeartifact:ListPackageVersionAssets","codeartifact:ListPackageVersionDependencies","codeartifact:ListPackageVersions","codeartifact:ListPackages","codeartifact:ListRepositories","codeartifact:ListRepositoriesInDomain","codeartifact:ListTagsForResource","codeartifact:ReadFromRepository","codebuild:BatchGet*","codebuild:DescribeCodeCoverages","codebuild:DescribeTestCases","codebuild:List*","codecommit:BatchGet*","codecommit:Describe*","codecommit:Get*","codecommit:GitPull","codecommit:List*","codedeploy:BatchGet*","codedeploy:Get*","codedeploy:List*","codeguru-profiler:Describe*","codeguru-profiler:Get*","codeguru-profiler:List*","codeguru-reviewer:Describe*","codeguru-reviewer:Get*","codeguru-reviewer:List*","codepipeline:Get*","codepipeline:List*","codestar-notifications:ListTargets","codestar-notifications:describeNotificationRule","codestar-notifications:listEventTypes","codestar-notifications:listNotificationRules","codestar-notifications:listTagsForResource","codestar:Describe*","codestar:Get*","codestar:List*","codestar:Verify*","cognito-identity:Describe*","cognito-identity:GetCredentialsForIdentity","cognito-identity:GetIdentityPoolRoles","cognito-identity:GetOpenIdToken","cognito-identity:GetOpenIdTokenForDeveloperIdentity","cognito-identity:List*","cognito-identity:Lookup*","cognito-idp:AdminGet*","cognito-idp:AdminList*","cognito-idp:Describe*","cognito-idp:Get*","cognito-idp:List*","cognito-sync:Describe*","cognito-sync:Get*","cognito-sync:List*","cognito-sync:QueryRecords","compute-optimizer:DescribeRecommendationExportJobs","compute-optimizer:GetAutoScalingGroupRecommendations","compute-optimizer:GetEBSVolumeRecommendations","compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEC2RecommendationProjectedMetrics","compute-optimizer:GetEnrollmentStatus","compute-optimizer:GetLambdaFunctionRecommendations","compute-optimizer:GetRecommendationSummaries","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","config:SelectAggregateResourceConfig","config:SelectResourceConfig","connect:Describe*","connect:GetFederationToken","connect:List*","dataexchange:Get*","dataexchange:List*","datapipeline:Describe*","datapipeline:EvaluateExpression","datapipeline:Get*","datapipeline:List*","datapipeline:QueryObjects","datapipeline:Validate*","datasync:Describe*","datasync:List*","dax:BatchGetItem","dax:Describe*","dax:GetItem","dax:ListTags","dax:Query","dax:Scan","deepcomposer:GetComposition","deepcomposer:GetModel","deepcomposer:GetSampleModel","deepcomposer:ListCompositions","deepcomposer:ListModels","deepcomposer:ListSampleModels","deepcomposer:ListTrainingTopics","detective:Get*","detective:List*","devicefarm:Get*","devicefarm:List*","devops-guru:DescribeAccountHealth","devops-guru:DescribeAccountOverview","devops-guru:DescribeAnomaly","devops-guru:DescribeInsight","devops-guru:DescribeResourceCollectionHealth","devops-guru:DescribeServiceIntegration","devops-guru:GetResourceCollection","devops-guru:ListAnomaliesForInsight","devops-guru:ListEvents","devops-guru:ListInsights","devops-guru:ListNotificationChannels","devops-guru:ListRecommendations","devops-guru:SearchInsights","directconnect:Describe*","discovery:Describe*","discovery:Get*","discovery:List*","dlm:Get*","dms:Describe*","dms:List*","dms:Test*","ds:Check*","ds:Describe*","ds:Get*","ds:List*","ds:Verify*","dynamodb:BatchGet*","dynamodb:Describe*","dynamodb:Get*","dynamodb:List*","dynamodb:Query","dynamodb:Scan","ec2:Describe*","ec2:Get*","ec2:SearchTransitGatewayRoutes","ec2messages:Get*","ecr-public:BatchCheckLayerAvailability","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetAuthorizationToken","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr-public:ListTagsForResource","ecr:BatchCheck*","ecr:BatchGet*","ecr:Describe*","ecr:Get*","ecr:List*","ecs:Describe*","ecs:List*","eks:Describe*","eks:List*","elasticache:Describe*","elasticache:List*","elasticbeanstalk:Check*","elasticbeanstalk:Describe*","elasticbeanstalk:List*","elasticbeanstalk:Request*","elasticbeanstalk:Retrieve*","elasticbeanstalk:Validate*","elasticfilesystem:Describe*","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:List*","elasticmapreduce:View*","elastictranscoder:List*","elastictranscoder:Read*","elemental-appliances-software:Get*","elemental-appliances-software:List*","es:Describe*","es:ESHttpGet","es:ESHttpHead","es:Get*","es:List*","events:Describe*","events:List*","events:Test*","firehose:Describe*","firehose:List*","fis:GetAction","fis:GetExperiment","fis:GetExperimentTemplate","fis:ListActions","fis:ListExperimentTemplates","fis:ListExperiments","fis:ListTagsForResource","fms:GetAdminAccount","fms:GetAppsList","fms:GetComplianceDetail","fms:GetNotificationChannel","fms:GetPolicy","fms:GetProtectionStatus","fms:GetProtocolsList","fms:GetViolationDetails","fms:ListAppsLists","fms:ListComplianceStatus","fms:ListMemberAccounts","fms:ListPolicies","fms:ListProtocolsLists","fms:ListTagsForResource","forecast:DescribeDataset","forecast:DescribeDatasetGroup","forecast:DescribeDatasetImportJob","forecast:DescribeForecast","forecast:DescribeForecastExportJob","forecast:DescribePredictor","forecast:DescribePredictorBacktestExportJob","forecast:GetAccuracyMetrics","forecast:ListDatasetGroups","forecast:ListDatasetImportJobs","forecast:ListDatasets","forecast:ListForecastExportJobs","forecast:ListForecasts","forecast:ListPredictorBacktestExportJobs","forecast:ListPredictors","forecast:QueryForecast","freertos:Describe*","freertos:List*","fsx:Describe*","fsx:List*","gamelift:Describe*","gamelift:Get*","gamelift:List*","gamelift:ResolveAlias","gamelift:Search*","glacier:Describe*","glacier:Get*","glacier:List*","globalaccelerator:Describe*","globalaccelerator:List*","glue:BatchGetDevEndpoints","glue:BatchGetJobs","glue:BatchGetPartition","glue:BatchGetTriggers","glue:BatchGetWorkflows","glue:CheckSchemaVersionValidity","glue:GetCatalogImportStatus","glue:GetClassifier","glue:GetClassifiers","glue:GetCrawler","glue:GetCrawlerMetrics","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabase","glue:GetDatabases","glue:GetDataflowGraph","glue:GetDevEndpoint","glue:GetDevEndpoints","glue:GetJob","glue:GetJobBookmark","glue:GetJobRun","glue:GetJobRuns","glue:GetJobs","glue:GetMLTaskRun","glue:GetMLTaskRuns","glue:GetMLTransform","glue:GetMLTransforms","glue:GetMapping","glue:GetPartition","glue:GetPartitions","glue:GetPlan","glue:GetRegistry","glue:GetResourcePolicy","glue:GetSchema","glue:GetSchemaByDefinition","glue:GetSchemaVersion","glue:GetSchemaVersionsDiff","glue:GetSecurityConfiguration","glue:GetSecurityConfigurations","glue:GetTable","glue:GetTableVersion","glue:GetTableVersions","glue:GetTables","glue:GetTags","glue:GetTrigger","glue:GetTriggers","glue:GetUserDefinedFunction","glue:GetUserDefinedFunctions","glue:GetWorkflow","glue:GetWorkflowRun","glue:GetWorkflowRunProperties","glue:GetWorkflowRuns","glue:ListCrawlers","glue:ListDevEndpoints","glue:ListJobs","glue:ListMLTransforms","glue:ListRegistries","glue:ListSchemaVersions","glue:ListSchemas","glue:ListTriggers","glue:ListWorkflows","glue:QuerySchemaVersionMetadata","greengrass:DescribeComponent","greengrass:Get*","greengrass:List*","groundstation:DescribeContact","groundstation:GetConfig","groundstation:GetDataflowEndpointGroup","groundstation:GetMinuteUsage","groundstation:GetMissionProfile","groundstation:GetSatellite","groundstation:ListConfigs","groundstation:ListContacts","groundstation:ListDataflowEndpointGroups","groundstation:ListGroundStations","groundstation:ListMissionProfiles","groundstation:ListSatellites","groundstation:ListTagsForResource","guardduty:DescribeOrganizationConfiguration","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","health:Describe*","iam:Generate*","iam:Get*","iam:List*","iam:Simulate*","imagebuilder:Get*","imagebuilder:List*","importexport:Get*","importexport:List*","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:Get*","iot:List*","iotanalytics:Describe*","iotanalytics:Get*","iotanalytics:List*","iotanalytics:SampleChannelData","iotevents:DescribeAlarm","iotevents:DescribeAlarmModel","iotevents:DescribeDetector","iotevents:DescribeDetectorModel","iotevents:DescribeInput","iotevents:DescribeLoggingOptions","iotevents:ListAlarmModelVersions","iotevents:ListAlarmModels","iotevents:ListAlarms","iotevents:ListDetectorModelVersions","iotevents:ListDetectorModels","iotevents:ListDetectors","iotevents:ListInputs","iotevents:ListTagsForResource","iotfleethub:DescribeApplication","iotfleethub:ListApplications","iotsitewise:Describe*","iotsitewise:Get*","iotsitewise:List*","iotwireless:GetDestination","iotwireless:GetDeviceProfile","iotwireless:GetPartnerAccount","iotwireless:GetServiceEndpoint","iotwireless:GetServiceProfile","iotwireless:GetWirelessDevice","iotwireless:GetWirelessDeviceStatistics","iotwireless:GetWirelessGateway","iotwireless:GetWirelessGatewayCertificate","iotwireless:GetWirelessGatewayFirmwareInformation","iotwireless:GetWirelessGatewayStatistics","iotwireless:GetWirelessGatewayTask","iotwireless:GetWirelessGatewayTaskDefinition","iotwireless:ListDestinations","iotwireless:ListDeviceProfiles","iotwireless:ListPartnerAccounts","iotwireless:ListServiceProfiles","iotwireless:ListTagsForResource","iotwireless:ListWirelessDevices","iotwireless:ListWirelessGatewayTaskDefinitions","iotwireless:ListWirelessGateways","ivs:BatchGetChannel","ivs:GetChannel","ivs:GetPlaybackKeyPair","ivs:GetRecordingConfiguration","ivs:ListChannels","ivs:ListPlaybackKeyPairs","ivs:ListRecordingConfigurations","ivs:ListStreams","ivs:ListTagsForResource","kafka:Describe*","kafka:Get*","kafka:List*","kendra:DescribeDataSource","kendra:DescribeFaq","kendra:DescribeIndex","kendra:DescribeThesaurus","kendra:ListDataSourceSyncJobs","kendra:ListDataSources","kendra:ListFaqs","kendra:ListIndices","kendra:ListTagsForResource","kendra:ListThesauri","kendra:Query","kinesis:Describe*","kinesis:Get*","kinesis:List*","kinesisanalytics:Describe*","kinesisanalytics:Discover*","kinesisanalytics:Get*","kinesisanalytics:List*","kinesisvideo:Describe*","kinesisvideo:Get*","kinesisvideo:List*","kms:Describe*","kms:Get*","kms:List*","lambda:Get*","lambda:List*","lex:Get*","license-manager:Get*","license-manager:List*","lightsail:GetActiveNames","lightsail:GetAlarms","lightsail:GetAutoSnapshots","lightsail:GetBlueprints","lightsail:GetBundles","lightsail:GetCertificates","lightsail:GetCloudFormationStackRecords","lightsail:GetContainerAPIMetadata","lightsail:GetContainerImages","lightsail:GetContainerServiceDeployments","lightsail:GetContainerServiceMetricData","lightsail:GetContainerServicePowers","lightsail:GetContainerServices","lightsail:GetDisk","lightsail:GetDiskSnapshot","lightsail:GetDiskSnapshots","lightsail:GetDisks","lightsail:GetDistributionBundles","lightsail:GetDistributionLatestCacheReset","lightsail:GetDistributionMetricData","lightsail:GetDistributions","lightsail:GetDomain","lightsail:GetDomains","lightsail:GetExportSnapshotRecords","lightsail:GetInstance","lightsail:GetInstanceMetricData","lightsail:GetInstancePortStates","lightsail:GetInstanceSnapshot","lightsail:GetInstanceSnapshots","lightsail:GetInstanceState","lightsail:GetInstances","lightsail:GetKeyPair","lightsail:GetKeyPairs","lightsail:GetLoadBalancer","lightsail:GetLoadBalancerMetricData","lightsail:GetLoadBalancerTlsCertificates","lightsail:GetLoadBalancers","lightsail:GetOperation","lightsail:GetOperations","lightsail:GetOperationsForResource","lightsail:GetRegions","lightsail:GetRelationalDatabase","lightsail:GetRelationalDatabaseBlueprints","lightsail:GetRelationalDatabaseBundles","lightsail:GetRelationalDatabaseEvents","lightsail:GetRelationalDatabaseLogEvents","lightsail:GetRelationalDatabaseLogStreams","lightsail:GetRelationalDatabaseMetricData","lightsail:GetRelationalDatabaseParameters","lightsail:GetRelationalDatabaseSnapshot","lightsail:GetRelationalDatabaseSnapshots","lightsail:GetRelationalDatabases","lightsail:GetStaticIp","lightsail:GetStaticIps","lightsail:Is*","logs:Describe*","logs:FilterLogEvents","logs:Get*","logs:ListTagsLogGroup","logs:StartQuery","logs:StopQuery","logs:TestMetricFilter","lookoutvision:DescribeDataset","lookoutvision:DescribeModel","lookoutvision:DescribeProject","lookoutvision:ListDatasetEntries","lookoutvision:ListModels","lookoutvision:ListProjects","lookoutvision:ListTagsForResource","machinelearning:Describe*","machinelearning:Get*","mediaconvert:DescribeEndpoints","mediaconvert:Get*","mediaconvert:List*","mediapackage:Describe*","mediapackage:List*","mediastore:DescribeContainer","mediastore:DescribeObject","mediastore:GetContainerPolicy","mediastore:GetCorsPolicy","mediastore:GetLifecyclePolicy","mediastore:GetMetricPolicy","mediastore:GetObject","mediastore:ListContainers","mediastore:ListItems","mediastore:ListTagsForResource","mgh:Describe*","mgh:GetHomeRegion","mgh:List*","mgn:DescribeJobLogItems","mgn:DescribeJobs","mgn:DescribeReplicationConfigurationTemplates","mgn:DescribeSourceServers","mgn:GetLaunchConfiguration","mgn:GetReplicationConfiguration","mobileanalytics:Get*","mobilehub:Describe*","mobilehub:Export*","mobilehub:Generate*","mobilehub:Get*","mobilehub:List*","mobilehub:Validate*","mobilehub:Verify*","mobiletargeting:Get*","mobiletargeting:List*","mq:Describe*","mq:List*","network-firewall:DescribeFirewall","network-firewall:DescribeFirewallPolicy","network-firewall:DescribeLoggingConfiguration","network-firewall:DescribeResourcePolicy","network-firewall:DescribeRuleGroup","network-firewall:ListFirewallPolicies","network-firewall:ListFirewalls","network-firewall:ListRuleGroups","network-firewall:ListTagsForResource","networkmanager:DescribeGlobalNetworks","networkmanager:GetConnections","networkmanager:GetCustomerGatewayAssociations","networkmanager:GetDevices","networkmanager:GetLinkAssociations","networkmanager:GetLinks","networkmanager:GetSites","networkmanager:GetTransitGatewayConnectPeerAssociations","networkmanager:GetTransitGatewayRegistrations","opsworks-cm:Describe*","opsworks-cm:List*","opsworks:Describe*","opsworks:Get*","organizations:Describe*","organizations:List*","outposts:Get*","outposts:List*","personalize:Describe*","personalize:Get*","personalize:List*","pi:DescribeDimensionKeys","pi:GetResourceMetrics","polly:Describe*","polly:Get*","polly:List*","polly:SynthesizeSpeech","qldb:DescribeJournalS3Export","qldb:DescribeLedger","qldb:GetBlock","qldb:GetDigest","qldb:GetRevision","qldb:ListJournalS3Exports","qldb:ListJournalS3ExportsForLedger","qldb:ListLedgers","qldb:ListTagsForResource","ram:Get*","ram:List*","rds:Describe*","rds:Download*","rds:List*","redshift:Describe*","redshift:GetReservedNodeExchangeOfferings","redshift:View*","rekognition:CompareFaces","rekognition:Detect*","rekognition:List*","rekognition:Search*","resource-groups:Get*","resource-groups:List*","resource-groups:Search*","robomaker:BatchDescribe*","robomaker:Describe*","robomaker:Get*","robomaker:List*","route53:Get*","route53:List*","route53:Test*","route53domains:Check*","route53domains:Get*","route53domains:List*","route53domains:View*","route53resolver:Get*","route53resolver:List*","s3:DescribeJob","s3:Get*","s3:List*","sagemaker:Describe*","sagemaker:GetSearchSuggestions","sagemaker:List*","sagemaker:Search","savingsplans:DescribeSavingsPlanRates","savingsplans:DescribeSavingsPlans","savingsplans:DescribeSavingsPlansOfferingRates","savingsplans:DescribeSavingsPlansOfferings","savingsplans:ListTagsForResource","schemas:Describe*","schemas:Get*","schemas:List*","schemas:Search*","sdb:Get*","sdb:List*","sdb:Select*","secretsmanager:Describe*","secretsmanager:GetResourcePolicy","secretsmanager:List*","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:Get*","serverlessrepo:List*","serverlessrepo:SearchApplications","servicecatalog:Describe*","servicecatalog:GetApplication","servicecatalog:GetAttributeGroup","servicecatalog:List*","servicecatalog:Scan*","servicecatalog:Search*","servicediscovery:Get*","servicediscovery:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","ses:Describe*","ses:Get*","ses:List*","shield:Describe*","shield:Get*","shield:List*","signer:DescribeSigningJob","signer:GetSigningPlatform","signer:GetSigningProfile","signer:ListProfilePermissions","signer:ListSigningJobs","signer:ListSigningPlatforms","signer:ListSigningProfiles","signer:ListTagsForResource","snowball:Describe*","snowball:Get*","snowball:List*","sns:Check*","sns:Get*","sns:List*","sqs:Get*","sqs:List*","sqs:Receive*","ssm-contacts:DescribeEngagement","ssm-contacts:DescribePage","ssm-contacts:GetContact","ssm-contacts:GetContactChannel","ssm-contacts:ListContactChannels","ssm-contacts:ListContacts","ssm-contacts:ListEngagements","ssm-contacts:ListPageReceipts","ssm-contacts:ListPagesByContact","ssm-contacts:ListPagesByEngagement","ssm-incidents:GetIncidentRecord","ssm-incidents:GetReplicationSet","ssm-incidents:GetResourcePolicies","ssm-incidents:GetResponsePlan","ssm-incidents:GetTimelineEvent","ssm-incidents:ListIncidentRecords","ssm-incidents:ListRelatedItems","ssm-incidents:ListReplicationSets","ssm-incidents:ListResponsePlans","ssm-incidents:ListTagsForResource","ssm-incidents:ListTimelineEvents","ssm:Describe*","ssm:Get*","ssm:List*","sso-directory:Describe*","sso-directory:List*","sso-directory:Search*","sso:Describe*","sso:Get*","sso:List*","sso:Search*","states:Describe*","states:GetExecutionHistory","states:List*","storagegateway:Describe*","storagegateway:List*","sts:GetAccessKeyInfo","sts:GetCallerIdentity","sts:GetSessionToken","swf:Count*","swf:Describe*","swf:Get*","swf:List*","synthetics:Describe*","synthetics:Get*","synthetics:List*","tag:Get*","transcribe:Get*","transcribe:List*","transfer:Describe*","transfer:List*","transfer:TestIdentityProvider","trustedadvisor:Describe*","waf-regional:Get*","waf-regional:List*","waf:Get*","waf:List*","wafv2:CheckCapacity","wafv2:Describe*","wafv2:Get*","wafv2:List*","workdocs:CheckAlias","workdocs:Describe*","workdocs:Get*","worklink:Describe*","worklink:List*","workmail:Describe*","workmail:Get*","workmail:List*","workmail:Search*","workspaces:Describe*","xray:BatchGet*","xray:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["a4b","access-analyzer","acm-pca","acm","amplify","apigateway","application-autoscaling","applicationinsights","appmesh","appstream","appsync","athena","auditmanager","autoscaling-plans","autoscaling","aws-portal","backup","batch","braket","budgets","cassandra","chatbot","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codeartifact","codebuild","codecommit","codedeploy","codeguru-profiler","codeguru-reviewer","codepipeline","codestar-notifications","codestar","cognito-identity","cognito-idp","cognito-sync","compute-optimizer","config","connect","dataexchange","datapipeline","datasync","dax","deepcomposer","detective","devicefarm","devops-guru","directconnect","discovery","dlm","dms","ds","dynamodb","ec2","ec2messages","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","elastictranscoder","elemental-appliances-software","es","events","firehose","fis","fms","forecast","freertos","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","groundstation","guardduty","health","iam","imagebuilder","importexport","inspector","iot","iotanalytics","iotevents","iotfleethub","iotsitewise","iotwireless","ivs","kafka","kendra","kinesis","kinesisanalytics","kinesisvideo","kms","lambda","lex","license-manager","lightsail","logs","lookoutvision","machinelearning","mediaconvert","mediapackage","mediastore","mgh","mgn","mobileanalytics","mobilehub","mobiletargeting","mq","network-firewall","networkmanager","opsworks-cm","opsworks","organizations","outposts","personalize","pi","polly","qldb","ram","rds","redshift","rekognition","resource-groups","robomaker","route53","route53domains","route53resolver","s3","sagemaker","savingsplans","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicecatalog","servicediscovery","servicequotas","ses","shield","signer","snowball","sns","sqs","ssm-contacts","ssm-incidents","ssm","sso-directory","sso","states","storagegateway","sts","swf","synthetics","tag","transcribe","transfer","trustedadvisor","waf-regional","waf","wafv2","workdocs","worklink","workmail","workspaces","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess","PolicyName":"AmazonDynamoDBFullAccess","PolicyId":"ANPAINUGF2JSOSUY76KYA","Path":"/","Description":"Provides full access to Amazon DynamoDB via the AWS Management Console.","DefaultVersionId":"v15"},"document":[{"Action":["dynamodb:*","dax:*","application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:PutScalingPolicy","application-autoscaling:RegisterScalableTarget","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:GetMetricData","datapipeline:ActivatePipeline","datapipeline:CreatePipeline","datapipeline:DeletePipeline","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:PutPipelineDefinition","datapipeline:QueryObjects","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:ListAliases","sns:CreateTopic","sns:DeleteTopic","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTopics","sns:Subscribe","sns:Unsubscribe","sns:SetTopicAttributes","lambda:CreateFunction","lambda:ListFunctions","lambda:ListEventSourceMappings","lambda:CreateEventSourceMapping","lambda:DeleteEventSourceMapping","lambda:GetFunctionConfiguration","lambda:DeleteFunction","resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroup","resource-groups:GetGroupQuery","resource-groups:DeleteGroup","resource-groups:CreateGroup","tag:GetResources","kinesis:ListStreams","kinesis:DescribeStream","kinesis:DescribeStreamSummary"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetInsightRuleReport"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dynamodb","dax","application-autoscaling","cloudwatch","datapipeline","ec2","iam","kms","sns","lambda","resource-groups","tag","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup","PolicyName":"AWSBackupServiceRolePolicyForBackup","PolicyId":"ANPAIOOYZSLZZXWFJJ5N2","Path":"/service-role/","Description":"Provides AWS Backup permission to create backups on your behalf across AWS services","DefaultVersionId":"v10"},"document":[{"Action":["dynamodb:DescribeTable","dynamodb:CreateBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/*"]},{"Action":["dynamodb:DescribeBackup","dynamodb:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/*/backup/*"]},{"Action":["rds:AddTagsToResource","rds:ListTagsForResource","rds:DescribeDBSnapshots","rds:CreateDBSnapshot","rds:CopyDBSnapshot","rds:DescribeDBInstances","rds:CreateDBClusterSnapshot","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshots","rds:CopyDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:ModifyDBInstance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:db:*"]},{"Action":["rds:DeleteDBSnapshot","rds:ModifyDBSnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:snapshot:awsbackup:*"]},{"Action":["rds:DeleteDBClusterSnapshot","rds:ModifyDBClusterSnapshotAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:cluster-snapshot:awsbackup:*"]},{"Action":["storagegateway:CreateSnapshot","storagegateway:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["ec2:CopySnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CopyImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags","ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateImage","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:image/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeTags","ec2:DescribeImages","ec2:DescribeInstances","ec2:DescribeInstanceAttribute","ec2:DescribeInstanceCreditSpecifications","ec2:DescribeNetworkInterfaces","ec2:DescribeElasticGpus","ec2:DescribeSpotInstanceRequests"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:ModifySnapshotAttribute","ec2:ModifyImageAttribute"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["backup:DescribeBackupVault","backup:CopyIntoBackupVault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-vault:*"]},{"Action":["backup:CopyFromBackupVault"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:Backup","elasticfilesystem:DescribeTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:CreateSnapshot","ec2:DeleteSnapshot","ec2:DescribeVolumes","ec2:DescribeSnapshots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["kms:Decrypt","kms:GenerateDataKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:GenerateDataKeyWithoutPlaintext"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kms:*:*:key/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:CreateBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*","arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["fsx:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:ListTagsForResource","fsx:ManageBackupPrincipalAssociations","fsx:CopyBackup","fsx:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]}],"services":["dynamodb","rds","storagegateway","ec2","backup","elasticfilesystem","kms","tag","ssm","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSConfigRole","PolicyName":"AWSConfigRole","PolicyId":"ANPAIQRXRDRGJUA33ELIO","Path":"/service-role/","Description":"Default policy for AWS Config service role.","DefaultVersionId":"v39"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetObject","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonRedshiftFullAccess","PolicyName":"AmazonRedshiftFullAccess","PolicyId":"ANPAISEKCHH4YDB46B5ZO","Path":"/","Description":"Provides full access to Amazon Redshift via the AWS Management Console.","DefaultVersionId":"v4"},"document":[{"Action":["redshift:*","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeAvailabilityZones","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeInternetGateways","sns:CreateTopic","sns:Get*","sns:List*","cloudwatch:Describe*","cloudwatch:Get*","cloudwatch:List*","cloudwatch:PutMetricAlarm","cloudwatch:EnableAlarmActions","cloudwatch:DisableAlarmActions","tag:GetResources","tag:UntagResources","tag:GetTagValues","tag:GetTagKeys","tag:TagResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift"]},{"Action":["redshift-data:ExecuteStatement","redshift-data:CancelStatement","redshift-data:ListStatements","redshift-data:GetStatementResult","redshift-data:DescribeStatement","redshift-data:ListDatabases","redshift-data:ListSchemas","redshift-data:ListTables","redshift-data:DescribeTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:GetSecretValue","secretsmanager:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["redshift","ec2","sns","cloudwatch","tag","iam","redshift-data","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSConfigUserAccess","PolicyName":"AWSConfigUserAccess","PolicyId":"ANPAIWTTSFJ7KKJE3MWGA","Path":"/","Description":"Provides access to use AWS Config, including searching by tags on resources, and reading all tags. This does not provide permission to configure AWS Config, which requires administrative privileges.","DefaultVersionId":"v4"},"document":[{"Action":["config:Get*","config:Describe*","config:Deliver*","config:List*","config:Select*","tag:GetResources","tag:GetTagKeys","cloudtrail:DescribeTrails","cloudtrail:GetTrailStatus","cloudtrail:LookupEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["config","tag","cloudtrail"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/SecurityAudit","PolicyName":"SecurityAudit","PolicyId":"ANPAIX2T3QCXHR2OGGCTO","Path":"/","Description":"The security audit template grants access to read security configuration metadata. It is useful for software that audits the configuration of an AWS account.","DefaultVersionId":"v35"},"document":[{"Action":["access-analyzer:GetAnalyzedResource","access-analyzer:GetAnalyzer","access-analyzer:GetArchiveRule","access-analyzer:GetFinding","access-analyzer:ListAnalyzedResources","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListFindings","access-analyzer:ListTagsForResource","acm-pca:ListPermissions","acm:Describe*","acm:List*","application-autoscaling:Describe*","appmesh:Describe*","appmesh:List*","appsync:List*","athena:GetWorkGroup","athena:List*","autoscaling-plans:DescribeScalingPlans","autoscaling:Describe*","batch:DescribeComputeEnvironments","batch:DescribeJobDefinitions","chime:List*","cloud9:Describe*","cloud9:ListEnvironments","clouddirectory:ListDirectories","cloudformation:DescribeStack*","cloudformation:GetStackPolicy","cloudformation:GetTemplate","cloudformation:ListStack*","cloudfront:Get*","cloudfront:List*","cloudhsm:ListHapgs","cloudhsm:ListHsms","cloudhsm:ListLunaClients","cloudsearch:DescribeDomainEndpointOptions","cloudsearch:DescribeDomains","cloudsearch:DescribeServiceAccessPolicies","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudtrail:LookupEvents","cloudwatch:Describe*","cloudwatch:ListTagsForResource","codebuild:ListProjects","codecommit:BatchGetRepositories","codecommit:GetBranch","codecommit:GetObjectIdentifier","codecommit:GetRepository","codecommit:GetRepositoryTriggers","codecommit:List*","codedeploy:Batch*","codedeploy:Get*","codedeploy:List*","codepipeline:GetJobDetails","codepipeline:GetPipeline","codepipeline:GetPipelineExecution","codepipeline:GetPipelineState","codepipeline:ListPipelines","codestar:Describe*","codestar:List*","cognito-identity:ListIdentityPools","cognito-idp:DescribeIdentityProvider","cognito-idp:DescribeResourceServer","cognito-idp:DescribeRiskConfiguration","cognito-idp:DescribeUserImportJob","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:DescribeUserPoolDomain","cognito-idp:ListDevices","cognito-idp:ListGroups","cognito-idp:ListIdentityProviders","cognito-idp:ListResourceServers","cognito-idp:ListTagsForResource","cognito-idp:ListUserImportJobs","cognito-idp:ListUserPoolClients","cognito-idp:ListUserPools","cognito-idp:ListUsers","cognito-idp:ListUsersInGroup","cognito-sync:Describe*","cognito-sync:List*","comprehend:Describe*","comprehend:List*","config:BatchGetAggregateResourceConfig","config:BatchGetResourceConfig","config:Deliver*","config:Describe*","config:Get*","config:List*","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:EvaluateExpression","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","datapipeline:ValidatePipelineDefinition","datasync:Describe*","datasync:List*","dax:Describe*","dax:ListTags","detective:GetGraphIngestState","detective:ListGraphs","detective:ListMembers","directconnect:Describe*","dms:Describe*","dms:ListTagsForResource","ds:DescribeDirectories","dynamodb:DescribeContinuousBackups","dynamodb:DescribeGlobalTable","dynamodb:DescribeTable","dynamodb:DescribeTimeToLive","dynamodb:ListBackups","dynamodb:ListGlobalTables","dynamodb:ListStreams","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:DescribeTransitGatewayAttachments","ec2:DescribeTransitGatewayMulticastDomains","ec2:DescribeTransitGatewayPeeringAttachments","ec2:DescribeTransitGatewayRouteTables","ec2:DescribeTransitGatewayVpcAttachments","ec2:DescribeTransitGateways","ec2:GetManagedPrefixListAssociations","ec2:GetManagedPrefixListEntries","ec2:GetTransitGatewayAttachmentPropagations","ec2:GetTransitGatewayMulticastDomainAssociations","ec2:GetTransitGatewayPrefixListReferences","ec2:GetTransitGatewayRouteTableAssociations","ec2:GetTransitGatewayRouteTablePropagations","ecr-public:DescribeImageTags","ecr-public:DescribeImages","ecr-public:DescribeRegistries","ecr-public:DescribeRepositories","ecr-public:GetRegistryCatalogData","ecr-public:GetRepositoryCatalogData","ecr-public:GetRepositoryPolicy","ecr:DescribeImageScanFindings","ecr:DescribeImages","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListImages","ecr:ListTagsForResource","ecs:Describe*","ecs:List*","eks:DescribeCluster","eks:DescribeNodeGroup","eks:ListClusters","eks:ListNodeGroups","elasticache:Describe*","elasticache:ListTagsForResource","elasticbeanstalk:Describe*","elasticbeanstalk:DescribeApplications","elasticbeanstalk:ListTagsForResource","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticfilesystem:DescribeMountTargets","elasticloadbalancing:Describe*","elasticmapreduce:Describe*","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:ListClusters","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","es:Describe*","es:ListDomainNames","es:ListElasticsearchInstanceTypeDetails","es:ListElasticsearchVersions","es:ListTags","events:Describe*","events:List*","events:TestEventPattern","firehose:Describe*","firehose:List*","fms:ListComplianceStatus","fms:ListPolicies","fsx:Describe*","fsx:List*","gamelift:ListBuilds","gamelift:ListFleets","glacier:DescribeVault","glacier:GetVaultAccessPolicy","glacier:ListVaults","globalaccelerator:Describe*","globalaccelerator:List*","glue:GetCrawlers","glue:GetDataCatalogEncryptionSettings","glue:GetDatabases","glue:GetDevEndpoints","glue:GetJobs","greengrass:List*","guardduty:DescribePublishingDestination","guardduty:Get*","guardduty:List*","iam:GenerateCredentialReport","iam:GenerateServiceLastAccessedDetails","iam:Get*","iam:List*","iam:SimulateCustomPolicy","iam:SimulatePrincipalPolicy","inspector:Describe*","inspector:Get*","inspector:List*","inspector:Preview*","iot:Describe*","iot:GetPolicy","iot:GetPolicyVersion","iot:List*","kinesis:DescribeLimits","kinesis:DescribeStream","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kinesisanalytics:ListApplications","kms:Describe*","kms:Get*","kms:List*","lambda:GetAccountSettings","lambda:GetFunctionConfiguration","lambda:GetFunctionEventInvokeConfig","lambda:GetLayerVersionPolicy","lambda:GetPolicy","lambda:List*","license-manager:List*","lightsail:GetInstances","lightsail:GetLoadBalancers","logs:Describe*","logs:ListTagsLogGroup","machinelearning:DescribeMLModels","mediaconnect:Describe*","mediaconnect:List*","mediastore:GetContainerPolicy","mediastore:ListContainers","mq:DescribeBroker","mq:DescribeBrokerEngineTypes","mq:DescribeBrokerInstanceOptions","mq:DescribeConfiguration","mq:DescribeConfigurationRevision","mq:DescribeUser","mq:ListBrokers","mq:ListConfigurationRevisions","mq:ListConfigurations","mq:ListTags","mq:ListUsers","network-firewall:ListFirewalls","opsworks-cm:DescribeServers","opsworks:DescribeStacks","organizations:Describe*","organizations:List*","quicksight:Describe*","quicksight:List*","ram:List*","rds:Describe*","rds:DownloadDBLogFilePortion","rds:ListTagsForResource","redshift:Describe*","rekognition:Describe*","rekognition:List*","robomaker:Describe*","robomaker:List*","route53:Get*","route53:List*","route53domains:GetDomainDetail","route53domains:GetOperationDetail","route53domains:ListDomains","route53domains:ListOperations","route53domains:ListTagsForDomain","route53resolver:Get*","route53resolver:List*","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetAnalyticsConfiguration","s3:GetBucket*","s3:GetEncryptionConfiguration","s3:GetInventoryConfiguration","s3:GetLifecycleConfiguration","s3:GetMetricsConfiguration","s3:GetObjectAcl","s3:GetObjectVersionAcl","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","sagemaker:Describe*","sagemaker:List*","schemas:DescribeCodeBinding","schemas:DescribeDiscoverer","schemas:DescribeRegistry","schemas:DescribeSchema","schemas:ListDiscoverers","schemas:ListRegistries","schemas:ListSchemaVersions","schemas:ListSchemas","schemas:ListTagsForResource","sdb:DomainMetadata","sdb:ListDomains","secretsmanager:DescribeSecret","secretsmanager:GetResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:ListSecrets","securityhub:Describe*","securityhub:Get*","securityhub:List*","serverlessrepo:GetApplicationPolicy","serverlessrepo:List*","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListServiceQuotas","servicequotas:ListServices","servicequotas:ListTagsForResource","ses:GetIdentityDkimAttributes","ses:GetIdentityPolicies","ses:GetIdentityVerificationAttributes","ses:ListIdentities","ses:ListIdentityPolicies","ses:ListVerifiedEmailAddresses","shield:Describe*","shield:List*","snowball:ListClusters","snowball:ListJobs","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListSubscriptionsByTopic","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListDeadLetterSourceQueues","sqs:ListQueueTags","sqs:ListQueues","ssm:Describe*","ssm:GetAutomationExecution","ssm:ListAssociationVersions","ssm:ListAssociations","ssm:ListCommands","ssm:ListComplianceItems","ssm:ListComplianceSummaries","ssm:ListDocumentMetadataHistory","ssm:ListDocumentVersions","ssm:ListDocuments","ssm:ListInventoryEntries","ssm:ListOpsMetadata","ssm:ListResourceComplianceSummaries","ssm:ListResourceDataSync","ssm:ListTagsForResource","sso:DescribePermissionsPolicies","sso:List*","states:ListStateMachines","storagegateway:DescribeBandwidthRateLimit","storagegateway:DescribeCache","storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeGatewayInformation","storagegateway:DescribeMaintenanceStartTime","storagegateway:DescribeNFSFileShares","storagegateway:DescribeSnapshotSchedule","storagegateway:DescribeStorediSCSIVolumes","storagegateway:DescribeTapeArchives","storagegateway:DescribeTapeRecoveryPoints","storagegateway:DescribeTapes","storagegateway:DescribeUploadBuffer","storagegateway:DescribeVTLDevices","storagegateway:DescribeWorkingStorage","storagegateway:List*","support:DescribeTrustedAdvisorCheckRefreshStatuses","support:DescribeTrustedAdvisorCheckResult","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorChecks","tag:GetResources","tag:GetTagKeys","transfer:Describe*","transfer:List*","translate:List*","trustedadvisor:Describe*","waf-regional:GetWebACL","waf-regional:ListResourcesForWebACL","waf-regional:ListTagsForResource","waf-regional:ListWebACLs","waf:GetWebACL","waf:ListTagsForResource","waf:ListWebACLs","wafv2:GetWebACL","wafv2:ListAvailableManagedRuleGroups","wafv2:ListIPSets","wafv2:ListLoggingConfigurations","wafv2:ListRegexPatternSets","wafv2:ListResourcesForWebACL","wafv2:ListRuleGroups","wafv2:ListTagsForResource","wafv2:ListWebACLs","workdocs:DescribeResourcePermissions","workspaces:Describe*","xray:GetEncryptionConfig","xray:GetGroup","xray:GetGroups","xray:GetSamplingRules","xray:GetSamplingTargets","xray:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/apis","arn:aws:apigateway:*::/apis/*/routes","arn:aws:apigateway:*::/apis/*/stages","arn:aws:apigateway:*::/apis/*/stages/*","arn:aws:apigateway:*::/clientcertificates/*","arn:aws:apigateway:*::/restapis","arn:aws:apigateway:*::/restapis/*/authorizers","arn:aws:apigateway:*::/restapis/*/authorizers/*","arn:aws:apigateway:*::/restapis/*/documentation/versions","arn:aws:apigateway:*::/restapis/*/resources","arn:aws:apigateway:*::/restapis/*/resources/*","arn:aws:apigateway:*::/restapis/*/resources/*/methods/*","arn:aws:apigateway:*::/restapis/*/stages","arn:aws:apigateway:*::/restapis/*/stages/*","arn:aws:apigateway:*::/tags/*","arn:aws:apigateway:*::/vpclinks"]}],"services":["access-analyzer","acm-pca","acm","application-autoscaling","appmesh","appsync","athena","autoscaling-plans","autoscaling","batch","chime","cloud9","clouddirectory","cloudformation","cloudfront","cloudhsm","cloudsearch","cloudtrail","cloudwatch","codebuild","codecommit","codedeploy","codepipeline","codestar","cognito-identity","cognito-idp","cognito-sync","comprehend","config","datapipeline","datasync","dax","detective","directconnect","dms","ds","dynamodb","ec2","ecr-public","ecr","ecs","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","events","firehose","fms","fsx","gamelift","glacier","globalaccelerator","glue","greengrass","guardduty","iam","inspector","iot","kinesis","kinesisanalytics","kms","lambda","license-manager","lightsail","logs","machinelearning","mediaconnect","mediastore","mq","network-firewall","opsworks-cm","opsworks","organizations","quicksight","ram","rds","redshift","rekognition","robomaker","route53","route53domains","route53resolver","s3","sagemaker","schemas","sdb","secretsmanager","securityhub","serverlessrepo","servicequotas","ses","shield","snowball","sns","sqs","ssm","sso","states","storagegateway","support","tag","transfer","translate","trustedadvisor","waf-regional","waf","wafv2","workdocs","workspaces","xray","apigateway"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSResourceGroupsReadOnlyAccess","PolicyName":"AWSResourceGroupsReadOnlyAccess","PolicyId":"ANPAIXFKM2WGBJAEWMFEG","Path":"/","Description":"This is the read only policy for AWS Resource Groups","DefaultVersionId":"v2"},"document":[{"Action":["resource-groups:Get*","resource-groups:List*","resource-groups:Search*","tag:Get*","cloudformation:DescribeStacks","cloudformation:ListStackResources","ec2:DescribeInstances","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:DescribeVpcs","elasticache:DescribeCacheClusters","elasticache:DescribeSnapshots","elasticache:ListTagsForResource","elasticbeanstalk:DescribeEnvironments","elasticmapreduce:DescribeCluster","elasticmapreduce:ListClusters","glacier:ListVaults","glacier:DescribeVault","glacier:ListTagsForVault","kinesis:ListStreams","kinesis:DescribeStream","kinesis:ListTagsForStream","opsworks:DescribeStacks","opsworks:ListTags","rds:DescribeDBInstances","rds:DescribeDBSnapshots","rds:ListTagsForResource","redshift:DescribeClusters","redshift:DescribeTags","route53domains:ListDomains","route53:ListHealthChecks","route53:GetHealthCheck","route53:ListHostedZones","route53:GetHostedZone","route53:ListTagsForResource","storagegateway:ListGateways","storagegateway:DescribeGatewayInformation","storagegateway:ListTagsForResource","s3:ListAllMyBuckets","s3:GetBucketTagging","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTags","ssm:ListDocuments"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["resource-groups","tag","cloudformation","ec2","elasticache","elasticbeanstalk","elasticmapreduce","glacier","kinesis","opsworks","rds","redshift","route53domains","route53","storagegateway","s3","elasticloadbalancing","ssm"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy","PolicyName":"AmazonSSMServiceRolePolicy","PolicyId":"ANPAIXJ26NUGBA3TCV7EC","Path":"/aws-service-role/","Description":"Provides access to AWS Resources managed or used by Amazon SSM","DefaultVersionId":"v13"},"document":[{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation","ssm:ListCommandInvocations","ssm:ListCommands","ssm:SendCommand","ssm:GetAutomationExecution","ssm:GetParameters","ssm:StartAutomationExecution","ssm:ListTagsForResource","ssm:GetCalendarState"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:UpdateServiceSetting","ssm:GetServiceSetting"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:servicesetting/ssm/opsitem/*","arn:aws:ssm:*:*:servicesetting/ssm/opsdata/*"]},{"Action":["ec2:DescribeInstanceAttribute","ec2:DescribeInstanceStatus","ec2:DescribeInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:SSM*","arn:aws:lambda:*:*:function:*:SSM*"]},{"Action":["states:DescribeExecution","states:StartExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:stateMachine:SSM*","arn:aws:states:*:*:execution:SSM*"]},{"Action":["resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroupQuery"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:SelectResourceConfig"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["compute-optimizer:GetEC2InstanceRecommendations","compute-optimizer:GetEnrollmentStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["support:DescribeTrustedAdvisorChecks","support:DescribeTrustedAdvisorCheckSummaries","support:DescribeTrustedAdvisorCheckResult","support:DescribeCases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["config:DescribeComplianceByConfigRule","config:DescribeComplianceByResource","config:DescribeRemediationConfigurations","config:DescribeConfigurationRecorders"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackSets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:ListStackInstances","cloudformation:DescribeStackSetOperation","cloudformation:DeleteStackSet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*"]},{"Action":["cloudformation:DeleteStackInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stackset/AWS-QuickSetup-SSM*:*","arn:aws:cloudformation:*:*:stackset-target/AWS-QuickSetup-SSM*:*","arn:aws:cloudformation:*:*:type/resource/*"]},{"Action":["events:PutRule","events:PutTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:RemoveTargets","events:DeleteRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/SSMExplorerManagedRule"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["securityhub:DescribeHub"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","ec2","lambda","states","resource-groups","cloudformation","tag","config","compute-optimizer","support","iam","organizations","events","securityhub"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess","PolicyName":"AmazonDynamoDBReadOnlyAccess","PolicyId":"ANPAIY2XFNA232XJ6J7X2","Path":"/","Description":"Provides read only access to Amazon DynamoDB via the AWS Management Console.","DefaultVersionId":"v13"},"document":[{"Action":["application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:DescribeAlarmsForMetric","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:GetMetricData","datapipeline:DescribeObjects","datapipeline:DescribePipelines","datapipeline:GetPipelineDefinition","datapipeline:ListPipelines","datapipeline:QueryObjects","dynamodb:BatchGetItem","dynamodb:Describe*","dynamodb:List*","dynamodb:GetItem","dynamodb:Query","dynamodb:Scan","dynamodb:PartiQLSelect","dax:Describe*","dax:List*","dax:GetItem","dax:BatchGetItem","dax:Query","dax:Scan","ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeSecurityGroups","iam:GetRole","iam:ListRoles","kms:DescribeKey","kms:ListAliases","sns:ListSubscriptionsByTopic","sns:ListTopics","lambda:ListFunctions","lambda:ListEventSourceMappings","lambda:GetFunctionConfiguration","resource-groups:ListGroups","resource-groups:ListGroupResources","resource-groups:GetGroup","resource-groups:GetGroupQuery","tag:GetResources","kinesis:ListStreams","kinesis:DescribeStream","kinesis:DescribeStreamSummary"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetInsightRuleReport"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"]}],"services":["application-autoscaling","cloudwatch","datapipeline","dynamodb","dax","ec2","iam","kms","sns","lambda","resource-groups","tag","kinesis"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole","PolicyName":"AWSCodeDeployRole","PolicyId":"ANPAJ2NKMKD73QS5NBFLA","Path":"/service-role/","Description":"Provides CodeDeploy service access to expand tags and interact with Auto Scaling on your behalf.","DefaultVersionId":"v9"},"document":[{"Action":["autoscaling:CompleteLifecycleAction","autoscaling:DeleteLifecycleHook","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLifecycleHooks","autoscaling:PutLifecycleHook","autoscaling:RecordLifecycleActionHeartbeat","autoscaling:CreateAutoScalingGroup","autoscaling:UpdateAutoScalingGroup","autoscaling:EnableMetricsCollection","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeNotificationConfigurations","autoscaling:SuspendProcesses","autoscaling:ResumeProcesses","autoscaling:AttachLoadBalancers","autoscaling:AttachLoadBalancerTargetGroups","autoscaling:PutScalingPolicy","autoscaling:PutScheduledUpdateGroupAction","autoscaling:PutNotificationConfiguration","autoscaling:PutWarmPool","autoscaling:DescribeScalingActivities","autoscaling:DeleteAutoScalingGroup","ec2:DescribeInstances","ec2:DescribeInstanceStatus","ec2:TerminateInstances","tag:GetResources","sns:Publish","cloudwatch:DescribeAlarms","cloudwatch:PutMetricAlarm","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeInstanceHealth","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeTargetHealth","elasticloadbalancing:RegisterTargets","elasticloadbalancing:DeregisterTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","ec2","tag","sns","cloudwatch","elasticloadbalancing"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonRDSDataFullAccess","PolicyName":"AmazonRDSDataFullAccess","PolicyId":"ANPAJ5HUMNZCSW4IC74T6","Path":"/","Description":"Allows full access to use the RDS data APIs, secret store APIs for RDS database credentials, and DB console query management APIs to execute SQL statements on Aurora Serverless clusters in the AWS account.","DefaultVersionId":"v3"},"document":[{"Action":["secretsmanager:GetSecretValue","secretsmanager:PutResourcePolicy","secretsmanager:PutSecretValue","secretsmanager:DeleteSecret","secretsmanager:DescribeSecret","secretsmanager:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:rds-db-credentials/*"]},{"Action":["dbqms:CreateFavoriteQuery","dbqms:DescribeFavoriteQueries","dbqms:UpdateFavoriteQuery","dbqms:DeleteFavoriteQueries","dbqms:GetQueryString","dbqms:CreateQueryHistory","dbqms:DescribeQueryHistory","dbqms:UpdateQueryHistory","dbqms:DeleteQueryHistory","rds-data:ExecuteSql","rds-data:ExecuteStatement","rds-data:BatchExecuteStatement","rds-data:BeginTransaction","rds-data:CommitTransaction","rds-data:RollbackTransaction","secretsmanager:CreateSecret","secretsmanager:ListSecrets","secretsmanager:GetRandomPassword","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["secretsmanager","dbqms","rds-data","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole","PolicyName":"AWSOpsWorksCMServiceRole","PolicyId":"ANPAJ6I6MPGJE62URSHCO","Path":"/service-role/","Description":"Service Role Policy to be used for Creating OpsWorks CM servers.","DefaultVersionId":"v14"},"document":[{"Action":["s3:CreateBucket","s3:DeleteObject","s3:DeleteBucket","s3:GetObject","s3:ListBucket","s3:PutBucketPolicy","s3:PutObject","s3:GetBucketTagging","s3:PutBucketTagging"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-opsworks-cm-*"]},{"Action":["tag:UntagResources","tag:TagResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DescribeInstanceInformation","ssm:GetCommandInvocation","ssm:ListCommandInvocations","ssm:ListCommands"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*::document/*","arn:aws:s3:::aws-opsworks-cm-*"]},{"Action":["ec2:AllocateAddress","ec2:AssociateAddress","ec2:AuthorizeSecurityGroupIngress","ec2:CreateImage","ec2:CreateSecurityGroup","ec2:CreateSnapshot","ec2:CreateTags","ec2:DeleteSecurityGroup","ec2:DeleteSnapshot","ec2:DeregisterImage","ec2:DescribeAccountAttributes","ec2:DescribeAddresses","ec2:DescribeImages","ec2:DescribeInstanceStatus","ec2:DescribeInstances","ec2:DescribeSecurityGroups","ec2:DescribeSnapshots","ec2:DescribeSubnets","ec2:DisassociateAddress","ec2:ReleaseAddress","ec2:RunInstances","ec2:StopInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:TerminateInstances","ec2:RebootInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["opsworks-cm:DeleteServer","opsworks-cm:StartMaintenance"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:opsworks-cm:*:*:server/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack","cloudformation:DescribeStackEvents","cloudformation:DescribeStackResources","cloudformation:DescribeStacks","cloudformation:UpdateStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-opsworks-cm-*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-opsworks-cm-*","arn:aws:iam::*:role/service-role/aws-opsworks-cm-*"]},{"Action":["acm:DeleteCertificate","acm:ImportCertificate"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:GetSecretValue","secretsmanager:UpdateSecret","secretsmanager:DeleteSecret","secretsmanager:TagResource","secretsmanager:UntagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:opsworks-cm!aws-opsworks-cm-secrets-*"]},{"Action":["ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:elastic-ip/*","arn:aws:ec2:*:*:security-group/*"]}],"services":["s3","tag","ssm","ec2","opsworks-cm","cloudformation","iam","acm","secretsmanager"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess","PolicyName":"AWSGlueConsoleSageMakerNotebookFullAccess","PolicyId":"ANPAJELFOHJC42QS3ZSYY","Path":"/","Description":"Provides full access to AWS Glue via the AWS Management Console and access to sagemaker notebook instances.","DefaultVersionId":"v2"},"document":[{"Action":["glue:*","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","iam:ListRoles","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:DescribeVpcAttribute","ec2:DescribeKeyPairs","ec2:DescribeInstances","ec2:DescribeImages","ec2:CreateNetworkInterface","ec2:AttachNetworkInterface","ec2:ModifyNetworkInterfaceAttribute","ec2:DeleteNetworkInterface","ec2:DescribeAvailabilityZones","ec2:DescribeInternetGateways","ec2:DescribeNetworkInterfaces","rds:DescribeDBInstances","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketAcl","s3:GetBucketLocation","cloudformation:DescribeStacks","cloudformation:GetTemplateSummary","dynamodb:ListTables","kms:ListAliases","kms:DescribeKey","sagemaker:ListNotebookInstances","cloudformation:ListStacks","cloudwatch:GetMetricData","cloudwatch:ListDashboards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*","arn:aws:s3:::aws-glue-*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-glue*/*"]},{"Action":["sagemaker:CreatePresignedNotebookInstanceUrl","sagemaker:CreateNotebookInstance","sagemaker:DeleteNotebookInstance","sagemaker:DescribeNotebookInstance","sagemaker:StartNotebookInstance","sagemaker:StopNotebookInstance","sagemaker:UpdateNotebookInstance","sagemaker:ListTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance/aws-glue-*"]},{"Action":["sagemaker:DescribeNotebookInstanceLifecycleConfig","sagemaker:CreateNotebookInstanceLifecycleConfig","sagemaker:DeleteNotebookInstanceLifecycleConfig","sagemaker:ListNotebookInstanceLifecycleConfigs"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/aws-glue-*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances","ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceSageMakerNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"]}],"services":["glue","redshift","iam","ec2","rds","s3","cloudformation","dynamodb","kms","sagemaker","cloudwatch","logs","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/CloudwatchApplicationInsightsServiceLinkedRolePolicy","PolicyName":"CloudwatchApplicationInsightsServiceLinkedRolePolicy","PolicyId":"ANPAJH3SHQERZRQMQOQ44","Path":"/aws-service-role/","Description":"Cloudwatch Application Insights Service Linked Role Policy","DefaultVersionId":"v14"},"document":[{"Action":["cloudwatch:DescribeAlarmHistory","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:DeleteAlarms","cloudwatch:PutAnomalyDetector","cloudwatch:DeleteAnomalyDetector","cloudwatch:DescribeAnomalyDetectors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:FilterLogEvents","logs:GetLogEvents","logs:DescribeLogStreams","logs:DescribeLogGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DescribeRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudFormation:CreateStack","cloudFormation:UpdateStack","cloudFormation:DeleteStack","cloudFormation:DescribeStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/ApplicationInsights-*"]},{"Action":["cloudFormation:DescribeStacks","cloudFormation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["resource-groups:ListGroupResources","resource-groups:GetGroupQuery","resource-groups:GetGroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeTargetGroups","elasticloadbalancing:DescribeTargetHealth"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["autoscaling:DescribeAutoScalingGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:PutParameter","ssm:DeleteParameter","ssm:AddTagsToResource","ssm:RemoveTagsFromResource","ssm:GetParameters"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:parameter/AmazonCloudWatch-ApplicationInsights-*"]},{"Action":["ssm:CreateAssociation","ssm:UpdateAssociation","ssm:DeleteAssociation","ssm:DescribeAssociation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ssm:*:*:association/*","arn:aws:ssm:*:*:managed-instance/*","arn:aws:ssm:*:*:document/AWSEC2-ApplicationInsightsCloudwatchAgentInstallAndConfigure","arn:aws:ssm:*:*:document/AWS-ConfigureAWSPackage","arn:aws:ssm:*:*:document/AmazonCloudWatch-ManageAgent"]},{"Action":["ssm:GetOpsItem","ssm:CreateOpsItem","ssm:DescribeOpsItems","ssm:UpdateOpsItem","ssm:DescribeInstanceInformation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:AddTagsToResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:opsitem/*"]},{"Action":["ssm:ListCommandInvocations"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ssm:*:*:document/AWSEC2-CheckPerformanceCounterSets","arn:aws:ssm:*:*:document/AWS-ConfigureAWSPackage","arn:aws:ssm:*:*:document/AWSEC2-DetectWorkload"]},{"Action":["ec2:DescribeInstances","ec2:DescribeVolumes","ec2:DescribeVolumeStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBInstances","rds:DescribeDBClusters"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:GetFunctionConfiguration","lambda:ListEventSourceMappings"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule","events:PutTargets","events:RemoveTargets","events:DeleteRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AmazonCloudWatch-ApplicationInsights-*"]},{"Action":["xray:GetServiceGraph","xray:GetTraceSummaries","xray:GetTimeSeriesServiceStatistics","xray:GetTraceGraph"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:DescribeTable","dynamodb:DescribeContributorInsights","dynamodb:DescribeTimeToLive"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["application-autoscaling:DescribeScalableTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetMetricsConfiguration","s3:GetReplicationConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["states:DescribeExecution","states:DescribeStateMachine","states:GetExecutionHistory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecs:DescribeClusters","ecs:DescribeContainerInstances","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTasks","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListContainerInstances","ecs:ListServices","ecs:ListTasks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["eks:DescribeCluster","eks:DescribeFargateProfile","eks:DescribeNodegroup","eks:ListClusters","eks:ListFargateProfiles","eks:ListNodegroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["cloudwatch","logs","events","cloudFormation","tag","resource-groups","elasticloadbalancing","autoscaling","ssm","ec2","rds","lambda","xray","dynamodb","application-autoscaling","s3","states","apigateway","ecs","eks"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ResourceGroupsandTagEditorReadOnlyAccess","PolicyName":"ResourceGroupsandTagEditorReadOnlyAccess","PolicyId":"ANPAJHXQTPI5I5JKAIU74","Path":"/","Description":"Provides access to use Resource Groups and Tag Editor, but does not allow editing of tags via the Tag Editor.","DefaultVersionId":"v2"},"document":[{"Action":["tag:getResources","tag:getTagKeys","tag:getTagValues","resource-groups:Get*","resource-groups:List*","resource-groups:Search*","cloudformation:DescribeStacks","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["tag","resource-groups","cloudformation"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ResourceGroupsandTagEditorFullAccess","PolicyName":"ResourceGroupsandTagEditorFullAccess","PolicyId":"ANPAJNOS54ZFXN4T2Y34A","Path":"/","Description":"Provides full access to Resource Groups and Tag Editor.","DefaultVersionId":"v5"},"document":[{"Action":["tag:getResources","tag:getTagKeys","tag:getTagValues","tag:TagResources","tag:UntagResources","resource-groups:*","cloudformation:DescribeStacks","cloudformation:ListStackResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["tag","resource-groups","cloudformation"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess","PolicyName":"AWSGlueConsoleFullAccess","PolicyId":"ANPAJNZGDEOD7MISOVSVI","Path":"/","Description":"Provides full access to AWS Glue via the AWS Management Console","DefaultVersionId":"v12"},"document":[{"Action":["glue:*","redshift:DescribeClusters","redshift:DescribeClusterSubnetGroups","iam:ListRoles","iam:ListUsers","iam:ListGroups","iam:ListRolePolicies","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","ec2:DescribeVpcEndpoints","ec2:DescribeRouteTables","ec2:DescribeVpcAttribute","ec2:DescribeKeyPairs","ec2:DescribeInstances","ec2:DescribeImages","rds:DescribeDBInstances","rds:DescribeDBClusters","rds:DescribeDBSubnetGroups","s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketAcl","s3:GetBucketLocation","cloudformation:DescribeStacks","cloudformation:GetTemplateSummary","dynamodb:ListTables","kms:ListAliases","kms:DescribeKey","cloudwatch:GetMetricData","cloudwatch:ListDashboards"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*/*","arn:aws:s3:::*/*aws-glue-*/*","arn:aws:s3:::aws-glue-*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::aws-glue-*"]},{"Action":["logs:GetLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:/aws-glue/*"]},{"Action":["cloudformation:CreateStack","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/aws-glue*/*"]},{"Action":["ec2:RunInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*","arn:aws:ec2:*:*:key-pair/*","arn:aws:ec2:*:*:image/*","arn:aws:ec2:*:*:security-group/*","arn:aws:ec2:*:*:network-interface/*","arn:aws:ec2:*:*:subnet/*","arn:aws:ec2:*:*:volume/*"]},{"Action":["ec2:TerminateInstances","ec2:CreateTags","ec2:DeleteTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*:*:instance/*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"]}],"services":["glue","redshift","iam","ec2","rds","s3","cloudformation","dynamodb","kms","cloudwatch","tag","logs"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy","PolicyName":"AWSConfigServiceRolePolicy","PolicyId":"ANPAJUCWFHNZER665LLQQ","Path":"/aws-service-role/","Description":"Allows Config to call AWS services and collect resource configurations on your behalf.","DefaultVersionId":"v25"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole","PolicyName":"AmazonSSMMaintenanceWindowRole","PolicyId":"ANPAJV3JNYSTZ47VOXYME","Path":"/service-role/","Description":" Service Role to be used for EC2 Maintenance Window","DefaultVersionId":"v3"},"document":[{"Action":["ssm:GetAutomationExecution","ssm:GetParameters","ssm:ListCommands","ssm:SendCommand","ssm:StartAutomationExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:SSM*","arn:aws:lambda:*:*:function:*:SSM*"]},{"Action":["states:DescribeExecution","states:StartExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:stateMachine:SSM*","arn:aws:states:*:*:execution:SSM*"]},{"Action":["resource-groups:ListGroups","resource-groups:ListGroupResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","lambda","states","resource-groups","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonSageMakerFullAccess","PolicyName":"AmazonSageMakerFullAccess","PolicyId":"ANPAJZ5IWYMXO5QDB4QOG","Path":"/","Description":"Provides full access to Amazon SageMaker via the AWS Management Console and SDK. Also provides select access to related services (e.g., S3, ECR, CloudWatch Logs).","DefaultVersionId":"v19"},"document":[{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":["arn:aws:sagemaker:*:*:domain/*","arn:aws:sagemaker:*:*:user-profile/*","arn:aws:sagemaker:*:*:app/*","arn:aws:sagemaker:*:*:flow-definition/*"],"Resource":null},{"Action":["sagemaker:CreatePresignedDomainUrl","sagemaker:DescribeDomain","sagemaker:ListDomains","sagemaker:DescribeUserProfile","sagemaker:ListUserProfiles","sagemaker:*App","sagemaker:ListApps"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sagemaker:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sagemaker:*:*:flow-definition/*"]},{"Action":["application-autoscaling:DeleteScalingPolicy","application-autoscaling:DeleteScheduledAction","application-autoscaling:DeregisterScalableTarget","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingActivities","application-autoscaling:DescribeScalingPolicies","application-autoscaling:DescribeScheduledActions","application-autoscaling:PutScalingPolicy","application-autoscaling:PutScheduledAction","application-autoscaling:RegisterScalableTarget","aws-marketplace:ViewSubscriptions","cloudformation:GetTemplateSummary","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:ListMetrics","cloudwatch:PutMetricAlarm","cloudwatch:PutMetricData","codecommit:BatchGetRepositories","codecommit:CreateRepository","codecommit:GetRepository","codecommit:List*","cognito-idp:AdminAddUserToGroup","cognito-idp:AdminCreateUser","cognito-idp:AdminDeleteUser","cognito-idp:AdminDisableUser","cognito-idp:AdminEnableUser","cognito-idp:AdminRemoveUserFromGroup","cognito-idp:CreateGroup","cognito-idp:CreateUserPool","cognito-idp:CreateUserPoolClient","cognito-idp:CreateUserPoolDomain","cognito-idp:DescribeUserPool","cognito-idp:DescribeUserPoolClient","cognito-idp:List*","cognito-idp:UpdateUserPool","cognito-idp:UpdateUserPoolClient","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:CreateVpcEndpoint","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DescribeDhcpOptions","ec2:DescribeNetworkInterfaces","ec2:DescribeRouteTables","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcEndpoints","ec2:DescribeVpcs","ecr:BatchCheckLayerAvailability","ecr:BatchGetImage","ecr:CreateRepository","ecr:Describe*","ecr:GetAuthorizationToken","ecr:GetDownloadUrlForLayer","ecr:StartImageScan","elastic-inference:Connect","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeMountTargets","fsx:DescribeFileSystems","glue:CreateJob","glue:DeleteJob","glue:GetJob*","glue:GetTable*","glue:GetWorkflowRun","glue:ResetJobBookmark","glue:StartJobRun","glue:StartWorkflowRun","glue:UpdateJob","groundtruthlabeling:*","iam:ListRoles","kms:DescribeKey","kms:ListAliases","lambda:ListFunctions","logs:CreateLogDelivery","logs:CreateLogGroup","logs:CreateLogStream","logs:DeleteLogDelivery","logs:Describe*","logs:GetLogDelivery","logs:GetLogEvents","logs:ListLogDeliveries","logs:PutLogEvents","logs:PutResourcePolicy","logs:UpdateLogDelivery","robomaker:CreateSimulationApplication","robomaker:DescribeSimulationApplication","robomaker:DeleteSimulationApplication","robomaker:CreateSimulationJob","robomaker:DescribeSimulationJob","robomaker:CancelSimulationJob","secretsmanager:ListSecrets","servicecatalog:Describe*","servicecatalog:List*","servicecatalog:ScanProvisionedProducts","servicecatalog:SearchProducts","servicecatalog:SearchProvisionedProducts","sns:ListTopics","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ecr:SetRepositoryPolicy","ecr:CompleteLayerUpload","ecr:BatchDeleteImage","ecr:UploadLayerPart","ecr:DeleteRepositoryPolicy","ecr:InitiateLayerUpload","ecr:DeleteRepository","ecr:PutImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ecr:*:*:repository/*sagemaker*"]},{"Action":["codecommit:GitPull","codecommit:GitPush"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codecommit:*:*:*sagemaker*","arn:aws:codecommit:*:*:*SageMaker*","arn:aws:codecommit:*:*:*Sagemaker*"]},{"Action":["codebuild:BatchGetBuilds","codebuild:StartBuild"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:codebuild:*:*:project/sagemaker*","arn:aws:codebuild:*:*:build/*"]},{"Action":["states:DescribeExecution","states:GetExecutionHistory","states:StartExecution","states:StopExecution","states:UpdateStateMachine"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:states:*:*:statemachine:*sagemaker*","arn:aws:states:*:*:execution:*sagemaker*:*"]},{"Action":["secretsmanager:DescribeSecret","secretsmanager:GetSecretValue","secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"]},{"Action":["secretsmanager:DescribeSecret","secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicecatalog:ProvisionProduct"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["servicecatalog:TerminateProvisionedProduct","servicecatalog:UpdateProvisionedProduct"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject","s3:AbortMultipartUpload"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*","arn:aws:s3:::*aws-glue*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets","s3:GetBucketCors","s3:PutBucketCors"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetBucketAcl","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*SageMaker*","arn:aws:s3:::*Sagemaker*","arn:aws:s3:::*sagemaker*"]},{"Action":["lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:*SageMaker*","arn:aws:lambda:*:*:function:*sagemaker*","arn:aws:lambda:*:*:function:*Sagemaker*","arn:aws:lambda:*:*:function:*LabelingFunction*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:Subscribe","sns:CreateTopic"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:*SageMaker*","arn:aws:sns:*:*:*Sagemaker*","arn:aws:sns:*:*:*sagemaker*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*"]},{"Action":["athena:ListDataCatalogs","athena:ListDatabases","athena:ListTableMetadata","athena:GetQueryExecution","athena:GetQueryResults","athena:StartQueryExecution","athena:StopQueryExecution"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["glue:CreateTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*/sagemaker_tmp_*","arn:aws:glue:*:*:table/sagemaker_featurestore/*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:DeleteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*/sagemaker_tmp_*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:GetDatabases","glue:GetTable","glue:GetTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:table/*","arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/*"]},{"Action":["glue:CreateDatabase","glue:GetDatabase"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:glue:*:*:catalog","arn:aws:glue:*:*:database/sagemaker_featurestore","arn:aws:glue:*:*:database/sagemaker_processing","arn:aws:glue:*:*:database/default","arn:aws:glue:*:*:database/sagemaker_data_wrangler"]},{"Action":["redshift-data:ExecuteStatement","redshift-data:DescribeStatement","redshift-data:CancelStatement","redshift-data:GetStatementResult","redshift-data:ListSchemas","redshift-data:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["redshift:GetClusterCredentials"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:redshift:*:*:dbuser:*/sagemaker_access*","arn:aws:redshift:*:*:dbname:*"]}],"services":["sagemaker","application-autoscaling","aws-marketplace","cloudformation","cloudwatch","codecommit","cognito-idp","ec2","ecr","elastic-inference","elasticfilesystem","fsx","glue","groundtruthlabeling","iam","kms","lambda","logs","robomaker","secretsmanager","servicecatalog","sns","tag","codebuild","states","s3","athena","redshift-data","redshift"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLaunchWizard_Fullaccess","PolicyName":"AmazonLaunchWizard_Fullaccess","PolicyId":"ANPAZKAPJZG4ABPQ7BLC2","Path":"/","Description":"Full access to AWS Launch wizard and other required services.","DefaultVersionId":"v10"},"document":[{"Action":["applicationinsights:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["resource-groups:List*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["route53:ChangeResourceRecordSets","route53:GetChange","route53:ListResourceRecordSets","route53:ListHostedZones","route53:ListHostedZonesByName"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets","s3:ListBucket","s3:GetBucketLocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:List*","cloudwatch:Get*","cloudwatch:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateVpc","ec2:CreateKeyPair","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSubnet"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:AllocateAddress","ec2:AllocateHosts","ec2:AssignPrivateIpAddresses","ec2:AssociateAddress","ec2:CreateDhcpOptions","ec2:CreateEgressOnlyInternetGateway","ec2:CreateNetworkInterface","ec2:CreateVolume","ec2:CreateVpcEndpoint","ec2:CreateTags","ec2:DeleteTags","ec2:RunInstances","ec2:StartInstances","ec2:ModifyInstanceAttribute","ec2:ModifySubnetAttribute","ec2:ModifyVolumeAttribute","ec2:ModifyVpcAttribute","ec2:AssociateDhcpOptions","ec2:AssociateSubnetCidrBlock","ec2:AttachInternetGateway","ec2:AttachNetworkInterface","ec2:AttachVolume","ec2:DeleteDhcpOptions","ec2:DeleteInternetGateway","ec2:DeleteKeyPair","ec2:DeleteNatGateway","ec2:DeleteSecurityGroup","ec2:DeleteVolume","ec2:DeleteVpc","ec2:DetachInternetGateway","ec2:DetachVolume","ec2:DeleteSnapshot","ec2:AssociateRouteTable","ec2:AssociateVpcCidrBlock","ec2:DeleteNetworkAcl","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:DeleteRoute","ec2:DeleteRouteTable","ec2:DeleteSubnet","ec2:DetachNetworkInterface","ec2:DisassociateAddress","ec2:DisassociateVpcCidrBlock","ec2:GetLaunchTemplateData","ec2:ModifyNetworkInterfaceAttribute","ec2:ModifyVolume","ec2:AuthorizeSecurityGroupEgress","ec2:GetConsoleOutput","ec2:GetPasswordData","ec2:ReleaseAddress","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","ec2:RevokeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:DisassociateIamInstanceProfile","ec2:DisassociateRouteTable","ec2:DisassociateSubnetCidrBlock","ec2:ModifyInstancePlacement","ec2:DeletePlacementGroup","ec2:CreatePlacementGroup","elasticfilesystem:DeleteFileSystem","elasticfilesystem:DeleteMountTarget","ds:AddIpRoutes","ds:CreateComputer","ds:CreateMicrosoftAD","ds:DeleteDirectory"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudformation:DescribeStack*","cloudformation:Get*","cloudformation:ListStacks","cloudformation:SignalResource","cloudformation:DeleteStack"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LaunchWizard*/*","arn:aws:cloudformation:*:*:stack/ApplicationInsights*/*"]},{"Action":["ec2:StopInstances","ec2:TerminateInstances"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateInstanceProfile","iam:DeleteInstanceProfile","iam:RemoveRoleFromInstanceProfile","iam:AddRoleToInstanceProfile"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*","arn:aws:iam::*:role/service-role/AmazonLambdaRoleForLaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["autoscaling:AttachInstances","autoscaling:CreateAutoScalingGroup","autoscaling:CreateLaunchConfiguration","autoscaling:DeleteAutoScalingGroup","autoscaling:DeleteLaunchConfiguration","autoscaling:UpdateAutoScalingGroup","logs:CreateLogStream","logs:DeleteLogGroup","logs:DeleteLogStream","logs:DescribeLog*","logs:PutLogEvents","resource-groups:CreateGroup","resource-groups:DeleteGroup","sns:ListSubscriptionsByTopic","sns:Publish","ssm:DeleteDocument","ssm:DeleteParameter*","ssm:DescribeDocument*","ssm:GetDocument","ssm:PutParameter"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:resource-groups:*:*:group/LaunchWizard*","arn:aws:sns:*:*:*","arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/LaunchWizard*","arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/LaunchWizard*","arn:aws:ssm:*:*:parameter/LaunchWizard*","arn:aws:ssm:*:*:document/LaunchWizard*","arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DeleteLogStream","logs:GetLogEvents","logs:PutLogEvents","ssm:AddTagsToResource","ssm:DescribeDocument","ssm:GetDocument","ssm:ListTagsForResource","ssm:RemoveTagsFromResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*","arn:aws:ssm:*:*:parameter/LaunchWizard*","arn:aws:ssm:*:*:document/LaunchWizard*"]},{"Action":["autoscaling:Describe*","cloudformation:DescribeAccountLimits","cloudformation:DescribeStackDriftDetectionStatus","cloudformation:List*","ds:Describe*","ds:ListAuthorizedApplications","ec2:Describe*","ec2:Get*","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetPolicyVersion","iam:GetPolicy","iam:List*","logs:CreateLogGroup","logs:GetLogDelivery","logs:GetLogRecord","logs:ListLogDeliveries","resource-groups:Get*","resource-groups:List*","servicequotas:GetServiceQuota","servicequotas:ListServiceQuotas","sns:ListSubscriptions","sns:ListTopics","ssm:CreateDocument","ssm:DescribeAutomation*","ssm:DescribeInstanceInformation","ssm:DescribeParameters","ssm:GetAutomationExecution","ssm:GetCommandInvocation","ssm:GetParameter*","ssm:GetConnectionStatus","ssm:ListCommand*","ssm:ListDocument*","ssm:ListInstanceAssociations","ssm:SendAutomationSignal","ssm:StartAutomationExecution","ssm:StopAutomationExecution","tag:Get*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:GetLog*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:*:*:*","arn:aws:logs:*:*:log-group:LaunchWizard*"]},{"Action":["cloudformation:List*","cloudformation:Describe*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudformation:*:*:stack/LaunchWizard*/"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["launchwizard:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sqs:TagQueue","sqs:GetQueueUrl","sqs:AddPermission","sqs:ListQueues","sqs:DeleteQueue","sqs:GetQueueAttributes","sqs:ListQueueTags","sqs:CreateQueue","sqs:SetQueueAttributes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sqs:*:*:LaunchWizard*"]},{"Action":["cloudwatch:PutMetricAlarm","iam:GetInstanceProfile","cloudwatch:DeleteAlarms","cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:cloudwatch:*:*:alarm:LaunchWizard*","arn:aws:iam::*:instance-profile/LaunchWizard*"]},{"Action":["cloudformation:CreateStack","route53:ListHostedZones","ec2:CreateSecurityGroup","ec2:AuthorizeSecurityGroupIngress","elasticfilesystem:DescribeFileSystems","elasticfilesystem:CreateFileSystem","elasticfilesystem:CreateMountTarget","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject","s3:PutObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::launchwizard*","arn:aws:s3:::launchwizard*/*","arn:aws:s3:::aws-sap-data-provider/config.properties"]},{"Action":["cloudformation:TagResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketVersioning","s3:DeleteBucket","lambda:CreateFunction","lambda:DeleteFunction","lambda:GetFunction","lambda:GetFunctionConfiguration","lambda:InvokeFunction"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:lambda:*:*:function:LaunchWizard*","arn:aws:s3:::launchwizard*"]},{"Action":["dynamodb:CreateTable","dynamodb:DescribeTable","dynamodb:DeleteTable"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:dynamodb:*:*:table/LaunchWizard*"]},{"Action":["secretsmanager:CreateSecret","secretsmanager:DeleteSecret","secretsmanager:TagResource","secretsmanager:UntagResource","secretsmanager:PutResourcePolicy","secretsmanager:DeleteResourcePolicy","secretsmanager:ListSecretVersionIds","secretsmanager:GetSecretValue"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:LaunchWizard*"]},{"Action":["secretsmanager:GetRandomPassword","secretsmanager:ListSecrets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CreateOpsMetadata"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DeleteOpsMetadata"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:opsmetadata/aws/ssm/LaunchWizard*"]},{"Action":["sns:CreateTopic","sns:DeleteTopic","sns:Subscribe","sns:Unsubscribe"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:sns:*:*:LaunchWizard*"]},{"Action":["fsx:UntagResource","fsx:TagResource","fsx:DeleteFileSystem","fsx:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:CreateFileSystem"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["applicationinsights","resource-groups","route53","s3","kms","cloudwatch","ec2","elasticfilesystem","ds","cloudformation","iam","autoscaling","logs","sns","ssm","servicequotas","tag","launchwizard","sqs","lambda","dynamodb","secretsmanager","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServiceQuotasFullAccess","PolicyName":"ServiceQuotasFullAccess","PolicyId":"ANPAZKAPJZG4CGHQWENW3","Path":"/","Description":"Provides full access to Service Quotas","DefaultVersionId":"v4"},"document":[{"Action":["autoscaling:DescribeAccountLimits","cloudformation:DescribeAccountLimits","cloudwatch:DescribeAlarmsForMetric","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","cloudwatch:PutMetricAlarm","dynamodb:DescribeLimits","elasticloadbalancing:DescribeAccountLimits","iam:GetAccountSummary","kinesis:DescribeLimits","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","rds:DescribeAccountAttributes","route53:GetAccountLimit","tag:GetTagKeys","tag:GetTagValues","servicequotas:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DeleteAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudwatch","dynamodb","elasticloadbalancing","iam","kinesis","organizations","rds","route53","tag","servicequotas"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess","PolicyName":"AWSAuditManagerAdministratorAccess","PolicyId":"ANPAZKAPJZG4EBAFCQQJX","Path":"/","Description":"Provides administrative access to enable or disable AWS Audit Manager, update settings, and manage assessments, controls, and frameworks","DefaultVersionId":"v1"},"document":[{"Action":["auditmanager:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:ListAccountsForParent","organizations:ListAccounts","organizations:DescribeOrganization","organizations:DescribeOrganizationalUnit","organizations:DescribeAccount","organizations:ListParents","organizations:ListChildren"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["organizations:RegisterDelegatedAdministrator","organizations:DeregisterDelegatedAdministrator","organizations:EnableAWSServiceAccess"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:GetUser","iam:ListUsers","iam:ListRoles"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["iam:DeleteServiceLinkedRole","iam:UpdateRoleDescription","iam:GetServiceLinkedRoleDeletionStatus"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/auditmanager.amazonaws.com/AWSServiceRoleForAuditManager*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListKeys","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["sns:ListTopics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:PutRule"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["events:DeleteRule","events:DescribeRule","events:EnableRule","events:DisableRule","events:ListTargetsByRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:events:*:*:rule/AuditManagerSecurityHubFindingsReceiver"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["auditmanager","organizations","iam","s3","kms","sns","events","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonSSMPatchAssociation","PolicyName":"AmazonSSMPatchAssociation","PolicyId":"ANPAZKAPJZG4EWLEL5ZX7","Path":"/","Description":"Provide access to child instances for patch association operation.","DefaultVersionId":"v1"},"document":[{"Action":["ssm:DescribeEffectivePatchesForPatchBaseline"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:patchbaseline/*"]},{"Action":["ssm:GetPatchBaseline"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:patchbaseline/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:DescribePatchBaselines"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["ssm","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonElasticFileSystemServiceRolePolicy","PolicyName":"AmazonElasticFileSystemServiceRolePolicy","PolicyId":"ANPAZKAPJZG4FXCJYWBN7","Path":"/aws-service-role/","Description":"Allows Amazon Elastic File System to manage AWS resources on your behalf","DefaultVersionId":"v3"},"document":[{"Action":["backup-storage:MountCapsule","ec2:CreateNetworkInterface","ec2:DeleteNetworkInterface","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeNetworkInterfaceAttribute","ec2:ModifyNetworkInterfaceAttribute","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:kms:*:*:key/*"]},{"Action":["backup:CreateBackupVault","backup:PutBackupVaultAccessPolicy"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-vault:aws/efs/automatic-backup-vault"]},{"Action":["backup:CreateBackupPlan","backup:CreateBackupSelection"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:backup:*:*:backup-plan:*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/backup.amazonaws.com/AWSServiceRoleForBackup"]}],"services":["backup-storage","ec2","tag","kms","backup","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess","PolicyName":"AWSLambda_ReadOnlyAccess","PolicyId":"ANPAZKAPJZG4IERNVMNPE","Path":"/","Description":"Grants read-only access to AWS Lambda service, AWS Lambda console features, and other related AWS services.","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources","cloudwatch:GetMetricData","cloudwatch:ListMetrics","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:ListAliases","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","logs:DescribeLogGroups","lambda:Get*","lambda:List*","states:DescribeStateMachine","states:ListStateMachines","tag:GetResources","xray:GetTraceSummaries","xray:BatchGetTraces"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/lambda/*"]}],"services":["cloudformation","cloudwatch","ec2","kms","iam","logs","lambda","states","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/ServiceQuotasReadOnlyAccess","PolicyName":"ServiceQuotasReadOnlyAccess","PolicyId":"ANPAZKAPJZG4ITU2HGGUJ","Path":"/","Description":"Provides read only access to Service Quotas","DefaultVersionId":"v2"},"document":[{"Action":["autoscaling:DescribeAccountLimits","cloudformation:DescribeAccountLimits","cloudwatch:DescribeAlarmsForMetric","cloudwatch:DescribeAlarms","cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics","dynamodb:DescribeLimits","elasticloadbalancing:DescribeAccountLimits","iam:GetAccountSummary","kinesis:DescribeLimits","organizations:DescribeAccount","organizations:DescribeOrganization","organizations:ListAWSServiceAccessForOrganization","rds:DescribeAccountAttributes","route53:GetAccountLimit","tag:GetTagKeys","tag:GetTagValues","servicequotas:GetAssociationForServiceQuotaTemplate","servicequotas:GetAWSDefaultServiceQuota","servicequotas:GetRequestedServiceQuotaChange","servicequotas:GetServiceQuota","servicequotas:GetServiceQuotaIncreaseRequestFromTemplate","servicequotas:ListAWSDefaultServiceQuotas","servicequotas:ListRequestedServiceQuotaChangeHistory","servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota","servicequotas:ListServices","servicequotas:ListServiceQuotas","servicequotas:ListServiceQuotaIncreaseRequestsInTemplate","servicequotas:ListTagsForResource"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["autoscaling","cloudformation","cloudwatch","dynamodb","elasticloadbalancing","iam","kinesis","organizations","rds","route53","tag","servicequotas"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/CloudWatchAutomaticDashboardsAccess","PolicyName":"CloudWatchAutomaticDashboardsAccess","PolicyId":"ANPAZKAPJZG4JFCXGSE2Q","Path":"/","Description":"Provides access to the non-CloudWatch APIs used to display CloudWatch Automatic Dashboards, including the contents of objects such as Lambda functions","DefaultVersionId":"v4"},"document":[{"Action":["autoscaling:DescribeAutoScalingGroups","cloudfront:GetDistribution","cloudfront:ListDistributions","dynamodb:DescribeTable","dynamodb:ListTables","ec2:DescribeInstances","ec2:DescribeVolumes","ecs:DescribeClusters","ecs:DescribeContainerInstances","ecs:ListClusters","ecs:ListContainerInstances","ecs:ListServices","elasticache:DescribeCacheClusters","elasticbeanstalk:DescribeEnvironments","elasticfilesystem:DescribeFileSystems","elasticloadbalancing:DescribeLoadBalancers","kinesis:DescribeStream","kinesis:ListStreams","lambda:GetFunction","lambda:ListFunctions","rds:DescribeDBClusters","rds:DescribeDBInstances","resource-groups:ListGroupResources","resource-groups:ListGroups","route53:GetHealthCheck","route53:ListHealthChecks","s3:ListAllMyBuckets","s3:ListBucket","sns:ListTopics","sqs:GetQueueAttributes","sqs:GetQueueUrl","sqs:ListQueues","synthetics:DescribeCanariesLastRun","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["apigateway:GET"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:apigateway:*::/restapis*"]}],"services":["autoscaling","cloudfront","dynamodb","ec2","ecs","elasticache","elasticbeanstalk","elasticfilesystem","elasticloadbalancing","kinesis","lambda","rds","resource-groups","route53","s3","sns","sqs","synthetics","tag","apigateway"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AmazonFISServiceRolePolicy","PolicyName":"AmazonFISServiceRolePolicy","PolicyId":"ANPAZKAPJZG4JLZR2TQJD","Path":"/aws-service-role/","Description":"Policy to enable AWS FIS to manage monitoring and resource selection for experiments.","DefaultVersionId":"v2"},"document":[{"Action":["events:PutRule","events:DeleteRule","events:DescribeRule","events:PutTargets","events:RemoveTargets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:DescribeAlarms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DescribeInstances","iam:GetUser","iam:GetRole","iam:ListUsers","iam:ListRoles","rds:DescribeDBClusters","rds:DescribeDBInstances","ecs:DescribeClusters","eks:DescribeNodegroup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["events","tag","cloudwatch","ec2","iam","rds","ecs","eks"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSIoTSiteWiseConsoleFullAccess","PolicyName":"AWSIoTSiteWiseConsoleFullAccess","PolicyId":"ANPAZKAPJZG4K7KP5VA7F","Path":"/","Description":"Provides full access to manage AWS IoT SiteWise using the AWS Management Console. Note this policy also grants access to create and list data stores used with AWS IoT SiteWise (e.g. AWS IoT Analytics), access to list and view AWS IoT Greengrass resources, list and modify AWS Secrets Manager secrets, retrieve AWS IoT thing shadows, list resources with specific tags, and create and use a service-linked role for AWS IoT SiteWise.","DefaultVersionId":"v1"},"document":[{"Action":["iotsitewise:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iotanalytics:List*","iotanalytics:Describe*","iotanalytics:Create*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iot:DescribeEndpoint","iot:GetThingShadow"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["greengrass:GetGroup","greengrass:GetGroupVersion","greengrass:GetCoreDefinitionVersion","greengrass:ListGroups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:ListSecrets","secretsmanager:CreateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["secretsmanager:UpdateSecret"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:secretsmanager:*:*:secret:greengrass-*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:CreateServiceLinkedRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/iotsitewise.amazonaws.com/AWSServiceRoleForIoTSiteWise*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/aws-service-role/iotsitewise.amazonaws.com/AWSServiceRoleForIoTSiteWise*"]}],"services":["iotsitewise","iotanalytics","iot","greengrass","secretsmanager","tag","iam"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupOperatorAccess","PolicyName":"AWSBackupOperatorAccess","PolicyId":"ANPAZKAPJZG4KHXVYMY4O","Path":"/","Description":"This policy grants users permissions to assign AWS resources to backup plans, create on-demand backups, and restore backups. This policy does not allow the user to create or edit backup plans or to delete scheduled backups after they are created.","DefaultVersionId":"v7"},"document":[{"Action":["backup:Get*","backup:List*","backup:Describe*","backup:CreateBackupSelection","backup:DeleteBackupSelection","backup:GetRecoveryPointRestoreMetadata","backup:StartBackupJob","backup:StartRestoreJob","backup:StartCopyJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBSnapshots","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:DescribeDBClusterSnapshots","rds:DescribeDBClusters","rds:DescribeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:file-system/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackupTest","PolicyName":"AWSBackupServiceLinkedRolePolicyForBackupTest","PolicyId":"ANPAZKAPJZG4KMHRZD5LV","Path":"/aws-service-role/","Description":"Provides AWS Backup permission to create backups on your behalf across AWS services","DefaultVersionId":"v1"},"document":[{"Action":["elasticfilesystem:Backup","elasticfilesystem:DescribeTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["elasticfilesystem","tag"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSBackupFullAccess","PolicyName":"AWSBackupFullAccess","PolicyId":"ANPAZKAPJZG4LL52EIPJX","Path":"/","Description":"This policy is for backup administrators, granting full access to AWS Backup operations, including creating or editing backup plans, assigning AWS resources to backup plans, deleting backups, and restoring backups.","DefaultVersionId":"v7"},"document":[{"Action":["backup:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["backup-storage:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DescribeDBSnapshots","rds:ListTagsForResource","rds:DescribeDBInstances","rds:describeDBEngineVersions","rds:describeOptionGroups","rds:describeOrderableDBInstanceOptions","rds:describeDBSubnetGroups","rds:describeDBClusterSnapshots","rds:describeDBClusters","rds:describeDBParameterGroups","rds:DescribeDBClusterParameterGroups","rds:DescribeDBInstanceAutomatedBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:DeleteDBSnapshot","rds:DeleteDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:ListBackups","dynamodb:ListTables"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dynamodb:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["elasticfilesystem:DescribeFilesystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeVolumes","ec2:describeAvailabilityZones","ec2:DescribeVpcs","ec2:DescribeAccountAttributes","ec2:DescribeSecurityGroups","ec2:DescribeImages","ec2:DescribeSubnets","ec2:DescribePlacementGroups","ec2:DescribeInstances","ec2:DescribeInstanceTypes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeleteSnapshot","ec2:DeregisterImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues","tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["storagegateway:DescribeCachediSCSIVolumes","storagegateway:DescribeStorediSCSIVolumes"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*/volume/*"]},{"Action":["storagegateway:ListGateways"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:*"]},{"Action":["storagegateway:DescribeGatewayInformation","storagegateway:ListVolumes","storagegateway:ListLocalDisks"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:storagegateway:*:*:gateway/*"]},{"Action":["iam:ListRoles","iam:GetRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:iam::*:role/*AwsBackup*","arn:aws:iam::*:role/*AWSBackup*"]},{"Action":["organizations:DescribeOrganization"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListKeys","kms:DescribeKey","kms:GenerateDataKey","kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:CancelCommand","ssm:GetCommandInvocation"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ssm:SendCommand"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot","arn:aws:ec2:*:*:instance/*"]},{"Action":["fsx:DescribeFileSystems"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DescribeBackups"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]},{"Action":["ds:DescribeDirectories"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["backup","backup-storage","rds","dynamodb","elasticfilesystem","ec2","tag","storagegateway","iam","organizations","kms","ssm","fsx","ds"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSDataExchangeProviderFullAccess","PolicyName":"AWSDataExchangeProviderFullAccess","PolicyId":"ANPAZKAPJZG4MQSUGZZPZ","Path":"/","Description":"Grants data provider access to AWS Data Exchange and AWS Marketplace actions using the AWS Management Console and SDK. It also provides select access to related services needed to take full advantage of AWS Data Exchange. ","DefaultVersionId":"v7"},"document":[{"Action":["dataexchange:CreateDataSet","dataexchange:CreateRevision","dataexchange:CreateAsset","dataexchange:Get*","dataexchange:Update*","dataexchange:List*","dataexchange:Delete*","dataexchange:TagResource","dataexchange:UntagResource","dataexchange:PublishDataSet","tag:GetTagKeys","tag:GetTagValues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["dataexchange:CreateJob","dataexchange:StartJob","dataexchange:CancelJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetObject"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:PutObject","s3:PutObjectAcl"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::*aws-data-exchange*"]},{"Action":["s3:GetBucketLocation","s3:ListBucket","s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["aws-marketplace:DescribeEntity","aws-marketplace:ListEntities","aws-marketplace:DescribeChangeSet","aws-marketplace:ListChangeSets","aws-marketplace:StartChangeSet","aws-marketplace:CancelChangeSet","aws-marketplace:GetAgreementApprovalRequest","aws-marketplace:ListAgreementApprovalRequests","aws-marketplace:AcceptAgreementApprovalRequest","aws-marketplace:RejectAgreementApprovalRequest","aws-marketplace:UpdateAgreementApprovalRequest","aws-marketplace:SearchAgreements","aws-marketplace:GetAgreementTerms"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:DescribeKey","kms:ListAliases","kms:ListKeys"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["dataexchange","tag","s3","aws-marketplace","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AmazonLookoutVisionConsoleFullAccess","PolicyName":"AmazonLookoutVisionConsoleFullAccess","PolicyId":"ANPAZKAPJZG4NJJ7RFZ5A","Path":"/","Description":"Provides full access to Amazon Lookout for Vision and scoped access to required service and console dependencies.","DefaultVersionId":"v1"},"document":[{"Action":["lookoutvision:*"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:ListAllMyBuckets"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["s3:CreateBucket","s3:PutBucketVersioning","s3:PutLifecycleConfiguration","s3:PutEncryptionConfiguration","s3:PutBucketPublicAccessBlock"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::lookoutvision-*"]},{"Action":["s3:ListBucket","s3:GetBucketLocation","s3:GetBucketVersioning"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::lookoutvision-*"]},{"Action":["s3:GetObject","s3:GetObjectVersion","s3:PutObject","s3:AbortMultipartUpload","s3:ListMultipartUploadParts"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:s3:::lookoutvision-*/*"]},{"Action":["groundtruthlabeling:RunGenerateManifestByCrawlingJob","groundtruthlabeling:AssociatePatchToManifestJob","groundtruthlabeling:DescribeConsoleJob"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["cloudwatch:GetMetricData","cloudwatch:GetMetricStatistics"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["tag:GetTagKeys","tag:GetTagValues"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListAliases"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["lookoutvision","s3","groundtruthlabeling","cloudwatch","tag","kms"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackup","PolicyName":"AWSBackupServiceLinkedRolePolicyForBackup","PolicyId":"ANPAZKAPJZG4ONJBD4ZY2","Path":"/aws-service-role/","Description":"Provides AWS Backup permission to create backups on your behalf across AWS services","DefaultVersionId":"v3"},"document":[{"Action":["elasticfilesystem:Backup","elasticfilesystem:DescribeTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:elasticfilesystem:*:*:file-system/*"]},{"Action":["tag:GetResources"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CreateTags"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::image/*","arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:DescribeSnapshots","ec2:DescribeImages","rds:DescribeDBSnapshots","rds:DescribeDBClusterSnapshots"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:CopySnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:ec2:*::snapshot/*"]},{"Action":["ec2:CopyImage"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["ec2:DeregisterImage","ec2:DeleteSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["rds:AddTagsToResource","rds:CopyDBSnapshot","rds:DeleteDBSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:snapshot:awsbackup:*"]},{"Action":["rds:AddTagsToResource","rds:CopyDBClusterSnapshot","rds:DeleteDBClusterSnapshot"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:rds:*:*:cluster-snapshot:awsbackup:*"]},{"Action":["kms:DescribeKey"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:ListGrants","kms:ReEncryptFrom","kms:GenerateDataKeyWithoutPlaintext"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["kms:CreateGrant"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["fsx:CopyBackup","fsx:TagResource","fsx:DescribeBackups","fsx:DeleteBackup"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:fsx:*:*:backup/*"]}],"services":["elasticfilesystem","tag","ec2","rds","kms","fsx"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/AWSLambda_FullAccess","PolicyName":"AWSLambda_FullAccess","PolicyId":"ANPAZKAPJZG4OXQPYWZ5D","Path":"/","Description":"Grants full access to AWS Lambda service, AWS Lambda console features, and other related AWS services.","DefaultVersionId":"v1"},"document":[{"Action":["cloudformation:DescribeStacks","cloudformation:ListStackResources","cloudwatch:ListMetrics","cloudwatch:GetMetricData","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ec2:DescribeVpcs","kms:ListAliases","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:ListAttachedRolePolicies","iam:ListRolePolicies","iam:ListRoles","lambda:*","logs:DescribeLogGroups","states:DescribeStateMachine","states:ListStateMachines","tag:GetResources","xray:GetTraceSummaries","xray:BatchGetTraces"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["iam:PassRole"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]},{"Action":["logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["arn:aws:logs:*:*:log-group:/aws/lambda/*"]}],"services":["cloudformation","cloudwatch","ec2","kms","iam","lambda","logs","states","tag","xray"]},{"policy":{"Arn":"arn:aws:iam::aws:policy/service-role/AWS_ConfigRole","PolicyName":"AWS_ConfigRole","PolicyId":"ANPAZKAPJZG4PP7QZ4FBG","Path":"/service-role/","Description":"Default policy for AWS Config service role. Provides permissions required for AWS Config to track changes to your AWS resources.","DefaultVersionId":"v6"},"document":[{"Action":["access-analyzer:GetAnalyzer","access-analyzer:ListAnalyzers","access-analyzer:ListArchiveRules","access-analyzer:ListTagsForResource","acm:DescribeCertificate","acm:ListCertificates","acm:ListTagsForCertificate","apigateway:GET","application-autoscaling:DescribeScalableTargets","application-autoscaling:DescribeScalingPolicies","autoscaling:DescribeAutoScalingGroups","autoscaling:DescribeLaunchConfigurations","autoscaling:DescribeLifecycleHooks","autoscaling:DescribePolicies","autoscaling:DescribeScheduledActions","autoscaling:DescribeTags","backup:DescribeBackupVault","backup:DescribeRecoveryPoint","backup:GetBackupPlan","backup:GetBackupSelection","backup:GetBackupVaultAccessPolicy","backup:GetBackupVaultNotifications","backup:ListBackupPlans","backup:ListBackupSelections","backup:ListBackupVaults","backup:ListRecoveryPointsByBackupVault","backup:ListTags","cloudformation:DescribeType","cloudformation:ListTypes","cloudfront:ListDistributions","cloudfront:ListTagsForResource","cloudtrail:DescribeTrails","cloudtrail:GetEventSelectors","cloudtrail:GetTrailStatus","cloudtrail:ListTags","cloudwatch:DescribeAlarms","codepipeline:GetPipeline","codepipeline:GetPipelineState","codepipeline:ListPipelines","config:BatchGet*","config:Describe*","config:Get*","config:List*","config:Put*","config:Select*","dax:DescribeClusters","dms:DescribeReplicationInstances","dms:DescribeReplicationSubnetGroups","dms:ListTagsForResource","dynamodb:DescribeContinuousBackups","dynamodb:DescribeLimits","dynamodb:DescribeTable","dynamodb:ListTables","dynamodb:ListTagsOfResource","ec2:Describe*","ec2:GetEbsEncryptionByDefault","ecr:DescribeRepositories","ecr:GetLifecyclePolicy","ecr:GetRepositoryPolicy","ecr:ListTagsForResource","ecs:DescribeClusters","ecs:DescribeServices","ecs:DescribeTaskDefinition","ecs:DescribeTaskSets","ecs:ListClusters","ecs:ListServices","ecs:ListTagsForResource","ecs:ListTaskDefinitions","eks:DescribeCluster","eks:DescribeNodegroup","eks:ListClusters","eks:ListNodegroups","elasticache:DescribeCacheClusters","elasticache:DescribeCacheParameterGroups","elasticache:DescribeCacheSubnetGroups","elasticache:DescribeReplicationGroups","elasticache:ListTagsForResource","elasticfilesystem:DescribeAccessPoints","elasticfilesystem:DescribeBackupPolicy","elasticfilesystem:DescribeFileSystemPolicy","elasticfilesystem:DescribeFileSystems","elasticfilesystem:DescribeLifecycleConfiguration","elasticfilesystem:DescribeMountTargets","elasticfilesystem:DescribeMountTargetSecurityGroups","elasticloadbalancing:DescribeListeners","elasticloadbalancing:DescribeLoadBalancerAttributes","elasticloadbalancing:DescribeLoadBalancerPolicies","elasticloadbalancing:DescribeLoadBalancers","elasticloadbalancing:DescribeRules","elasticloadbalancing:DescribeTags","elasticmapreduce:DescribeCluster","elasticmapreduce:DescribeSecurityConfiguration","elasticmapreduce:DescribeStep","elasticmapreduce:GetBlockPublicAccessConfiguration","elasticmapreduce:GetManagedScalingPolicy","elasticmapreduce:ListClusters","elasticmapreduce:ListInstanceFleets","elasticmapreduce:ListInstanceGroups","elasticmapreduce:ListInstances","elasticmapreduce:ListSecurityConfigurations","elasticmapreduce:ListSteps","es:DescribeElasticsearchDomain","es:DescribeElasticsearchDomains","es:ListDomainNames","es:ListTags","guardduty:GetDetector","guardduty:GetFindings","guardduty:GetMasterAccount","guardduty:ListDetectors","guardduty:ListFindings","iam:GenerateCredentialReport","iam:GetAccountAuthorizationDetails","iam:GetAccountPasswordPolicy","iam:GetAccountSummary","iam:GetCredentialReport","iam:GetGroup","iam:GetGroupPolicy","iam:GetPolicy","iam:GetPolicyVersion","iam:GetRole","iam:GetRolePolicy","iam:GetUser","iam:GetUserPolicy","iam:ListAttachedGroupPolicies","iam:ListAttachedRolePolicies","iam:ListAttachedUserPolicies","iam:ListEntitiesForPolicy","iam:ListGroupPolicies","iam:ListGroupsForUser","iam:ListInstanceProfilesForRole","iam:ListPolicyVersions","iam:ListRolePolicies","iam:ListUserPolicies","iam:ListVirtualMFADevices","kinesis:DescribeStreamConsumer","kinesis:DescribeStreamSummary","kinesis:ListStreamConsumers","kinesis:ListStreams","kinesis:ListTagsForStream","kms:DescribeKey","kms:GetKeyPolicy","kms:GetKeyRotationStatus","kms:ListKeys","kms:ListResourceTags","lambda:GetAlias","lambda:GetFunction","lambda:GetFunctionCodeSigningConfig","lambda:GetPolicy","lambda:ListAliases","lambda:ListFunctions","lambda:ListVersionsByFunction","logs:DescribeLogGroups","network-firewall:DescribeLoggingConfiguration","network-firewall:ListFirewalls","organizations:DescribeOrganization","rds:DescribeDBClusters","rds:DescribeDBClusterSnapshotAttributes","rds:DescribeDBClusterSnapshots","rds:DescribeDBEngineVersions","rds:DescribeDBInstances","rds:DescribeDBSecurityGroups","rds:DescribeDBSnapshotAttributes","rds:DescribeDBSnapshots","rds:DescribeDBSubnetGroups","rds:DescribeEventSubscriptions","rds:ListTagsForResource","redshift:DescribeClusterParameterGroups","redshift:DescribeClusterParameters","redshift:DescribeClusters","redshift:DescribeClusterSecurityGroups","redshift:DescribeClusterSnapshots","redshift:DescribeClusterSubnetGroups","redshift:DescribeEventSubscriptions","redshift:DescribeLoggingStatus","route53:GetHealthCheck","route53:GetHostedZone","route53:ListHealthChecks","route53:ListHostedZones","route53:ListHostedZonesByName","route53:ListQueryLoggingConfigs","route53:ListResourceRecordSets","route53:ListTagsForResource","s3:GetAccelerateConfiguration","s3:GetAccessPoint","s3:GetAccessPointPolicy","s3:GetAccessPointPolicyStatus","s3:GetAccountPublicAccessBlock","s3:GetBucketAcl","s3:GetBucketCORS","s3:GetBucketLocation","s3:GetBucketLogging","s3:GetBucketNotification","s3:GetBucketObjectLockConfiguration","s3:GetBucketPolicy","s3:GetBucketPublicAccessBlock","s3:GetBucketRequestPayment","s3:GetBucketTagging","s3:GetBucketVersioning","s3:GetBucketWebsite","s3:GetEncryptionConfiguration","s3:GetLifecycleConfiguration","s3:GetReplicationConfiguration","s3:ListAccessPoints","s3:ListAllMyBuckets","s3:ListBucket","sagemaker:DescribeCodeRepository","sagemaker:DescribeEndpointConfig","sagemaker:DescribeNotebookInstance","sagemaker:ListCodeRepositories","sagemaker:ListEndpointConfigs","sagemaker:ListNotebookInstances","sagemaker:ListTags","secretsmanager:ListSecrets","secretsmanager:ListSecretVersionIds","securityhub:DescribeHub","shield:DescribeDRTAccess","shield:DescribeProtection","shield:DescribeSubscription","sns:GetTopicAttributes","sns:ListSubscriptions","sns:ListTagsForResource","sns:ListTopics","sqs:GetQueueAttributes","sqs:ListQueues","sqs:ListQueueTags","ssm:DescribeAutomationExecutions","ssm:DescribeDocument","ssm:DescribeDocumentPermission","ssm:GetAutomationExecution","ssm:GetDocument","ssm:ListDocuments","storagegateway:ListGateways","storagegateway:ListVolumes","support:DescribeCases","tag:GetResources","waf-regional:GetLoggingConfiguration","waf-regional:GetWebACL","waf-regional:GetWebACLForResource","waf:GetLoggingConfiguration","waf:GetWebACL","wafv2:GetLoggingConfiguration"],"Effect":"Allow","NotAction":null,"NotResource":null,"Resource":["*"]}],"services":["access-analyzer","acm","apigateway","application-autoscaling","autoscaling","backup","cloudformation","cloudfront","cloudtrail","cloudwatch","codepipeline","config","dax","dms","dynamodb","ec2","ecr","ecs","eks","elasticache","elasticfilesystem","elasticloadbalancing","elasticmapreduce","es","guardduty","iam","kinesis","kms","lambda","logs","network-firewall","organizations","rds","redshift","route53","s3","sagemaker","secretsmanager","securityhub","shield","sns","sqs","ssm","storagegateway","support","tag","waf-regional","waf","wafv2"]}]}},"staticQueryHashes":["256249292"]}